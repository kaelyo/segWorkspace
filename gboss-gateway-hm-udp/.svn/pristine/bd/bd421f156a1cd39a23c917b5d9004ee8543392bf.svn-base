// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GBoss.proto

package cc.chinagps.gateway.buff;

public final class GBossDataBuff {
  private GBossDataBuff() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MapEntryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string key = 1;
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    java.lang.String getKey();
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    // required string value = 2;
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    java.lang.String getValue();
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code gboss.MapEntry}
   *
   * <pre>
   *
   * 附加信息
   * </pre>
   */
  public static final class MapEntry extends
      com.google.protobuf.GeneratedMessage
      implements MapEntryOrBuilder {
    // Use MapEntry.newBuilder() to construct.
    private MapEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapEntry defaultInstance;
    public static MapEntry getDefaultInstance() {
      return defaultInstance;
    }

    public MapEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              key_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_MapEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_MapEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.class, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<MapEntry> PARSER =
        new com.google.protobuf.AbstractParser<MapEntry>() {
      public MapEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.Object value_;
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      key_ = "";
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.MapEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.MapEntry}
     *
     * <pre>
     *
     * 附加信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_MapEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_MapEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.class, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_MapEntry_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry build() {
        cc.chinagps.gateway.buff.GBossDataBuff.MapEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.MapEntry result = new cc.chinagps.gateway.buff.GBossDataBuff.MapEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.MapEntry) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.MapEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.MapEntry other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.getDefaultInstance()) return this;
        if (other.hasKey()) {
          bitField0_ |= 0x00000001;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.MapEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.MapEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string key = 1;
      private java.lang.Object key_ = "";
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }

      // required string value = 2;
      private java.lang.Object value_ = "";
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.MapEntry)
    }

    static {
      defaultInstance = new MapEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.MapEntry)
  }

  public interface OBDInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 remainOil = 1;
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    boolean hasRemainOil();
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    int getRemainOil();

    // optional int32 remainPercentOil = 2;
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    boolean hasRemainPercentOil();
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    int getRemainPercentOil();

    // optional int32 averageOil = 3;
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    boolean hasAverageOil();
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    int getAverageOil();

    // optional int32 hourOil = 4;
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *瞬时油耗（单位：0.01升/小时）
     * </pre>
     */
    boolean hasHourOil();
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *瞬时油耗（单位：0.01升/小时）
     * </pre>
     */
    int getHourOil();

    // optional int32 totalDistance = 5;
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    boolean hasTotalDistance();
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    int getTotalDistance();

    // optional int32 waterTemperature = 6;
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *冷却液温度,水温（单位：℃）
     * </pre>
     */
    boolean hasWaterTemperature();
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *冷却液温度,水温（单位：℃）
     * </pre>
     */
    int getWaterTemperature();

    // optional int32 reviseOil = 7;
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    boolean hasReviseOil();
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    int getReviseOil();

    // optional int32 rotationSpeed = 8;
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    boolean hasRotationSpeed();
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    int getRotationSpeed();

    // optional int32 intakeAirTemperature = 9;
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    boolean hasIntakeAirTemperature();
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    int getIntakeAirTemperature();

    // optional int32 airDischange = 10;
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    boolean hasAirDischange();
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    int getAirDischange();

    // repeated .gboss.MapEntry otherInfo = 11;
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> 
        getOtherInfoList();
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getOtherInfo(int index);
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    int getOtherInfoCount();
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
        getOtherInfoOrBuilderList();
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder getOtherInfoOrBuilder(
        int index);

    // optional string callLetter = 12;
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // optional int64 gpsTime = 13;
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    boolean hasGpsTime();
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    long getGpsTime();

    // optional int32 speed = 14;
    /**
     * <code>optional int32 speed = 14;</code>
     *
     * <pre>
     *OBD速度（单位：0.1千米/小时）
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional int32 speed = 14;</code>
     *
     * <pre>
     *OBD速度（单位：0.1千米/小时）
     * </pre>
     */
    int getSpeed();

    // optional int32 remainDistance = 15;
    /**
     * <code>optional int32 remainDistance = 15;</code>
     *
     * <pre>
     *续航(剩余)里程（单位：米）
     * </pre>
     */
    boolean hasRemainDistance();
    /**
     * <code>optional int32 remainDistance = 15;</code>
     *
     * <pre>
     *续航(剩余)里程（单位：米）
     * </pre>
     */
    int getRemainDistance();

    // optional int32 unitType = 16;
    /**
     * <code>optional int32 unitType = 16;</code>
     *
     * <pre>
     *终端协议类型 
     * </pre>
     */
    boolean hasUnitType();
    /**
     * <code>optional int32 unitType = 16;</code>
     *
     * <pre>
     *终端协议类型 
     * </pre>
     */
    int getUnitType();

    // optional int32 history = 17;
    /**
     * <code>optional int32 history = 17;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    boolean hasHistory();
    /**
     * <code>optional int32 history = 17;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    int getHistory();

    // optional int32 batteryVoltage = 18;
    /**
     * <code>optional int32 batteryVoltage = 18;</code>
     *
     * <pre>
     *电瓶电压（单位：0.01V，原为V）
     * </pre>
     */
    boolean hasBatteryVoltage();
    /**
     * <code>optional int32 batteryVoltage = 18;</code>
     *
     * <pre>
     *电瓶电压（单位：0.01V，原为V）
     * </pre>
     */
    int getBatteryVoltage();

    // optional int32 engineLoad = 19;
    /**
     * <code>optional int32 engineLoad = 19;</code>
     *
     * <pre>
     *发动机负荷（单位：百分之xx）
     * </pre>
     */
    boolean hasEngineLoad();
    /**
     * <code>optional int32 engineLoad = 19;</code>
     *
     * <pre>
     *发动机负荷（单位：百分之xx）
     * </pre>
     */
    int getEngineLoad();

    // optional int32 gears = 20;
    /**
     * <code>optional int32 gears = 20;</code>
     *
     * <pre>
     *下面是新能源车增加的部分
     * </pre>
     */
    boolean hasGears();
    /**
     * <code>optional int32 gears = 20;</code>
     *
     * <pre>
     *下面是新能源车增加的部分
     * </pre>
     */
    int getGears();

    // optional bool isdrive = 21;
    /**
     * <code>optional bool isdrive = 21;</code>
     *
     * <pre>
     *驱动是否有效
     * </pre>
     */
    boolean hasIsdrive();
    /**
     * <code>optional bool isdrive = 21;</code>
     *
     * <pre>
     *驱动是否有效
     * </pre>
     */
    boolean getIsdrive();

    // optional int32 driveratio = 22;
    /**
     * <code>optional int32 driveratio = 22;</code>
     *
     * <pre>
     *加速踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
     * </pre>
     */
    boolean hasDriveratio();
    /**
     * <code>optional int32 driveratio = 22;</code>
     *
     * <pre>
     *加速踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
     * </pre>
     */
    int getDriveratio();

    // optional bool isbreak = 23;
    /**
     * <code>optional bool isbreak = 23;</code>
     *
     * <pre>
     *制动是否有效
     * </pre>
     */
    boolean hasIsbreak();
    /**
     * <code>optional bool isbreak = 23;</code>
     *
     * <pre>
     *制动是否有效
     * </pre>
     */
    boolean getIsbreak();

    // optional int32 breakratio = 24;
    /**
     * <code>optional int32 breakratio = 24;</code>
     *
     * <pre>
     *制动踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
     * </pre>
     */
    boolean hasBreakratio();
    /**
     * <code>optional int32 breakratio = 24;</code>
     *
     * <pre>
     *制动踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
     * </pre>
     */
    int getBreakratio();

    // optional int32 chargestatus = 25;
    /**
     * <code>optional int32 chargestatus = 25;</code>
     *
     * <pre>
     *充放电状态：1:充电, 2:放电, -1:无效数据
     * </pre>
     */
    boolean hasChargestatus();
    /**
     * <code>optional int32 chargestatus = 25;</code>
     *
     * <pre>
     *充放电状态：1:充电, 2:放电, -1:无效数据
     * </pre>
     */
    int getChargestatus();

    // optional int32 motorctrltemperature = 26;
    /**
     * <code>optional int32 motorctrltemperature = 26;</code>
     *
     * <pre>
     *电机控制器温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    boolean hasMotorctrltemperature();
    /**
     * <code>optional int32 motorctrltemperature = 26;</code>
     *
     * <pre>
     *电机控制器温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    int getMotorctrltemperature();

    // optional int32 motortemperature = 27;
    /**
     * <code>optional int32 motortemperature = 27;</code>
     *
     * <pre>
     *电机温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    boolean hasMotortemperature();
    /**
     * <code>optional int32 motortemperature = 27;</code>
     *
     * <pre>
     *电机温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    int getMotortemperature();

    // optional int32 motorspeed = 28;
    /**
     * <code>optional int32 motorspeed = 28;</code>
     *
     * <pre>
     *电机转速
     * </pre>
     */
    boolean hasMotorspeed();
    /**
     * <code>optional int32 motorspeed = 28;</code>
     *
     * <pre>
     *电机转速
     * </pre>
     */
    int getMotorspeed();

    // optional int32 motorvoltage = 29;
    /**
     * <code>optional int32 motorvoltage = 29;</code>
     *
     * <pre>
     *电机电压（单位：0.1V)
     * </pre>
     */
    boolean hasMotorvoltage();
    /**
     * <code>optional int32 motorvoltage = 29;</code>
     *
     * <pre>
     *电机电压（单位：0.1V)
     * </pre>
     */
    int getMotorvoltage();

    // optional int32 motorcurrent = 30;
    /**
     * <code>optional int32 motorcurrent = 30;</code>
     *
     * <pre>
     *电机电流（单位：1毫安)
     * </pre>
     */
    boolean hasMotorcurrent();
    /**
     * <code>optional int32 motorcurrent = 30;</code>
     *
     * <pre>
     *电机电流（单位：1毫安)
     * </pre>
     */
    int getMotorcurrent();

    // optional int32 aircontemperature = 31;
    /**
     * <code>optional int32 aircontemperature = 31;</code>
     *
     * <pre>
     *空调设定温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    boolean hasAircontemperature();
    /**
     * <code>optional int32 aircontemperature = 31;</code>
     *
     * <pre>
     *空调设定温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    int getAircontemperature();

    // optional int32 batterytotalvoltage = 32;
    /**
     * <code>optional int32 batterytotalvoltage = 32;</code>
     *
     * <pre>
     *动力蓄电池总电压（单位：0.1V)
     * </pre>
     */
    boolean hasBatterytotalvoltage();
    /**
     * <code>optional int32 batterytotalvoltage = 32;</code>
     *
     * <pre>
     *动力蓄电池总电压（单位：0.1V)
     * </pre>
     */
    int getBatterytotalvoltage();

    // optional int32 batterytotalcurrent = 33;
    /**
     * <code>optional int32 batterytotalcurrent = 33;</code>
     *
     * <pre>
     *动力蓄电池总电流（单位：1毫安)
     * </pre>
     */
    boolean hasBatterytotalcurrent();
    /**
     * <code>optional int32 batterytotalcurrent = 33;</code>
     *
     * <pre>
     *动力蓄电池总电流（单位：1毫安)
     * </pre>
     */
    int getBatterytotalcurrent();

    // optional int32 remaindcapacity = 34;
    /**
     * <code>optional int32 remaindcapacity = 34;</code>
     *
     * <pre>
     *剩余能量（单位：o.1度,千卡时）
     * </pre>
     */
    boolean hasRemaindcapacity();
    /**
     * <code>optional int32 remaindcapacity = 34;</code>
     *
     * <pre>
     *剩余能量（单位：o.1度,千卡时）
     * </pre>
     */
    int getRemaindcapacity();

    // optional int32 resistance = 35;
    /**
     * <code>optional int32 resistance = 35;</code>
     *
     * <pre>
     *绝缘电阻（单位：欧母Ω）
     * </pre>
     */
    boolean hasResistance();
    /**
     * <code>optional int32 resistance = 35;</code>
     *
     * <pre>
     *绝缘电阻（单位：欧母Ω）
     * </pre>
     */
    int getResistance();

    // optional int32 totalOil = 36;
    /**
     * <code>optional int32 totalOil = 36;</code>
     *
     * <pre>
     *累计油耗（单位：毫升）
     * </pre>
     */
    boolean hasTotalOil();
    /**
     * <code>optional int32 totalOil = 36;</code>
     *
     * <pre>
     *累计油耗（单位：毫升）
     * </pre>
     */
    int getTotalOil();

    // optional int32 totalDriveTime = 37;
    /**
     * <code>optional int32 totalDriveTime = 37;</code>
     *
     * <pre>
     *累计行驶时间（单位：秒）
     * </pre>
     */
    boolean hasTotalDriveTime();
    /**
     * <code>optional int32 totalDriveTime = 37;</code>
     *
     * <pre>
     *累计行驶时间（单位：秒）
     * </pre>
     */
    int getTotalDriveTime();

    // optional int32 dashboardDistance = 38;
    /**
     * <code>optional int32 dashboardDistance = 38;</code>
     *
     * <pre>
     *仪表盘里程（单位：米）
     * </pre>
     */
    boolean hasDashboardDistance();
    /**
     * <code>optional int32 dashboardDistance = 38;</code>
     *
     * <pre>
     *仪表盘里程（单位：米）
     * </pre>
     */
    int getDashboardDistance();
  }
  /**
   * Protobuf type {@code gboss.OBDInfo}
   *
   * <pre>
   **
   * GPS实时OBD信息(OBD)
   * </pre>
   */
  public static final class OBDInfo extends
      com.google.protobuf.GeneratedMessage
      implements OBDInfoOrBuilder {
    // Use OBDInfo.newBuilder() to construct.
    private OBDInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OBDInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OBDInfo defaultInstance;
    public static OBDInfo getDefaultInstance() {
      return defaultInstance;
    }

    public OBDInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OBDInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              remainOil_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              remainPercentOil_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              averageOil_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              hourOil_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              totalDistance_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              waterTemperature_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              reviseOil_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              rotationSpeed_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              intakeAirTemperature_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              airDischange_ = input.readInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                otherInfo_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry>();
                mutable_bitField0_ |= 0x00000400;
              }
              otherInfo_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.PARSER, extensionRegistry));
              break;
            }
            case 98: {
              bitField0_ |= 0x00000400;
              callLetter_ = input.readBytes();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              gpsTime_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              speed_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              remainDistance_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              unitType_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              history_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00010000;
              batteryVoltage_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00020000;
              engineLoad_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00040000;
              gears_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00080000;
              isdrive_ = input.readBool();
              break;
            }
            case 176: {
              bitField0_ |= 0x00100000;
              driveratio_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00200000;
              isbreak_ = input.readBool();
              break;
            }
            case 192: {
              bitField0_ |= 0x00400000;
              breakratio_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00800000;
              chargestatus_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x01000000;
              motorctrltemperature_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x02000000;
              motortemperature_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x04000000;
              motorspeed_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x08000000;
              motorvoltage_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x10000000;
              motorcurrent_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x20000000;
              aircontemperature_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x40000000;
              batterytotalvoltage_ = input.readInt32();
              break;
            }
            case 264: {
              bitField0_ |= 0x80000000;
              batterytotalcurrent_ = input.readInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000001;
              remaindcapacity_ = input.readInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000002;
              resistance_ = input.readInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000004;
              totalOil_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000008;
              totalDriveTime_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000010;
              dashboardDistance_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          otherInfo_ = java.util.Collections.unmodifiableList(otherInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OBDInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OBDInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<OBDInfo> PARSER =
        new com.google.protobuf.AbstractParser<OBDInfo>() {
      public OBDInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OBDInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OBDInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    // optional int32 remainOil = 1;
    public static final int REMAINOIL_FIELD_NUMBER = 1;
    private int remainOil_;
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    public boolean hasRemainOil() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    public int getRemainOil() {
      return remainOil_;
    }

    // optional int32 remainPercentOil = 2;
    public static final int REMAINPERCENTOIL_FIELD_NUMBER = 2;
    private int remainPercentOil_;
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public boolean hasRemainPercentOil() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public int getRemainPercentOil() {
      return remainPercentOil_;
    }

    // optional int32 averageOil = 3;
    public static final int AVERAGEOIL_FIELD_NUMBER = 3;
    private int averageOil_;
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public boolean hasAverageOil() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public int getAverageOil() {
      return averageOil_;
    }

    // optional int32 hourOil = 4;
    public static final int HOUROIL_FIELD_NUMBER = 4;
    private int hourOil_;
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *瞬时油耗（单位：0.01升/小时）
     * </pre>
     */
    public boolean hasHourOil() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *瞬时油耗（单位：0.01升/小时）
     * </pre>
     */
    public int getHourOil() {
      return hourOil_;
    }

    // optional int32 totalDistance = 5;
    public static final int TOTALDISTANCE_FIELD_NUMBER = 5;
    private int totalDistance_;
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public boolean hasTotalDistance() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public int getTotalDistance() {
      return totalDistance_;
    }

    // optional int32 waterTemperature = 6;
    public static final int WATERTEMPERATURE_FIELD_NUMBER = 6;
    private int waterTemperature_;
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *冷却液温度,水温（单位：℃）
     * </pre>
     */
    public boolean hasWaterTemperature() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *冷却液温度,水温（单位：℃）
     * </pre>
     */
    public int getWaterTemperature() {
      return waterTemperature_;
    }

    // optional int32 reviseOil = 7;
    public static final int REVISEOIL_FIELD_NUMBER = 7;
    private int reviseOil_;
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    public boolean hasReviseOil() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    public int getReviseOil() {
      return reviseOil_;
    }

    // optional int32 rotationSpeed = 8;
    public static final int ROTATIONSPEED_FIELD_NUMBER = 8;
    private int rotationSpeed_;
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    public boolean hasRotationSpeed() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    public int getRotationSpeed() {
      return rotationSpeed_;
    }

    // optional int32 intakeAirTemperature = 9;
    public static final int INTAKEAIRTEMPERATURE_FIELD_NUMBER = 9;
    private int intakeAirTemperature_;
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    public boolean hasIntakeAirTemperature() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    public int getIntakeAirTemperature() {
      return intakeAirTemperature_;
    }

    // optional int32 airDischange = 10;
    public static final int AIRDISCHANGE_FIELD_NUMBER = 10;
    private int airDischange_;
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    public boolean hasAirDischange() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    public int getAirDischange() {
      return airDischange_;
    }

    // repeated .gboss.MapEntry otherInfo = 11;
    public static final int OTHERINFO_FIELD_NUMBER = 11;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> otherInfo_;
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> getOtherInfoList() {
      return otherInfo_;
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
        getOtherInfoOrBuilderList() {
      return otherInfo_;
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public int getOtherInfoCount() {
      return otherInfo_.size();
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getOtherInfo(int index) {
      return otherInfo_.get(index);
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder getOtherInfoOrBuilder(
        int index) {
      return otherInfo_.get(index);
    }

    // optional string callLetter = 12;
    public static final int CALLLETTER_FIELD_NUMBER = 12;
    private java.lang.Object callLetter_;
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 gpsTime = 13;
    public static final int GPSTIME_FIELD_NUMBER = 13;
    private long gpsTime_;
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    public long getGpsTime() {
      return gpsTime_;
    }

    // optional int32 speed = 14;
    public static final int SPEED_FIELD_NUMBER = 14;
    private int speed_;
    /**
     * <code>optional int32 speed = 14;</code>
     *
     * <pre>
     *OBD速度（单位：0.1千米/小时）
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 speed = 14;</code>
     *
     * <pre>
     *OBD速度（单位：0.1千米/小时）
     * </pre>
     */
    public int getSpeed() {
      return speed_;
    }

    // optional int32 remainDistance = 15;
    public static final int REMAINDISTANCE_FIELD_NUMBER = 15;
    private int remainDistance_;
    /**
     * <code>optional int32 remainDistance = 15;</code>
     *
     * <pre>
     *续航(剩余)里程（单位：米）
     * </pre>
     */
    public boolean hasRemainDistance() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 remainDistance = 15;</code>
     *
     * <pre>
     *续航(剩余)里程（单位：米）
     * </pre>
     */
    public int getRemainDistance() {
      return remainDistance_;
    }

    // optional int32 unitType = 16;
    public static final int UNITTYPE_FIELD_NUMBER = 16;
    private int unitType_;
    /**
     * <code>optional int32 unitType = 16;</code>
     *
     * <pre>
     *终端协议类型 
     * </pre>
     */
    public boolean hasUnitType() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 unitType = 16;</code>
     *
     * <pre>
     *终端协议类型 
     * </pre>
     */
    public int getUnitType() {
      return unitType_;
    }

    // optional int32 history = 17;
    public static final int HISTORY_FIELD_NUMBER = 17;
    private int history_;
    /**
     * <code>optional int32 history = 17;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public boolean hasHistory() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 history = 17;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public int getHistory() {
      return history_;
    }

    // optional int32 batteryVoltage = 18;
    public static final int BATTERYVOLTAGE_FIELD_NUMBER = 18;
    private int batteryVoltage_;
    /**
     * <code>optional int32 batteryVoltage = 18;</code>
     *
     * <pre>
     *电瓶电压（单位：0.01V，原为V）
     * </pre>
     */
    public boolean hasBatteryVoltage() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 batteryVoltage = 18;</code>
     *
     * <pre>
     *电瓶电压（单位：0.01V，原为V）
     * </pre>
     */
    public int getBatteryVoltage() {
      return batteryVoltage_;
    }

    // optional int32 engineLoad = 19;
    public static final int ENGINELOAD_FIELD_NUMBER = 19;
    private int engineLoad_;
    /**
     * <code>optional int32 engineLoad = 19;</code>
     *
     * <pre>
     *发动机负荷（单位：百分之xx）
     * </pre>
     */
    public boolean hasEngineLoad() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 engineLoad = 19;</code>
     *
     * <pre>
     *发动机负荷（单位：百分之xx）
     * </pre>
     */
    public int getEngineLoad() {
      return engineLoad_;
    }

    // optional int32 gears = 20;
    public static final int GEARS_FIELD_NUMBER = 20;
    private int gears_;
    /**
     * <code>optional int32 gears = 20;</code>
     *
     * <pre>
     *下面是新能源车增加的部分
     * </pre>
     */
    public boolean hasGears() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 gears = 20;</code>
     *
     * <pre>
     *下面是新能源车增加的部分
     * </pre>
     */
    public int getGears() {
      return gears_;
    }

    // optional bool isdrive = 21;
    public static final int ISDRIVE_FIELD_NUMBER = 21;
    private boolean isdrive_;
    /**
     * <code>optional bool isdrive = 21;</code>
     *
     * <pre>
     *驱动是否有效
     * </pre>
     */
    public boolean hasIsdrive() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional bool isdrive = 21;</code>
     *
     * <pre>
     *驱动是否有效
     * </pre>
     */
    public boolean getIsdrive() {
      return isdrive_;
    }

    // optional int32 driveratio = 22;
    public static final int DRIVERATIO_FIELD_NUMBER = 22;
    private int driveratio_;
    /**
     * <code>optional int32 driveratio = 22;</code>
     *
     * <pre>
     *加速踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
     * </pre>
     */
    public boolean hasDriveratio() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 driveratio = 22;</code>
     *
     * <pre>
     *加速踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
     * </pre>
     */
    public int getDriveratio() {
      return driveratio_;
    }

    // optional bool isbreak = 23;
    public static final int ISBREAK_FIELD_NUMBER = 23;
    private boolean isbreak_;
    /**
     * <code>optional bool isbreak = 23;</code>
     *
     * <pre>
     *制动是否有效
     * </pre>
     */
    public boolean hasIsbreak() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional bool isbreak = 23;</code>
     *
     * <pre>
     *制动是否有效
     * </pre>
     */
    public boolean getIsbreak() {
      return isbreak_;
    }

    // optional int32 breakratio = 24;
    public static final int BREAKRATIO_FIELD_NUMBER = 24;
    private int breakratio_;
    /**
     * <code>optional int32 breakratio = 24;</code>
     *
     * <pre>
     *制动踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
     * </pre>
     */
    public boolean hasBreakratio() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 breakratio = 24;</code>
     *
     * <pre>
     *制动踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
     * </pre>
     */
    public int getBreakratio() {
      return breakratio_;
    }

    // optional int32 chargestatus = 25;
    public static final int CHARGESTATUS_FIELD_NUMBER = 25;
    private int chargestatus_;
    /**
     * <code>optional int32 chargestatus = 25;</code>
     *
     * <pre>
     *充放电状态：1:充电, 2:放电, -1:无效数据
     * </pre>
     */
    public boolean hasChargestatus() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 chargestatus = 25;</code>
     *
     * <pre>
     *充放电状态：1:充电, 2:放电, -1:无效数据
     * </pre>
     */
    public int getChargestatus() {
      return chargestatus_;
    }

    // optional int32 motorctrltemperature = 26;
    public static final int MOTORCTRLTEMPERATURE_FIELD_NUMBER = 26;
    private int motorctrltemperature_;
    /**
     * <code>optional int32 motorctrltemperature = 26;</code>
     *
     * <pre>
     *电机控制器温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    public boolean hasMotorctrltemperature() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 motorctrltemperature = 26;</code>
     *
     * <pre>
     *电机控制器温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    public int getMotorctrltemperature() {
      return motorctrltemperature_;
    }

    // optional int32 motortemperature = 27;
    public static final int MOTORTEMPERATURE_FIELD_NUMBER = 27;
    private int motortemperature_;
    /**
     * <code>optional int32 motortemperature = 27;</code>
     *
     * <pre>
     *电机温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    public boolean hasMotortemperature() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 motortemperature = 27;</code>
     *
     * <pre>
     *电机温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    public int getMotortemperature() {
      return motortemperature_;
    }

    // optional int32 motorspeed = 28;
    public static final int MOTORSPEED_FIELD_NUMBER = 28;
    private int motorspeed_;
    /**
     * <code>optional int32 motorspeed = 28;</code>
     *
     * <pre>
     *电机转速
     * </pre>
     */
    public boolean hasMotorspeed() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 motorspeed = 28;</code>
     *
     * <pre>
     *电机转速
     * </pre>
     */
    public int getMotorspeed() {
      return motorspeed_;
    }

    // optional int32 motorvoltage = 29;
    public static final int MOTORVOLTAGE_FIELD_NUMBER = 29;
    private int motorvoltage_;
    /**
     * <code>optional int32 motorvoltage = 29;</code>
     *
     * <pre>
     *电机电压（单位：0.1V)
     * </pre>
     */
    public boolean hasMotorvoltage() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 motorvoltage = 29;</code>
     *
     * <pre>
     *电机电压（单位：0.1V)
     * </pre>
     */
    public int getMotorvoltage() {
      return motorvoltage_;
    }

    // optional int32 motorcurrent = 30;
    public static final int MOTORCURRENT_FIELD_NUMBER = 30;
    private int motorcurrent_;
    /**
     * <code>optional int32 motorcurrent = 30;</code>
     *
     * <pre>
     *电机电流（单位：1毫安)
     * </pre>
     */
    public boolean hasMotorcurrent() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 motorcurrent = 30;</code>
     *
     * <pre>
     *电机电流（单位：1毫安)
     * </pre>
     */
    public int getMotorcurrent() {
      return motorcurrent_;
    }

    // optional int32 aircontemperature = 31;
    public static final int AIRCONTEMPERATURE_FIELD_NUMBER = 31;
    private int aircontemperature_;
    /**
     * <code>optional int32 aircontemperature = 31;</code>
     *
     * <pre>
     *空调设定温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    public boolean hasAircontemperature() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 aircontemperature = 31;</code>
     *
     * <pre>
     *空调设定温度, （单位：十分之一摄氏度） 
     * </pre>
     */
    public int getAircontemperature() {
      return aircontemperature_;
    }

    // optional int32 batterytotalvoltage = 32;
    public static final int BATTERYTOTALVOLTAGE_FIELD_NUMBER = 32;
    private int batterytotalvoltage_;
    /**
     * <code>optional int32 batterytotalvoltage = 32;</code>
     *
     * <pre>
     *动力蓄电池总电压（单位：0.1V)
     * </pre>
     */
    public boolean hasBatterytotalvoltage() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 batterytotalvoltage = 32;</code>
     *
     * <pre>
     *动力蓄电池总电压（单位：0.1V)
     * </pre>
     */
    public int getBatterytotalvoltage() {
      return batterytotalvoltage_;
    }

    // optional int32 batterytotalcurrent = 33;
    public static final int BATTERYTOTALCURRENT_FIELD_NUMBER = 33;
    private int batterytotalcurrent_;
    /**
     * <code>optional int32 batterytotalcurrent = 33;</code>
     *
     * <pre>
     *动力蓄电池总电流（单位：1毫安)
     * </pre>
     */
    public boolean hasBatterytotalcurrent() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 batterytotalcurrent = 33;</code>
     *
     * <pre>
     *动力蓄电池总电流（单位：1毫安)
     * </pre>
     */
    public int getBatterytotalcurrent() {
      return batterytotalcurrent_;
    }

    // optional int32 remaindcapacity = 34;
    public static final int REMAINDCAPACITY_FIELD_NUMBER = 34;
    private int remaindcapacity_;
    /**
     * <code>optional int32 remaindcapacity = 34;</code>
     *
     * <pre>
     *剩余能量（单位：o.1度,千卡时）
     * </pre>
     */
    public boolean hasRemaindcapacity() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 remaindcapacity = 34;</code>
     *
     * <pre>
     *剩余能量（单位：o.1度,千卡时）
     * </pre>
     */
    public int getRemaindcapacity() {
      return remaindcapacity_;
    }

    // optional int32 resistance = 35;
    public static final int RESISTANCE_FIELD_NUMBER = 35;
    private int resistance_;
    /**
     * <code>optional int32 resistance = 35;</code>
     *
     * <pre>
     *绝缘电阻（单位：欧母Ω）
     * </pre>
     */
    public boolean hasResistance() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 resistance = 35;</code>
     *
     * <pre>
     *绝缘电阻（单位：欧母Ω）
     * </pre>
     */
    public int getResistance() {
      return resistance_;
    }

    // optional int32 totalOil = 36;
    public static final int TOTALOIL_FIELD_NUMBER = 36;
    private int totalOil_;
    /**
     * <code>optional int32 totalOil = 36;</code>
     *
     * <pre>
     *累计油耗（单位：毫升）
     * </pre>
     */
    public boolean hasTotalOil() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 totalOil = 36;</code>
     *
     * <pre>
     *累计油耗（单位：毫升）
     * </pre>
     */
    public int getTotalOil() {
      return totalOil_;
    }

    // optional int32 totalDriveTime = 37;
    public static final int TOTALDRIVETIME_FIELD_NUMBER = 37;
    private int totalDriveTime_;
    /**
     * <code>optional int32 totalDriveTime = 37;</code>
     *
     * <pre>
     *累计行驶时间（单位：秒）
     * </pre>
     */
    public boolean hasTotalDriveTime() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 totalDriveTime = 37;</code>
     *
     * <pre>
     *累计行驶时间（单位：秒）
     * </pre>
     */
    public int getTotalDriveTime() {
      return totalDriveTime_;
    }

    // optional int32 dashboardDistance = 38;
    public static final int DASHBOARDDISTANCE_FIELD_NUMBER = 38;
    private int dashboardDistance_;
    /**
     * <code>optional int32 dashboardDistance = 38;</code>
     *
     * <pre>
     *仪表盘里程（单位：米）
     * </pre>
     */
    public boolean hasDashboardDistance() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 dashboardDistance = 38;</code>
     *
     * <pre>
     *仪表盘里程（单位：米）
     * </pre>
     */
    public int getDashboardDistance() {
      return dashboardDistance_;
    }

    private void initFields() {
      remainOil_ = 0;
      remainPercentOil_ = 0;
      averageOil_ = 0;
      hourOil_ = 0;
      totalDistance_ = 0;
      waterTemperature_ = 0;
      reviseOil_ = 0;
      rotationSpeed_ = 0;
      intakeAirTemperature_ = 0;
      airDischange_ = 0;
      otherInfo_ = java.util.Collections.emptyList();
      callLetter_ = "";
      gpsTime_ = 0L;
      speed_ = 0;
      remainDistance_ = 0;
      unitType_ = 0;
      history_ = 0;
      batteryVoltage_ = 0;
      engineLoad_ = 0;
      gears_ = 0;
      isdrive_ = false;
      driveratio_ = 0;
      isbreak_ = false;
      breakratio_ = 0;
      chargestatus_ = 0;
      motorctrltemperature_ = 0;
      motortemperature_ = 0;
      motorspeed_ = 0;
      motorvoltage_ = 0;
      motorcurrent_ = 0;
      aircontemperature_ = 0;
      batterytotalvoltage_ = 0;
      batterytotalcurrent_ = 0;
      remaindcapacity_ = 0;
      resistance_ = 0;
      totalOil_ = 0;
      totalDriveTime_ = 0;
      dashboardDistance_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getOtherInfoCount(); i++) {
        if (!getOtherInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, remainOil_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, averageOil_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, hourOil_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, totalDistance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, waterTemperature_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, reviseOil_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, rotationSpeed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, intakeAirTemperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, airDischange_);
      }
      for (int i = 0; i < otherInfo_.size(); i++) {
        output.writeMessage(11, otherInfo_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(13, gpsTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(14, speed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(15, remainDistance_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(16, unitType_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(17, history_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(18, batteryVoltage_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(19, engineLoad_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(20, gears_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBool(21, isdrive_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(22, driveratio_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBool(23, isbreak_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(24, breakratio_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(25, chargestatus_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(26, motorctrltemperature_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(27, motortemperature_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(28, motorspeed_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(29, motorvoltage_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(30, motorcurrent_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(31, aircontemperature_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(32, batterytotalvoltage_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(33, batterytotalcurrent_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(34, remaindcapacity_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(35, resistance_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(36, totalOil_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(37, totalDriveTime_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(38, dashboardDistance_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, remainOil_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, averageOil_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, hourOil_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, totalDistance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, waterTemperature_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, reviseOil_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, rotationSpeed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, intakeAirTemperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, airDischange_);
      }
      for (int i = 0; i < otherInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, otherInfo_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, gpsTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, speed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, remainDistance_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, unitType_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, history_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, batteryVoltage_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, engineLoad_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, gears_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, isdrive_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, driveratio_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, isbreak_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, breakratio_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, chargestatus_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, motorctrltemperature_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, motortemperature_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, motorspeed_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, motorvoltage_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, motorcurrent_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, aircontemperature_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, batterytotalvoltage_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, batterytotalcurrent_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, remaindcapacity_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, resistance_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, totalOil_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, totalDriveTime_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, dashboardDistance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.OBDInfo}
     *
     * <pre>
     **
     * GPS实时OBD信息(OBD)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.OBDInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OBDInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OBDInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOtherInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        remainOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        remainPercentOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        averageOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        hourOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        totalDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        waterTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        reviseOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        rotationSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        intakeAirTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        airDischange_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (otherInfoBuilder_ == null) {
          otherInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          otherInfoBuilder_.clear();
        }
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        remainDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        unitType_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        history_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        batteryVoltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        engineLoad_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        gears_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        isdrive_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        driveratio_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        isbreak_ = false;
        bitField0_ = (bitField0_ & ~0x00400000);
        breakratio_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        chargestatus_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        motorctrltemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        motortemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        motorspeed_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        motorvoltage_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        motorcurrent_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        aircontemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        batterytotalvoltage_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        batterytotalcurrent_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        remaindcapacity_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        resistance_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        totalOil_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        totalDriveTime_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        dashboardDistance_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OBDInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.remainOil_ = remainOil_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.remainPercentOil_ = remainPercentOil_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.averageOil_ = averageOil_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hourOil_ = hourOil_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.totalDistance_ = totalDistance_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.waterTemperature_ = waterTemperature_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.reviseOil_ = reviseOil_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rotationSpeed_ = rotationSpeed_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.intakeAirTemperature_ = intakeAirTemperature_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.airDischange_ = airDischange_;
        if (otherInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            otherInfo_ = java.util.Collections.unmodifiableList(otherInfo_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.otherInfo_ = otherInfo_;
        } else {
          result.otherInfo_ = otherInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.remainDistance_ = remainDistance_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.unitType_ = unitType_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.history_ = history_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.batteryVoltage_ = batteryVoltage_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.engineLoad_ = engineLoad_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.gears_ = gears_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.isdrive_ = isdrive_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.driveratio_ = driveratio_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.isbreak_ = isbreak_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.breakratio_ = breakratio_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.chargestatus_ = chargestatus_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.motorctrltemperature_ = motorctrltemperature_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.motortemperature_ = motortemperature_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.motorspeed_ = motorspeed_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.motorvoltage_ = motorvoltage_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.motorcurrent_ = motorcurrent_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.aircontemperature_ = aircontemperature_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.batterytotalvoltage_ = batterytotalvoltage_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x80000000;
        }
        result.batterytotalcurrent_ = batterytotalcurrent_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000001;
        }
        result.remaindcapacity_ = remaindcapacity_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000002;
        }
        result.resistance_ = resistance_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000004;
        }
        result.totalOil_ = totalOil_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000008;
        }
        result.totalDriveTime_ = totalDriveTime_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000010;
        }
        result.dashboardDistance_ = dashboardDistance_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.getDefaultInstance()) return this;
        if (other.hasRemainOil()) {
          setRemainOil(other.getRemainOil());
        }
        if (other.hasRemainPercentOil()) {
          setRemainPercentOil(other.getRemainPercentOil());
        }
        if (other.hasAverageOil()) {
          setAverageOil(other.getAverageOil());
        }
        if (other.hasHourOil()) {
          setHourOil(other.getHourOil());
        }
        if (other.hasTotalDistance()) {
          setTotalDistance(other.getTotalDistance());
        }
        if (other.hasWaterTemperature()) {
          setWaterTemperature(other.getWaterTemperature());
        }
        if (other.hasReviseOil()) {
          setReviseOil(other.getReviseOil());
        }
        if (other.hasRotationSpeed()) {
          setRotationSpeed(other.getRotationSpeed());
        }
        if (other.hasIntakeAirTemperature()) {
          setIntakeAirTemperature(other.getIntakeAirTemperature());
        }
        if (other.hasAirDischange()) {
          setAirDischange(other.getAirDischange());
        }
        if (otherInfoBuilder_ == null) {
          if (!other.otherInfo_.isEmpty()) {
            if (otherInfo_.isEmpty()) {
              otherInfo_ = other.otherInfo_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureOtherInfoIsMutable();
              otherInfo_.addAll(other.otherInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.otherInfo_.isEmpty()) {
            if (otherInfoBuilder_.isEmpty()) {
              otherInfoBuilder_.dispose();
              otherInfoBuilder_ = null;
              otherInfo_ = other.otherInfo_;
              bitField0_ = (bitField0_ & ~0x00000400);
              otherInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOtherInfoFieldBuilder() : null;
            } else {
              otherInfoBuilder_.addAllMessages(other.otherInfo_);
            }
          }
        }
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000800;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasRemainDistance()) {
          setRemainDistance(other.getRemainDistance());
        }
        if (other.hasUnitType()) {
          setUnitType(other.getUnitType());
        }
        if (other.hasHistory()) {
          setHistory(other.getHistory());
        }
        if (other.hasBatteryVoltage()) {
          setBatteryVoltage(other.getBatteryVoltage());
        }
        if (other.hasEngineLoad()) {
          setEngineLoad(other.getEngineLoad());
        }
        if (other.hasGears()) {
          setGears(other.getGears());
        }
        if (other.hasIsdrive()) {
          setIsdrive(other.getIsdrive());
        }
        if (other.hasDriveratio()) {
          setDriveratio(other.getDriveratio());
        }
        if (other.hasIsbreak()) {
          setIsbreak(other.getIsbreak());
        }
        if (other.hasBreakratio()) {
          setBreakratio(other.getBreakratio());
        }
        if (other.hasChargestatus()) {
          setChargestatus(other.getChargestatus());
        }
        if (other.hasMotorctrltemperature()) {
          setMotorctrltemperature(other.getMotorctrltemperature());
        }
        if (other.hasMotortemperature()) {
          setMotortemperature(other.getMotortemperature());
        }
        if (other.hasMotorspeed()) {
          setMotorspeed(other.getMotorspeed());
        }
        if (other.hasMotorvoltage()) {
          setMotorvoltage(other.getMotorvoltage());
        }
        if (other.hasMotorcurrent()) {
          setMotorcurrent(other.getMotorcurrent());
        }
        if (other.hasAircontemperature()) {
          setAircontemperature(other.getAircontemperature());
        }
        if (other.hasBatterytotalvoltage()) {
          setBatterytotalvoltage(other.getBatterytotalvoltage());
        }
        if (other.hasBatterytotalcurrent()) {
          setBatterytotalcurrent(other.getBatterytotalcurrent());
        }
        if (other.hasRemaindcapacity()) {
          setRemaindcapacity(other.getRemaindcapacity());
        }
        if (other.hasResistance()) {
          setResistance(other.getResistance());
        }
        if (other.hasTotalOil()) {
          setTotalOil(other.getTotalOil());
        }
        if (other.hasTotalDriveTime()) {
          setTotalDriveTime(other.getTotalDriveTime());
        }
        if (other.hasDashboardDistance()) {
          setDashboardDistance(other.getDashboardDistance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getOtherInfoCount(); i++) {
          if (!getOtherInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // optional int32 remainOil = 1;
      private int remainOil_ ;
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public boolean hasRemainOil() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public int getRemainOil() {
        return remainOil_;
      }
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public Builder setRemainOil(int value) {
        bitField0_ |= 0x00000001;
        remainOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public Builder clearRemainOil() {
        bitField0_ = (bitField0_ & ~0x00000001);
        remainOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainPercentOil = 2;
      private int remainPercentOil_ ;
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public boolean hasRemainPercentOil() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public int getRemainPercentOil() {
        return remainPercentOil_;
      }
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder setRemainPercentOil(int value) {
        bitField0_ |= 0x00000002;
        remainPercentOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder clearRemainPercentOil() {
        bitField0_ = (bitField0_ & ~0x00000002);
        remainPercentOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageOil = 3;
      private int averageOil_ ;
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public boolean hasAverageOil() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public int getAverageOil() {
        return averageOil_;
      }
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder setAverageOil(int value) {
        bitField0_ |= 0x00000004;
        averageOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder clearAverageOil() {
        bitField0_ = (bitField0_ & ~0x00000004);
        averageOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hourOil = 4;
      private int hourOil_ ;
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *瞬时油耗（单位：0.01升/小时）
       * </pre>
       */
      public boolean hasHourOil() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *瞬时油耗（单位：0.01升/小时）
       * </pre>
       */
      public int getHourOil() {
        return hourOil_;
      }
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *瞬时油耗（单位：0.01升/小时）
       * </pre>
       */
      public Builder setHourOil(int value) {
        bitField0_ |= 0x00000008;
        hourOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *瞬时油耗（单位：0.01升/小时）
       * </pre>
       */
      public Builder clearHourOil() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hourOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalDistance = 5;
      private int totalDistance_ ;
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public boolean hasTotalDistance() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public int getTotalDistance() {
        return totalDistance_;
      }
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder setTotalDistance(int value) {
        bitField0_ |= 0x00000010;
        totalDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder clearTotalDistance() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalDistance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 waterTemperature = 6;
      private int waterTemperature_ ;
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *冷却液温度,水温（单位：℃）
       * </pre>
       */
      public boolean hasWaterTemperature() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *冷却液温度,水温（单位：℃）
       * </pre>
       */
      public int getWaterTemperature() {
        return waterTemperature_;
      }
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *冷却液温度,水温（单位：℃）
       * </pre>
       */
      public Builder setWaterTemperature(int value) {
        bitField0_ |= 0x00000020;
        waterTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *冷却液温度,水温（单位：℃）
       * </pre>
       */
      public Builder clearWaterTemperature() {
        bitField0_ = (bitField0_ & ~0x00000020);
        waterTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reviseOil = 7;
      private int reviseOil_ ;
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public boolean hasReviseOil() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public int getReviseOil() {
        return reviseOil_;
      }
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public Builder setReviseOil(int value) {
        bitField0_ |= 0x00000040;
        reviseOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public Builder clearReviseOil() {
        bitField0_ = (bitField0_ & ~0x00000040);
        reviseOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotationSpeed = 8;
      private int rotationSpeed_ ;
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public boolean hasRotationSpeed() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public int getRotationSpeed() {
        return rotationSpeed_;
      }
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public Builder setRotationSpeed(int value) {
        bitField0_ |= 0x00000080;
        rotationSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public Builder clearRotationSpeed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rotationSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 intakeAirTemperature = 9;
      private int intakeAirTemperature_ ;
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public boolean hasIntakeAirTemperature() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public int getIntakeAirTemperature() {
        return intakeAirTemperature_;
      }
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public Builder setIntakeAirTemperature(int value) {
        bitField0_ |= 0x00000100;
        intakeAirTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public Builder clearIntakeAirTemperature() {
        bitField0_ = (bitField0_ & ~0x00000100);
        intakeAirTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 airDischange = 10;
      private int airDischange_ ;
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public boolean hasAirDischange() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public int getAirDischange() {
        return airDischange_;
      }
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public Builder setAirDischange(int value) {
        bitField0_ |= 0x00000200;
        airDischange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public Builder clearAirDischange() {
        bitField0_ = (bitField0_ & ~0x00000200);
        airDischange_ = 0;
        onChanged();
        return this;
      }

      // repeated .gboss.MapEntry otherInfo = 11;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> otherInfo_ =
        java.util.Collections.emptyList();
      private void ensureOtherInfoIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          otherInfo_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry>(otherInfo_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.MapEntry, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> otherInfoBuilder_;

      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> getOtherInfoList() {
        if (otherInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(otherInfo_);
        } else {
          return otherInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public int getOtherInfoCount() {
        if (otherInfoBuilder_ == null) {
          return otherInfo_.size();
        } else {
          return otherInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getOtherInfo(int index) {
        if (otherInfoBuilder_ == null) {
          return otherInfo_.get(index);
        } else {
          return otherInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder setOtherInfo(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry value) {
        if (otherInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherInfoIsMutable();
          otherInfo_.set(index, value);
          onChanged();
        } else {
          otherInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder setOtherInfo(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (otherInfoBuilder_ == null) {
          ensureOtherInfoIsMutable();
          otherInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          otherInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfo(cc.chinagps.gateway.buff.GBossDataBuff.MapEntry value) {
        if (otherInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherInfoIsMutable();
          otherInfo_.add(value);
          onChanged();
        } else {
          otherInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfo(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry value) {
        if (otherInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherInfoIsMutable();
          otherInfo_.add(index, value);
          onChanged();
        } else {
          otherInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (otherInfoBuilder_ == null) {
          ensureOtherInfoIsMutable();
          otherInfo_.add(builderForValue.build());
          onChanged();
        } else {
          otherInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfo(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (otherInfoBuilder_ == null) {
          ensureOtherInfoIsMutable();
          otherInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          otherInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addAllOtherInfo(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> values) {
        if (otherInfoBuilder_ == null) {
          ensureOtherInfoIsMutable();
          super.addAll(values, otherInfo_);
          onChanged();
        } else {
          otherInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder clearOtherInfo() {
        if (otherInfoBuilder_ == null) {
          otherInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          otherInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder removeOtherInfo(int index) {
        if (otherInfoBuilder_ == null) {
          ensureOtherInfoIsMutable();
          otherInfo_.remove(index);
          onChanged();
        } else {
          otherInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder getOtherInfoBuilder(
          int index) {
        return getOtherInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder getOtherInfoOrBuilder(
          int index) {
        if (otherInfoBuilder_ == null) {
          return otherInfo_.get(index);  } else {
          return otherInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
           getOtherInfoOrBuilderList() {
        if (otherInfoBuilder_ != null) {
          return otherInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(otherInfo_);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder addOtherInfoBuilder() {
        return getOtherInfoFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder addOtherInfoBuilder(
          int index) {
        return getOtherInfoFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfo = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder> 
           getOtherInfoBuilderList() {
        return getOtherInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.MapEntry, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
          getOtherInfoFieldBuilder() {
        if (otherInfoBuilder_ == null) {
          otherInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.MapEntry, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder>(
                  otherInfo_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          otherInfo_ = null;
        }
        return otherInfoBuilder_;
      }

      // optional string callLetter = 12;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000800);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // optional int64 gpsTime = 13;
      private long gpsTime_ ;
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public long getGpsTime() {
        return gpsTime_;
      }
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00001000;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 speed = 14;
      private int speed_ ;
      /**
       * <code>optional int32 speed = 14;</code>
       *
       * <pre>
       *OBD速度（单位：0.1千米/小时）
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 speed = 14;</code>
       *
       * <pre>
       *OBD速度（单位：0.1千米/小时）
       * </pre>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>optional int32 speed = 14;</code>
       *
       * <pre>
       *OBD速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00002000;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed = 14;</code>
       *
       * <pre>
       *OBD速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00002000);
        speed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainDistance = 15;
      private int remainDistance_ ;
      /**
       * <code>optional int32 remainDistance = 15;</code>
       *
       * <pre>
       *续航(剩余)里程（单位：米）
       * </pre>
       */
      public boolean hasRemainDistance() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 remainDistance = 15;</code>
       *
       * <pre>
       *续航(剩余)里程（单位：米）
       * </pre>
       */
      public int getRemainDistance() {
        return remainDistance_;
      }
      /**
       * <code>optional int32 remainDistance = 15;</code>
       *
       * <pre>
       *续航(剩余)里程（单位：米）
       * </pre>
       */
      public Builder setRemainDistance(int value) {
        bitField0_ |= 0x00004000;
        remainDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainDistance = 15;</code>
       *
       * <pre>
       *续航(剩余)里程（单位：米）
       * </pre>
       */
      public Builder clearRemainDistance() {
        bitField0_ = (bitField0_ & ~0x00004000);
        remainDistance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 unitType = 16;
      private int unitType_ ;
      /**
       * <code>optional int32 unitType = 16;</code>
       *
       * <pre>
       *终端协议类型 
       * </pre>
       */
      public boolean hasUnitType() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 unitType = 16;</code>
       *
       * <pre>
       *终端协议类型 
       * </pre>
       */
      public int getUnitType() {
        return unitType_;
      }
      /**
       * <code>optional int32 unitType = 16;</code>
       *
       * <pre>
       *终端协议类型 
       * </pre>
       */
      public Builder setUnitType(int value) {
        bitField0_ |= 0x00008000;
        unitType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unitType = 16;</code>
       *
       * <pre>
       *终端协议类型 
       * </pre>
       */
      public Builder clearUnitType() {
        bitField0_ = (bitField0_ & ~0x00008000);
        unitType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 history = 17;
      private int history_ ;
      /**
       * <code>optional int32 history = 17;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public boolean hasHistory() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 history = 17;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public int getHistory() {
        return history_;
      }
      /**
       * <code>optional int32 history = 17;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder setHistory(int value) {
        bitField0_ |= 0x00010000;
        history_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 history = 17;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder clearHistory() {
        bitField0_ = (bitField0_ & ~0x00010000);
        history_ = 0;
        onChanged();
        return this;
      }

      // optional int32 batteryVoltage = 18;
      private int batteryVoltage_ ;
      /**
       * <code>optional int32 batteryVoltage = 18;</code>
       *
       * <pre>
       *电瓶电压（单位：0.01V，原为V）
       * </pre>
       */
      public boolean hasBatteryVoltage() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 batteryVoltage = 18;</code>
       *
       * <pre>
       *电瓶电压（单位：0.01V，原为V）
       * </pre>
       */
      public int getBatteryVoltage() {
        return batteryVoltage_;
      }
      /**
       * <code>optional int32 batteryVoltage = 18;</code>
       *
       * <pre>
       *电瓶电压（单位：0.01V，原为V）
       * </pre>
       */
      public Builder setBatteryVoltage(int value) {
        bitField0_ |= 0x00020000;
        batteryVoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batteryVoltage = 18;</code>
       *
       * <pre>
       *电瓶电压（单位：0.01V，原为V）
       * </pre>
       */
      public Builder clearBatteryVoltage() {
        bitField0_ = (bitField0_ & ~0x00020000);
        batteryVoltage_ = 0;
        onChanged();
        return this;
      }

      // optional int32 engineLoad = 19;
      private int engineLoad_ ;
      /**
       * <code>optional int32 engineLoad = 19;</code>
       *
       * <pre>
       *发动机负荷（单位：百分之xx）
       * </pre>
       */
      public boolean hasEngineLoad() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 engineLoad = 19;</code>
       *
       * <pre>
       *发动机负荷（单位：百分之xx）
       * </pre>
       */
      public int getEngineLoad() {
        return engineLoad_;
      }
      /**
       * <code>optional int32 engineLoad = 19;</code>
       *
       * <pre>
       *发动机负荷（单位：百分之xx）
       * </pre>
       */
      public Builder setEngineLoad(int value) {
        bitField0_ |= 0x00040000;
        engineLoad_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 engineLoad = 19;</code>
       *
       * <pre>
       *发动机负荷（单位：百分之xx）
       * </pre>
       */
      public Builder clearEngineLoad() {
        bitField0_ = (bitField0_ & ~0x00040000);
        engineLoad_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gears = 20;
      private int gears_ ;
      /**
       * <code>optional int32 gears = 20;</code>
       *
       * <pre>
       *下面是新能源车增加的部分
       * </pre>
       */
      public boolean hasGears() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 gears = 20;</code>
       *
       * <pre>
       *下面是新能源车增加的部分
       * </pre>
       */
      public int getGears() {
        return gears_;
      }
      /**
       * <code>optional int32 gears = 20;</code>
       *
       * <pre>
       *下面是新能源车增加的部分
       * </pre>
       */
      public Builder setGears(int value) {
        bitField0_ |= 0x00080000;
        gears_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gears = 20;</code>
       *
       * <pre>
       *下面是新能源车增加的部分
       * </pre>
       */
      public Builder clearGears() {
        bitField0_ = (bitField0_ & ~0x00080000);
        gears_ = 0;
        onChanged();
        return this;
      }

      // optional bool isdrive = 21;
      private boolean isdrive_ ;
      /**
       * <code>optional bool isdrive = 21;</code>
       *
       * <pre>
       *驱动是否有效
       * </pre>
       */
      public boolean hasIsdrive() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool isdrive = 21;</code>
       *
       * <pre>
       *驱动是否有效
       * </pre>
       */
      public boolean getIsdrive() {
        return isdrive_;
      }
      /**
       * <code>optional bool isdrive = 21;</code>
       *
       * <pre>
       *驱动是否有效
       * </pre>
       */
      public Builder setIsdrive(boolean value) {
        bitField0_ |= 0x00100000;
        isdrive_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isdrive = 21;</code>
       *
       * <pre>
       *驱动是否有效
       * </pre>
       */
      public Builder clearIsdrive() {
        bitField0_ = (bitField0_ & ~0x00100000);
        isdrive_ = false;
        onChanged();
        return this;
      }

      // optional int32 driveratio = 22;
      private int driveratio_ ;
      /**
       * <code>optional int32 driveratio = 22;</code>
       *
       * <pre>
       *加速踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
       * </pre>
       */
      public boolean hasDriveratio() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 driveratio = 22;</code>
       *
       * <pre>
       *加速踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
       * </pre>
       */
      public int getDriveratio() {
        return driveratio_;
      }
      /**
       * <code>optional int32 driveratio = 22;</code>
       *
       * <pre>
       *加速踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
       * </pre>
       */
      public Builder setDriveratio(int value) {
        bitField0_ |= 0x00200000;
        driveratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 driveratio = 22;</code>
       *
       * <pre>
       *加速踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
       * </pre>
       */
      public Builder clearDriveratio() {
        bitField0_ = (bitField0_ & ~0x00200000);
        driveratio_ = 0;
        onChanged();
        return this;
      }

      // optional bool isbreak = 23;
      private boolean isbreak_ ;
      /**
       * <code>optional bool isbreak = 23;</code>
       *
       * <pre>
       *制动是否有效
       * </pre>
       */
      public boolean hasIsbreak() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional bool isbreak = 23;</code>
       *
       * <pre>
       *制动是否有效
       * </pre>
       */
      public boolean getIsbreak() {
        return isbreak_;
      }
      /**
       * <code>optional bool isbreak = 23;</code>
       *
       * <pre>
       *制动是否有效
       * </pre>
       */
      public Builder setIsbreak(boolean value) {
        bitField0_ |= 0x00400000;
        isbreak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isbreak = 23;</code>
       *
       * <pre>
       *制动是否有效
       * </pre>
       */
      public Builder clearIsbreak() {
        bitField0_ = (bitField0_ & ~0x00400000);
        isbreak_ = false;
        onChanged();
        return this;
      }

      // optional int32 breakratio = 24;
      private int breakratio_ ;
      /**
       * <code>optional int32 breakratio = 24;</code>
       *
       * <pre>
       *制动踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
       * </pre>
       */
      public boolean hasBreakratio() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 breakratio = 24;</code>
       *
       * <pre>
       *制动踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
       * </pre>
       */
      public int getBreakratio() {
        return breakratio_;
      }
      /**
       * <code>optional int32 breakratio = 24;</code>
       *
       * <pre>
       *制动踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
       * </pre>
       */
      public Builder setBreakratio(int value) {
        bitField0_ |= 0x00800000;
        breakratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 breakratio = 24;</code>
       *
       * <pre>
       *制动踏板行程值: 有效值范围：0～100（表示 0%～100%）,最小计量单元：1%
       * </pre>
       */
      public Builder clearBreakratio() {
        bitField0_ = (bitField0_ & ~0x00800000);
        breakratio_ = 0;
        onChanged();
        return this;
      }

      // optional int32 chargestatus = 25;
      private int chargestatus_ ;
      /**
       * <code>optional int32 chargestatus = 25;</code>
       *
       * <pre>
       *充放电状态：1:充电, 2:放电, -1:无效数据
       * </pre>
       */
      public boolean hasChargestatus() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 chargestatus = 25;</code>
       *
       * <pre>
       *充放电状态：1:充电, 2:放电, -1:无效数据
       * </pre>
       */
      public int getChargestatus() {
        return chargestatus_;
      }
      /**
       * <code>optional int32 chargestatus = 25;</code>
       *
       * <pre>
       *充放电状态：1:充电, 2:放电, -1:无效数据
       * </pre>
       */
      public Builder setChargestatus(int value) {
        bitField0_ |= 0x01000000;
        chargestatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chargestatus = 25;</code>
       *
       * <pre>
       *充放电状态：1:充电, 2:放电, -1:无效数据
       * </pre>
       */
      public Builder clearChargestatus() {
        bitField0_ = (bitField0_ & ~0x01000000);
        chargestatus_ = 0;
        onChanged();
        return this;
      }

      // optional int32 motorctrltemperature = 26;
      private int motorctrltemperature_ ;
      /**
       * <code>optional int32 motorctrltemperature = 26;</code>
       *
       * <pre>
       *电机控制器温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public boolean hasMotorctrltemperature() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 motorctrltemperature = 26;</code>
       *
       * <pre>
       *电机控制器温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public int getMotorctrltemperature() {
        return motorctrltemperature_;
      }
      /**
       * <code>optional int32 motorctrltemperature = 26;</code>
       *
       * <pre>
       *电机控制器温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder setMotorctrltemperature(int value) {
        bitField0_ |= 0x02000000;
        motorctrltemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 motorctrltemperature = 26;</code>
       *
       * <pre>
       *电机控制器温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder clearMotorctrltemperature() {
        bitField0_ = (bitField0_ & ~0x02000000);
        motorctrltemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 motortemperature = 27;
      private int motortemperature_ ;
      /**
       * <code>optional int32 motortemperature = 27;</code>
       *
       * <pre>
       *电机温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public boolean hasMotortemperature() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 motortemperature = 27;</code>
       *
       * <pre>
       *电机温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public int getMotortemperature() {
        return motortemperature_;
      }
      /**
       * <code>optional int32 motortemperature = 27;</code>
       *
       * <pre>
       *电机温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder setMotortemperature(int value) {
        bitField0_ |= 0x04000000;
        motortemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 motortemperature = 27;</code>
       *
       * <pre>
       *电机温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder clearMotortemperature() {
        bitField0_ = (bitField0_ & ~0x04000000);
        motortemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 motorspeed = 28;
      private int motorspeed_ ;
      /**
       * <code>optional int32 motorspeed = 28;</code>
       *
       * <pre>
       *电机转速
       * </pre>
       */
      public boolean hasMotorspeed() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 motorspeed = 28;</code>
       *
       * <pre>
       *电机转速
       * </pre>
       */
      public int getMotorspeed() {
        return motorspeed_;
      }
      /**
       * <code>optional int32 motorspeed = 28;</code>
       *
       * <pre>
       *电机转速
       * </pre>
       */
      public Builder setMotorspeed(int value) {
        bitField0_ |= 0x08000000;
        motorspeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 motorspeed = 28;</code>
       *
       * <pre>
       *电机转速
       * </pre>
       */
      public Builder clearMotorspeed() {
        bitField0_ = (bitField0_ & ~0x08000000);
        motorspeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 motorvoltage = 29;
      private int motorvoltage_ ;
      /**
       * <code>optional int32 motorvoltage = 29;</code>
       *
       * <pre>
       *电机电压（单位：0.1V)
       * </pre>
       */
      public boolean hasMotorvoltage() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 motorvoltage = 29;</code>
       *
       * <pre>
       *电机电压（单位：0.1V)
       * </pre>
       */
      public int getMotorvoltage() {
        return motorvoltage_;
      }
      /**
       * <code>optional int32 motorvoltage = 29;</code>
       *
       * <pre>
       *电机电压（单位：0.1V)
       * </pre>
       */
      public Builder setMotorvoltage(int value) {
        bitField0_ |= 0x10000000;
        motorvoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 motorvoltage = 29;</code>
       *
       * <pre>
       *电机电压（单位：0.1V)
       * </pre>
       */
      public Builder clearMotorvoltage() {
        bitField0_ = (bitField0_ & ~0x10000000);
        motorvoltage_ = 0;
        onChanged();
        return this;
      }

      // optional int32 motorcurrent = 30;
      private int motorcurrent_ ;
      /**
       * <code>optional int32 motorcurrent = 30;</code>
       *
       * <pre>
       *电机电流（单位：1毫安)
       * </pre>
       */
      public boolean hasMotorcurrent() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 motorcurrent = 30;</code>
       *
       * <pre>
       *电机电流（单位：1毫安)
       * </pre>
       */
      public int getMotorcurrent() {
        return motorcurrent_;
      }
      /**
       * <code>optional int32 motorcurrent = 30;</code>
       *
       * <pre>
       *电机电流（单位：1毫安)
       * </pre>
       */
      public Builder setMotorcurrent(int value) {
        bitField0_ |= 0x20000000;
        motorcurrent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 motorcurrent = 30;</code>
       *
       * <pre>
       *电机电流（单位：1毫安)
       * </pre>
       */
      public Builder clearMotorcurrent() {
        bitField0_ = (bitField0_ & ~0x20000000);
        motorcurrent_ = 0;
        onChanged();
        return this;
      }

      // optional int32 aircontemperature = 31;
      private int aircontemperature_ ;
      /**
       * <code>optional int32 aircontemperature = 31;</code>
       *
       * <pre>
       *空调设定温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public boolean hasAircontemperature() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 aircontemperature = 31;</code>
       *
       * <pre>
       *空调设定温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public int getAircontemperature() {
        return aircontemperature_;
      }
      /**
       * <code>optional int32 aircontemperature = 31;</code>
       *
       * <pre>
       *空调设定温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder setAircontemperature(int value) {
        bitField0_ |= 0x40000000;
        aircontemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 aircontemperature = 31;</code>
       *
       * <pre>
       *空调设定温度, （单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder clearAircontemperature() {
        bitField0_ = (bitField0_ & ~0x40000000);
        aircontemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 batterytotalvoltage = 32;
      private int batterytotalvoltage_ ;
      /**
       * <code>optional int32 batterytotalvoltage = 32;</code>
       *
       * <pre>
       *动力蓄电池总电压（单位：0.1V)
       * </pre>
       */
      public boolean hasBatterytotalvoltage() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 batterytotalvoltage = 32;</code>
       *
       * <pre>
       *动力蓄电池总电压（单位：0.1V)
       * </pre>
       */
      public int getBatterytotalvoltage() {
        return batterytotalvoltage_;
      }
      /**
       * <code>optional int32 batterytotalvoltage = 32;</code>
       *
       * <pre>
       *动力蓄电池总电压（单位：0.1V)
       * </pre>
       */
      public Builder setBatterytotalvoltage(int value) {
        bitField0_ |= 0x80000000;
        batterytotalvoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batterytotalvoltage = 32;</code>
       *
       * <pre>
       *动力蓄电池总电压（单位：0.1V)
       * </pre>
       */
      public Builder clearBatterytotalvoltage() {
        bitField0_ = (bitField0_ & ~0x80000000);
        batterytotalvoltage_ = 0;
        onChanged();
        return this;
      }

      // optional int32 batterytotalcurrent = 33;
      private int batterytotalcurrent_ ;
      /**
       * <code>optional int32 batterytotalcurrent = 33;</code>
       *
       * <pre>
       *动力蓄电池总电流（单位：1毫安)
       * </pre>
       */
      public boolean hasBatterytotalcurrent() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 batterytotalcurrent = 33;</code>
       *
       * <pre>
       *动力蓄电池总电流（单位：1毫安)
       * </pre>
       */
      public int getBatterytotalcurrent() {
        return batterytotalcurrent_;
      }
      /**
       * <code>optional int32 batterytotalcurrent = 33;</code>
       *
       * <pre>
       *动力蓄电池总电流（单位：1毫安)
       * </pre>
       */
      public Builder setBatterytotalcurrent(int value) {
        bitField1_ |= 0x00000001;
        batterytotalcurrent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batterytotalcurrent = 33;</code>
       *
       * <pre>
       *动力蓄电池总电流（单位：1毫安)
       * </pre>
       */
      public Builder clearBatterytotalcurrent() {
        bitField1_ = (bitField1_ & ~0x00000001);
        batterytotalcurrent_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remaindcapacity = 34;
      private int remaindcapacity_ ;
      /**
       * <code>optional int32 remaindcapacity = 34;</code>
       *
       * <pre>
       *剩余能量（单位：o.1度,千卡时）
       * </pre>
       */
      public boolean hasRemaindcapacity() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 remaindcapacity = 34;</code>
       *
       * <pre>
       *剩余能量（单位：o.1度,千卡时）
       * </pre>
       */
      public int getRemaindcapacity() {
        return remaindcapacity_;
      }
      /**
       * <code>optional int32 remaindcapacity = 34;</code>
       *
       * <pre>
       *剩余能量（单位：o.1度,千卡时）
       * </pre>
       */
      public Builder setRemaindcapacity(int value) {
        bitField1_ |= 0x00000002;
        remaindcapacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remaindcapacity = 34;</code>
       *
       * <pre>
       *剩余能量（单位：o.1度,千卡时）
       * </pre>
       */
      public Builder clearRemaindcapacity() {
        bitField1_ = (bitField1_ & ~0x00000002);
        remaindcapacity_ = 0;
        onChanged();
        return this;
      }

      // optional int32 resistance = 35;
      private int resistance_ ;
      /**
       * <code>optional int32 resistance = 35;</code>
       *
       * <pre>
       *绝缘电阻（单位：欧母Ω）
       * </pre>
       */
      public boolean hasResistance() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 resistance = 35;</code>
       *
       * <pre>
       *绝缘电阻（单位：欧母Ω）
       * </pre>
       */
      public int getResistance() {
        return resistance_;
      }
      /**
       * <code>optional int32 resistance = 35;</code>
       *
       * <pre>
       *绝缘电阻（单位：欧母Ω）
       * </pre>
       */
      public Builder setResistance(int value) {
        bitField1_ |= 0x00000004;
        resistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 resistance = 35;</code>
       *
       * <pre>
       *绝缘电阻（单位：欧母Ω）
       * </pre>
       */
      public Builder clearResistance() {
        bitField1_ = (bitField1_ & ~0x00000004);
        resistance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalOil = 36;
      private int totalOil_ ;
      /**
       * <code>optional int32 totalOil = 36;</code>
       *
       * <pre>
       *累计油耗（单位：毫升）
       * </pre>
       */
      public boolean hasTotalOil() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 totalOil = 36;</code>
       *
       * <pre>
       *累计油耗（单位：毫升）
       * </pre>
       */
      public int getTotalOil() {
        return totalOil_;
      }
      /**
       * <code>optional int32 totalOil = 36;</code>
       *
       * <pre>
       *累计油耗（单位：毫升）
       * </pre>
       */
      public Builder setTotalOil(int value) {
        bitField1_ |= 0x00000008;
        totalOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalOil = 36;</code>
       *
       * <pre>
       *累计油耗（单位：毫升）
       * </pre>
       */
      public Builder clearTotalOil() {
        bitField1_ = (bitField1_ & ~0x00000008);
        totalOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalDriveTime = 37;
      private int totalDriveTime_ ;
      /**
       * <code>optional int32 totalDriveTime = 37;</code>
       *
       * <pre>
       *累计行驶时间（单位：秒）
       * </pre>
       */
      public boolean hasTotalDriveTime() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 totalDriveTime = 37;</code>
       *
       * <pre>
       *累计行驶时间（单位：秒）
       * </pre>
       */
      public int getTotalDriveTime() {
        return totalDriveTime_;
      }
      /**
       * <code>optional int32 totalDriveTime = 37;</code>
       *
       * <pre>
       *累计行驶时间（单位：秒）
       * </pre>
       */
      public Builder setTotalDriveTime(int value) {
        bitField1_ |= 0x00000010;
        totalDriveTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalDriveTime = 37;</code>
       *
       * <pre>
       *累计行驶时间（单位：秒）
       * </pre>
       */
      public Builder clearTotalDriveTime() {
        bitField1_ = (bitField1_ & ~0x00000010);
        totalDriveTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dashboardDistance = 38;
      private int dashboardDistance_ ;
      /**
       * <code>optional int32 dashboardDistance = 38;</code>
       *
       * <pre>
       *仪表盘里程（单位：米）
       * </pre>
       */
      public boolean hasDashboardDistance() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 dashboardDistance = 38;</code>
       *
       * <pre>
       *仪表盘里程（单位：米）
       * </pre>
       */
      public int getDashboardDistance() {
        return dashboardDistance_;
      }
      /**
       * <code>optional int32 dashboardDistance = 38;</code>
       *
       * <pre>
       *仪表盘里程（单位：米）
       * </pre>
       */
      public Builder setDashboardDistance(int value) {
        bitField1_ |= 0x00000020;
        dashboardDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dashboardDistance = 38;</code>
       *
       * <pre>
       *仪表盘里程（单位：米）
       * </pre>
       */
      public Builder clearDashboardDistance() {
        bitField1_ = (bitField1_ & ~0x00000020);
        dashboardDistance_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.OBDInfo)
    }

    static {
      defaultInstance = new OBDInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.OBDInfo)
  }

  public interface GpsSimpleInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 gpsTime = 1;
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    boolean hasGpsTime();
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    long getGpsTime();

    // required bool loc = 2;
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    boolean hasLoc();
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    boolean getLoc();

    // required int32 lat = 3;
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    boolean hasLat();
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    int getLat();

    // required int32 lng = 4;
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    boolean hasLng();
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    int getLng();

    // required int32 speed = 5;
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    int getSpeed();

    // required int32 course = 6;
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    boolean hasCourse();
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    int getCourse();

    // repeated int32 status = 7;
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    java.util.List<java.lang.Integer> getStatusList();
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    int getStatusCount();
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    int getStatus(int index);

    // optional int32 totalDistance = 8;
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    boolean hasTotalDistance();
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    int getTotalDistance();

    // optional int32 oil = 9;
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    boolean hasOil();
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    int getOil();

    // optional int32 remainPercentOil = 10;
    /**
     * <code>optional int32 remainPercentOil = 10;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    boolean hasRemainPercentOil();
    /**
     * <code>optional int32 remainPercentOil = 10;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    int getRemainPercentOil();

    // optional int32 canspeed = 11;
    /**
     * <code>optional int32 canspeed = 11;</code>
     *
     * <pre>
     *CAN速度（单位：百米每小时）,可能没有
     * </pre>
     */
    boolean hasCanspeed();
    /**
     * <code>optional int32 canspeed = 11;</code>
     *
     * <pre>
     *CAN速度（单位：百米每小时）,可能没有
     * </pre>
     */
    int getCanspeed();

    // optional int32 remainDistance = 12;
    /**
     * <code>optional int32 remainDistance = 12;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    boolean hasRemainDistance();
    /**
     * <code>optional int32 remainDistance = 12;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    int getRemainDistance();
  }
  /**
   * Protobuf type {@code gboss.GpsSimpleInfo}
   *
   * <pre>
   *************************************************************************************
   * GPS简单信息
   ************************************************************************************
   * </pre>
   */
  public static final class GpsSimpleInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsSimpleInfoOrBuilder {
    // Use GpsSimpleInfo.newBuilder() to construct.
    private GpsSimpleInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsSimpleInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsSimpleInfo defaultInstance;
    public static GpsSimpleInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsSimpleInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsSimpleInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gpsTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              loc_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lat_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              lng_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              speed_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              course_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                status_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              status_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                status_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                status_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              totalDistance_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              oil_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              remainPercentOil_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              canspeed_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              remainDistance_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = java.util.Collections.unmodifiableList(status_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsSimpleInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsSimpleInfo>() {
      public GpsSimpleInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsSimpleInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsSimpleInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 gpsTime = 1;
    public static final int GPSTIME_FIELD_NUMBER = 1;
    private long gpsTime_;
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public long getGpsTime() {
      return gpsTime_;
    }

    // required bool loc = 2;
    public static final int LOC_FIELD_NUMBER = 2;
    private boolean loc_;
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    public boolean hasLoc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    public boolean getLoc() {
      return loc_;
    }

    // required int32 lat = 3;
    public static final int LAT_FIELD_NUMBER = 3;
    private int lat_;
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public boolean hasLat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public int getLat() {
      return lat_;
    }

    // required int32 lng = 4;
    public static final int LNG_FIELD_NUMBER = 4;
    private int lng_;
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public boolean hasLng() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public int getLng() {
      return lng_;
    }

    // required int32 speed = 5;
    public static final int SPEED_FIELD_NUMBER = 5;
    private int speed_;
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public int getSpeed() {
      return speed_;
    }

    // required int32 course = 6;
    public static final int COURSE_FIELD_NUMBER = 6;
    private int course_;
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    public boolean hasCourse() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    public int getCourse() {
      return course_;
    }

    // repeated int32 status = 7;
    public static final int STATUS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> status_;
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getStatusList() {
      return status_;
    }
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public int getStatusCount() {
      return status_.size();
    }
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public int getStatus(int index) {
      return status_.get(index);
    }

    // optional int32 totalDistance = 8;
    public static final int TOTALDISTANCE_FIELD_NUMBER = 8;
    private int totalDistance_;
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public boolean hasTotalDistance() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public int getTotalDistance() {
      return totalDistance_;
    }

    // optional int32 oil = 9;
    public static final int OIL_FIELD_NUMBER = 9;
    private int oil_;
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    public boolean hasOil() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    public int getOil() {
      return oil_;
    }

    // optional int32 remainPercentOil = 10;
    public static final int REMAINPERCENTOIL_FIELD_NUMBER = 10;
    private int remainPercentOil_;
    /**
     * <code>optional int32 remainPercentOil = 10;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public boolean hasRemainPercentOil() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 remainPercentOil = 10;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public int getRemainPercentOil() {
      return remainPercentOil_;
    }

    // optional int32 canspeed = 11;
    public static final int CANSPEED_FIELD_NUMBER = 11;
    private int canspeed_;
    /**
     * <code>optional int32 canspeed = 11;</code>
     *
     * <pre>
     *CAN速度（单位：百米每小时）,可能没有
     * </pre>
     */
    public boolean hasCanspeed() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 canspeed = 11;</code>
     *
     * <pre>
     *CAN速度（单位：百米每小时）,可能没有
     * </pre>
     */
    public int getCanspeed() {
      return canspeed_;
    }

    // optional int32 remainDistance = 12;
    public static final int REMAINDISTANCE_FIELD_NUMBER = 12;
    private int remainDistance_;
    /**
     * <code>optional int32 remainDistance = 12;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    public boolean hasRemainDistance() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 remainDistance = 12;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    public int getRemainDistance() {
      return remainDistance_;
    }

    private void initFields() {
      gpsTime_ = 0L;
      loc_ = false;
      lat_ = 0;
      lng_ = 0;
      speed_ = 0;
      course_ = 0;
      status_ = java.util.Collections.emptyList();
      totalDistance_ = 0;
      oil_ = 0;
      remainPercentOil_ = 0;
      canspeed_ = 0;
      remainDistance_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGpsTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLoc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLng()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCourse()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, loc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, lng_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, course_);
      }
      for (int i = 0; i < status_.size(); i++) {
        output.writeInt32(7, status_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, oil_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, canspeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, remainDistance_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, loc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, lng_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, course_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < status_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(status_.get(i));
        }
        size += dataSize;
        size += 1 * getStatusList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, oil_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, canspeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, remainDistance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsSimpleInfo}
     *
     * <pre>
     *************************************************************************************
     * GPS简单信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        loc_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        lat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        lng_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        course_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        totalDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        oil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        remainPercentOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        canspeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        remainDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.loc_ = loc_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lat_ = lat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lng_ = lng_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.course_ = course_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = java.util.Collections.unmodifiableList(status_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalDistance_ = totalDistance_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.oil_ = oil_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.remainPercentOil_ = remainPercentOil_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.canspeed_ = canspeed_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.remainDistance_ = remainDistance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo.getDefaultInstance()) return this;
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasLoc()) {
          setLoc(other.getLoc());
        }
        if (other.hasLat()) {
          setLat(other.getLat());
        }
        if (other.hasLng()) {
          setLng(other.getLng());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasCourse()) {
          setCourse(other.getCourse());
        }
        if (!other.status_.isEmpty()) {
          if (status_.isEmpty()) {
            status_ = other.status_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureStatusIsMutable();
            status_.addAll(other.status_);
          }
          onChanged();
        }
        if (other.hasTotalDistance()) {
          setTotalDistance(other.getTotalDistance());
        }
        if (other.hasOil()) {
          setOil(other.getOil());
        }
        if (other.hasRemainPercentOil()) {
          setRemainPercentOil(other.getRemainPercentOil());
        }
        if (other.hasCanspeed()) {
          setCanspeed(other.getCanspeed());
        }
        if (other.hasRemainDistance()) {
          setRemainDistance(other.getRemainDistance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGpsTime()) {
          
          return false;
        }
        if (!hasLoc()) {
          
          return false;
        }
        if (!hasLat()) {
          
          return false;
        }
        if (!hasLng()) {
          
          return false;
        }
        if (!hasSpeed()) {
          
          return false;
        }
        if (!hasCourse()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.GpsSimpleInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 gpsTime = 1;
      private long gpsTime_ ;
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public long getGpsTime() {
        return gpsTime_;
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00000001;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }

      // required bool loc = 2;
      private boolean loc_ ;
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public boolean hasLoc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public boolean getLoc() {
        return loc_;
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public Builder setLoc(boolean value) {
        bitField0_ |= 0x00000002;
        loc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public Builder clearLoc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        loc_ = false;
        onChanged();
        return this;
      }

      // required int32 lat = 3;
      private int lat_ ;
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public boolean hasLat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public int getLat() {
        return lat_;
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder setLat(int value) {
        bitField0_ |= 0x00000004;
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder clearLat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lat_ = 0;
        onChanged();
        return this;
      }

      // required int32 lng = 4;
      private int lng_ ;
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public boolean hasLng() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public int getLng() {
        return lng_;
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder setLng(int value) {
        bitField0_ |= 0x00000008;
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder clearLng() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lng_ = 0;
        onChanged();
        return this;
      }

      // required int32 speed = 5;
      private int speed_ ;
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000010;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0;
        onChanged();
        return this;
      }

      // required int32 course = 6;
      private int course_ ;
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public boolean hasCourse() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public int getCourse() {
        return course_;
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public Builder setCourse(int value) {
        bitField0_ |= 0x00000020;
        course_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public Builder clearCourse() {
        bitField0_ = (bitField0_ & ~0x00000020);
        course_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 status = 7;
      private java.util.List<java.lang.Integer> status_ = java.util.Collections.emptyList();
      private void ensureStatusIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = new java.util.ArrayList<java.lang.Integer>(status_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getStatusList() {
        return java.util.Collections.unmodifiableList(status_);
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public int getStatusCount() {
        return status_.size();
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public int getStatus(int index) {
        return status_.get(index);
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder setStatus(
          int index, int value) {
        ensureStatusIsMutable();
        status_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder addStatus(int value) {
        ensureStatusIsMutable();
        status_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder addAllStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStatusIsMutable();
        super.addAll(values, status_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder clearStatus() {
        status_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 totalDistance = 8;
      private int totalDistance_ ;
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public boolean hasTotalDistance() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public int getTotalDistance() {
        return totalDistance_;
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder setTotalDistance(int value) {
        bitField0_ |= 0x00000080;
        totalDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder clearTotalDistance() {
        bitField0_ = (bitField0_ & ~0x00000080);
        totalDistance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 oil = 9;
      private int oil_ ;
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public boolean hasOil() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public int getOil() {
        return oil_;
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public Builder setOil(int value) {
        bitField0_ |= 0x00000100;
        oil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public Builder clearOil() {
        bitField0_ = (bitField0_ & ~0x00000100);
        oil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainPercentOil = 10;
      private int remainPercentOil_ ;
      /**
       * <code>optional int32 remainPercentOil = 10;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public boolean hasRemainPercentOil() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 remainPercentOil = 10;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public int getRemainPercentOil() {
        return remainPercentOil_;
      }
      /**
       * <code>optional int32 remainPercentOil = 10;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder setRemainPercentOil(int value) {
        bitField0_ |= 0x00000200;
        remainPercentOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainPercentOil = 10;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder clearRemainPercentOil() {
        bitField0_ = (bitField0_ & ~0x00000200);
        remainPercentOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 canspeed = 11;
      private int canspeed_ ;
      /**
       * <code>optional int32 canspeed = 11;</code>
       *
       * <pre>
       *CAN速度（单位：百米每小时）,可能没有
       * </pre>
       */
      public boolean hasCanspeed() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 canspeed = 11;</code>
       *
       * <pre>
       *CAN速度（单位：百米每小时）,可能没有
       * </pre>
       */
      public int getCanspeed() {
        return canspeed_;
      }
      /**
       * <code>optional int32 canspeed = 11;</code>
       *
       * <pre>
       *CAN速度（单位：百米每小时）,可能没有
       * </pre>
       */
      public Builder setCanspeed(int value) {
        bitField0_ |= 0x00000400;
        canspeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 canspeed = 11;</code>
       *
       * <pre>
       *CAN速度（单位：百米每小时）,可能没有
       * </pre>
       */
      public Builder clearCanspeed() {
        bitField0_ = (bitField0_ & ~0x00000400);
        canspeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainDistance = 12;
      private int remainDistance_ ;
      /**
       * <code>optional int32 remainDistance = 12;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public boolean hasRemainDistance() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 remainDistance = 12;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public int getRemainDistance() {
        return remainDistance_;
      }
      /**
       * <code>optional int32 remainDistance = 12;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public Builder setRemainDistance(int value) {
        bitField0_ |= 0x00000800;
        remainDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainDistance = 12;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public Builder clearRemainDistance() {
        bitField0_ = (bitField0_ & ~0x00000800);
        remainDistance_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsSimpleInfo)
    }

    static {
      defaultInstance = new GpsSimpleInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsSimpleInfo)
  }

  public interface BaseStationInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string mcc = 1;
    /**
     * <code>required string mcc = 1;</code>
     *
     * <pre>
     *移动国家代码（中国为460） 
     * </pre>
     */
    boolean hasMcc();
    /**
     * <code>required string mcc = 1;</code>
     *
     * <pre>
     *移动国家代码（中国为460） 
     * </pre>
     */
    java.lang.String getMcc();
    /**
     * <code>required string mcc = 1;</code>
     *
     * <pre>
     *移动国家代码（中国为460） 
     * </pre>
     */
    com.google.protobuf.ByteString
        getMccBytes();

    // required string mnc = 2;
    /**
     * <code>required string mnc = 2;</code>
     *
     * <pre>
     *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
     * </pre>
     */
    boolean hasMnc();
    /**
     * <code>required string mnc = 2;</code>
     *
     * <pre>
     *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
     * </pre>
     */
    java.lang.String getMnc();
    /**
     * <code>required string mnc = 2;</code>
     *
     * <pre>
     *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
     * </pre>
     */
    com.google.protobuf.ByteString
        getMncBytes();

    // required int32 lac = 3;
    /**
     * <code>required int32 lac = 3;</code>
     *
     * <pre>
     *位置区域码
     * </pre>
     */
    boolean hasLac();
    /**
     * <code>required int32 lac = 3;</code>
     *
     * <pre>
     *位置区域码
     * </pre>
     */
    int getLac();

    // required int32 cid = 4;
    /**
     * <code>required int32 cid = 4;</code>
     *
     * <pre>
     *基站编号
     * </pre>
     */
    boolean hasCid();
    /**
     * <code>required int32 cid = 4;</code>
     *
     * <pre>
     *基站编号
     * </pre>
     */
    int getCid();

    // optional int32 bsss = 5;
    /**
     * <code>optional int32 bsss = 5;</code>
     *
     * <pre>
     *基站信号强度(单位：dbm)
     * </pre>
     */
    boolean hasBsss();
    /**
     * <code>optional int32 bsss = 5;</code>
     *
     * <pre>
     *基站信号强度(单位：dbm)
     * </pre>
     */
    int getBsss();
  }
  /**
   * Protobuf type {@code gboss.BaseStationInfo}
   *
   * <pre>
   **
   * 基站信息
   * </pre>
   */
  public static final class BaseStationInfo extends
      com.google.protobuf.GeneratedMessage
      implements BaseStationInfoOrBuilder {
    // Use BaseStationInfo.newBuilder() to construct.
    private BaseStationInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BaseStationInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BaseStationInfo defaultInstance;
    public static BaseStationInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BaseStationInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BaseStationInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              mcc_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              mnc_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lac_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cid_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bsss_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BaseStationInfo> PARSER =
        new com.google.protobuf.AbstractParser<BaseStationInfo>() {
      public BaseStationInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BaseStationInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BaseStationInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string mcc = 1;
    public static final int MCC_FIELD_NUMBER = 1;
    private java.lang.Object mcc_;
    /**
     * <code>required string mcc = 1;</code>
     *
     * <pre>
     *移动国家代码（中国为460） 
     * </pre>
     */
    public boolean hasMcc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string mcc = 1;</code>
     *
     * <pre>
     *移动国家代码（中国为460） 
     * </pre>
     */
    public java.lang.String getMcc() {
      java.lang.Object ref = mcc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mcc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mcc = 1;</code>
     *
     * <pre>
     *移动国家代码（中国为460） 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMccBytes() {
      java.lang.Object ref = mcc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mcc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string mnc = 2;
    public static final int MNC_FIELD_NUMBER = 2;
    private java.lang.Object mnc_;
    /**
     * <code>required string mnc = 2;</code>
     *
     * <pre>
     *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
     * </pre>
     */
    public boolean hasMnc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string mnc = 2;</code>
     *
     * <pre>
     *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
     * </pre>
     */
    public java.lang.String getMnc() {
      java.lang.Object ref = mnc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mnc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mnc = 2;</code>
     *
     * <pre>
     *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMncBytes() {
      java.lang.Object ref = mnc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mnc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 lac = 3;
    public static final int LAC_FIELD_NUMBER = 3;
    private int lac_;
    /**
     * <code>required int32 lac = 3;</code>
     *
     * <pre>
     *位置区域码
     * </pre>
     */
    public boolean hasLac() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 lac = 3;</code>
     *
     * <pre>
     *位置区域码
     * </pre>
     */
    public int getLac() {
      return lac_;
    }

    // required int32 cid = 4;
    public static final int CID_FIELD_NUMBER = 4;
    private int cid_;
    /**
     * <code>required int32 cid = 4;</code>
     *
     * <pre>
     *基站编号
     * </pre>
     */
    public boolean hasCid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 cid = 4;</code>
     *
     * <pre>
     *基站编号
     * </pre>
     */
    public int getCid() {
      return cid_;
    }

    // optional int32 bsss = 5;
    public static final int BSSS_FIELD_NUMBER = 5;
    private int bsss_;
    /**
     * <code>optional int32 bsss = 5;</code>
     *
     * <pre>
     *基站信号强度(单位：dbm)
     * </pre>
     */
    public boolean hasBsss() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 bsss = 5;</code>
     *
     * <pre>
     *基站信号强度(单位：dbm)
     * </pre>
     */
    public int getBsss() {
      return bsss_;
    }

    private void initFields() {
      mcc_ = "";
      mnc_ = "";
      lac_ = 0;
      cid_ = 0;
      bsss_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMcc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMnc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLac()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMccBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMncBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lac_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, cid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, bsss_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMccBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMncBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lac_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, bsss_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.BaseStationInfo}
     *
     * <pre>
     **
     * 基站信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mcc_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mnc_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        lac_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bsss_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mcc_ = mcc_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mnc_ = mnc_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lac_ = lac_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cid_ = cid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bsss_ = bsss_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.getDefaultInstance()) return this;
        if (other.hasMcc()) {
          bitField0_ |= 0x00000001;
          mcc_ = other.mcc_;
          onChanged();
        }
        if (other.hasMnc()) {
          bitField0_ |= 0x00000002;
          mnc_ = other.mnc_;
          onChanged();
        }
        if (other.hasLac()) {
          setLac(other.getLac());
        }
        if (other.hasCid()) {
          setCid(other.getCid());
        }
        if (other.hasBsss()) {
          setBsss(other.getBsss());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMcc()) {
          
          return false;
        }
        if (!hasMnc()) {
          
          return false;
        }
        if (!hasLac()) {
          
          return false;
        }
        if (!hasCid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string mcc = 1;
      private java.lang.Object mcc_ = "";
      /**
       * <code>required string mcc = 1;</code>
       *
       * <pre>
       *移动国家代码（中国为460） 
       * </pre>
       */
      public boolean hasMcc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string mcc = 1;</code>
       *
       * <pre>
       *移动国家代码（中国为460） 
       * </pre>
       */
      public java.lang.String getMcc() {
        java.lang.Object ref = mcc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mcc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mcc = 1;</code>
       *
       * <pre>
       *移动国家代码（中国为460） 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMccBytes() {
        java.lang.Object ref = mcc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mcc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mcc = 1;</code>
       *
       * <pre>
       *移动国家代码（中国为460） 
       * </pre>
       */
      public Builder setMcc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mcc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string mcc = 1;</code>
       *
       * <pre>
       *移动国家代码（中国为460） 
       * </pre>
       */
      public Builder clearMcc() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mcc_ = getDefaultInstance().getMcc();
        onChanged();
        return this;
      }
      /**
       * <code>required string mcc = 1;</code>
       *
       * <pre>
       *移动国家代码（中国为460） 
       * </pre>
       */
      public Builder setMccBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mcc_ = value;
        onChanged();
        return this;
      }

      // required string mnc = 2;
      private java.lang.Object mnc_ = "";
      /**
       * <code>required string mnc = 2;</code>
       *
       * <pre>
       *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
       * </pre>
       */
      public boolean hasMnc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string mnc = 2;</code>
       *
       * <pre>
       *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
       * </pre>
       */
      public java.lang.String getMnc() {
        java.lang.Object ref = mnc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mnc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mnc = 2;</code>
       *
       * <pre>
       *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMncBytes() {
        java.lang.Object ref = mnc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mnc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mnc = 2;</code>
       *
       * <pre>
       *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
       * </pre>
       */
      public Builder setMnc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mnc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string mnc = 2;</code>
       *
       * <pre>
       *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
       * </pre>
       */
      public Builder clearMnc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mnc_ = getDefaultInstance().getMnc();
        onChanged();
        return this;
      }
      /**
       * <code>required string mnc = 2;</code>
       *
       * <pre>
       *移动网络号码（中国移动为0，中国联通为1，中国电信为2）
       * </pre>
       */
      public Builder setMncBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mnc_ = value;
        onChanged();
        return this;
      }

      // required int32 lac = 3;
      private int lac_ ;
      /**
       * <code>required int32 lac = 3;</code>
       *
       * <pre>
       *位置区域码
       * </pre>
       */
      public boolean hasLac() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 lac = 3;</code>
       *
       * <pre>
       *位置区域码
       * </pre>
       */
      public int getLac() {
        return lac_;
      }
      /**
       * <code>required int32 lac = 3;</code>
       *
       * <pre>
       *位置区域码
       * </pre>
       */
      public Builder setLac(int value) {
        bitField0_ |= 0x00000004;
        lac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lac = 3;</code>
       *
       * <pre>
       *位置区域码
       * </pre>
       */
      public Builder clearLac() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lac_ = 0;
        onChanged();
        return this;
      }

      // required int32 cid = 4;
      private int cid_ ;
      /**
       * <code>required int32 cid = 4;</code>
       *
       * <pre>
       *基站编号
       * </pre>
       */
      public boolean hasCid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 cid = 4;</code>
       *
       * <pre>
       *基站编号
       * </pre>
       */
      public int getCid() {
        return cid_;
      }
      /**
       * <code>required int32 cid = 4;</code>
       *
       * <pre>
       *基站编号
       * </pre>
       */
      public Builder setCid(int value) {
        bitField0_ |= 0x00000008;
        cid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cid = 4;</code>
       *
       * <pre>
       *基站编号
       * </pre>
       */
      public Builder clearCid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bsss = 5;
      private int bsss_ ;
      /**
       * <code>optional int32 bsss = 5;</code>
       *
       * <pre>
       *基站信号强度(单位：dbm)
       * </pre>
       */
      public boolean hasBsss() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 bsss = 5;</code>
       *
       * <pre>
       *基站信号强度(单位：dbm)
       * </pre>
       */
      public int getBsss() {
        return bsss_;
      }
      /**
       * <code>optional int32 bsss = 5;</code>
       *
       * <pre>
       *基站信号强度(单位：dbm)
       * </pre>
       */
      public Builder setBsss(int value) {
        bitField0_ |= 0x00000010;
        bsss_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bsss = 5;</code>
       *
       * <pre>
       *基站信号强度(单位：dbm)
       * </pre>
       */
      public Builder clearBsss() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bsss_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.BaseStationInfo)
    }

    static {
      defaultInstance = new BaseStationInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.BaseStationInfo)
  }

  public interface BaseStationAddressOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 lat = 1;
    /**
     * <code>required int32 lat = 1;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    boolean hasLat();
    /**
     * <code>required int32 lat = 1;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    int getLat();

    // required int32 lng = 2;
    /**
     * <code>required int32 lng = 2;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    boolean hasLng();
    /**
     * <code>required int32 lng = 2;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    int getLng();

    // optional int32 precision = 3;
    /**
     * <code>optional int32 precision = 3;</code>
     *
     * <pre>
     *精度(单位：米)
     * </pre>
     */
    boolean hasPrecision();
    /**
     * <code>optional int32 precision = 3;</code>
     *
     * <pre>
     *精度(单位：米)
     * </pre>
     */
    int getPrecision();

    // optional string addressDesc = 4;
    /**
     * <code>optional string addressDesc = 4;</code>
     *
     * <pre>
     *位置描述
     * </pre>
     */
    boolean hasAddressDesc();
    /**
     * <code>optional string addressDesc = 4;</code>
     *
     * <pre>
     *位置描述
     * </pre>
     */
    java.lang.String getAddressDesc();
    /**
     * <code>optional string addressDesc = 4;</code>
     *
     * <pre>
     *位置描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getAddressDescBytes();
  }
  /**
   * Protobuf type {@code gboss.BaseStationAddress}
   *
   * <pre>
   **
   * 基站定位信息
   * </pre>
   */
  public static final class BaseStationAddress extends
      com.google.protobuf.GeneratedMessage
      implements BaseStationAddressOrBuilder {
    // Use BaseStationAddress.newBuilder() to construct.
    private BaseStationAddress(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BaseStationAddress(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BaseStationAddress defaultInstance;
    public static BaseStationAddress getDefaultInstance() {
      return defaultInstance;
    }

    public BaseStationAddress getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BaseStationAddress(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lng_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              precision_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              addressDesc_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationAddress_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationAddress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.class, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.Builder.class);
    }

    public static com.google.protobuf.Parser<BaseStationAddress> PARSER =
        new com.google.protobuf.AbstractParser<BaseStationAddress>() {
      public BaseStationAddress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BaseStationAddress(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BaseStationAddress> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 lat = 1;
    public static final int LAT_FIELD_NUMBER = 1;
    private int lat_;
    /**
     * <code>required int32 lat = 1;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public boolean hasLat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 lat = 1;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public int getLat() {
      return lat_;
    }

    // required int32 lng = 2;
    public static final int LNG_FIELD_NUMBER = 2;
    private int lng_;
    /**
     * <code>required int32 lng = 2;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public boolean hasLng() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 lng = 2;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public int getLng() {
      return lng_;
    }

    // optional int32 precision = 3;
    public static final int PRECISION_FIELD_NUMBER = 3;
    private int precision_;
    /**
     * <code>optional int32 precision = 3;</code>
     *
     * <pre>
     *精度(单位：米)
     * </pre>
     */
    public boolean hasPrecision() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 precision = 3;</code>
     *
     * <pre>
     *精度(单位：米)
     * </pre>
     */
    public int getPrecision() {
      return precision_;
    }

    // optional string addressDesc = 4;
    public static final int ADDRESSDESC_FIELD_NUMBER = 4;
    private java.lang.Object addressDesc_;
    /**
     * <code>optional string addressDesc = 4;</code>
     *
     * <pre>
     *位置描述
     * </pre>
     */
    public boolean hasAddressDesc() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string addressDesc = 4;</code>
     *
     * <pre>
     *位置描述
     * </pre>
     */
    public java.lang.String getAddressDesc() {
      java.lang.Object ref = addressDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          addressDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string addressDesc = 4;</code>
     *
     * <pre>
     *位置描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAddressDescBytes() {
      java.lang.Object ref = addressDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        addressDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      lat_ = 0;
      lng_ = 0;
      precision_ = 0;
      addressDesc_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLng()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, lat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, lng_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, precision_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getAddressDescBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, lat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lng_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, precision_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getAddressDescBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.BaseStationAddress}
     *
     * <pre>
     **
     * 基站定位信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationAddress_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationAddress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.class, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lng_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        precision_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        addressDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BaseStationAddress_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress build() {
        cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress result = new cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lat_ = lat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lng_ = lng_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.precision_ = precision_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.addressDesc_ = addressDesc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.getDefaultInstance()) return this;
        if (other.hasLat()) {
          setLat(other.getLat());
        }
        if (other.hasLng()) {
          setLng(other.getLng());
        }
        if (other.hasPrecision()) {
          setPrecision(other.getPrecision());
        }
        if (other.hasAddressDesc()) {
          bitField0_ |= 0x00000008;
          addressDesc_ = other.addressDesc_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLat()) {
          
          return false;
        }
        if (!hasLng()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 lat = 1;
      private int lat_ ;
      /**
       * <code>required int32 lat = 1;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public boolean hasLat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 lat = 1;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public int getLat() {
        return lat_;
      }
      /**
       * <code>required int32 lat = 1;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder setLat(int value) {
        bitField0_ |= 0x00000001;
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lat = 1;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder clearLat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lat_ = 0;
        onChanged();
        return this;
      }

      // required int32 lng = 2;
      private int lng_ ;
      /**
       * <code>required int32 lng = 2;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public boolean hasLng() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 lng = 2;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public int getLng() {
        return lng_;
      }
      /**
       * <code>required int32 lng = 2;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder setLng(int value) {
        bitField0_ |= 0x00000002;
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lng = 2;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder clearLng() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lng_ = 0;
        onChanged();
        return this;
      }

      // optional int32 precision = 3;
      private int precision_ ;
      /**
       * <code>optional int32 precision = 3;</code>
       *
       * <pre>
       *精度(单位：米)
       * </pre>
       */
      public boolean hasPrecision() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 precision = 3;</code>
       *
       * <pre>
       *精度(单位：米)
       * </pre>
       */
      public int getPrecision() {
        return precision_;
      }
      /**
       * <code>optional int32 precision = 3;</code>
       *
       * <pre>
       *精度(单位：米)
       * </pre>
       */
      public Builder setPrecision(int value) {
        bitField0_ |= 0x00000004;
        precision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 precision = 3;</code>
       *
       * <pre>
       *精度(单位：米)
       * </pre>
       */
      public Builder clearPrecision() {
        bitField0_ = (bitField0_ & ~0x00000004);
        precision_ = 0;
        onChanged();
        return this;
      }

      // optional string addressDesc = 4;
      private java.lang.Object addressDesc_ = "";
      /**
       * <code>optional string addressDesc = 4;</code>
       *
       * <pre>
       *位置描述
       * </pre>
       */
      public boolean hasAddressDesc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string addressDesc = 4;</code>
       *
       * <pre>
       *位置描述
       * </pre>
       */
      public java.lang.String getAddressDesc() {
        java.lang.Object ref = addressDesc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          addressDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string addressDesc = 4;</code>
       *
       * <pre>
       *位置描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAddressDescBytes() {
        java.lang.Object ref = addressDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          addressDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string addressDesc = 4;</code>
       *
       * <pre>
       *位置描述
       * </pre>
       */
      public Builder setAddressDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        addressDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string addressDesc = 4;</code>
       *
       * <pre>
       *位置描述
       * </pre>
       */
      public Builder clearAddressDesc() {
        bitField0_ = (bitField0_ & ~0x00000008);
        addressDesc_ = getDefaultInstance().getAddressDesc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string addressDesc = 4;</code>
       *
       * <pre>
       *位置描述
       * </pre>
       */
      public Builder setAddressDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        addressDesc_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.BaseStationAddress)
    }

    static {
      defaultInstance = new BaseStationAddress(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.BaseStationAddress)
  }

  public interface WifiAPInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string ssid = 1;
    /**
     * <code>required string ssid = 1;</code>
     *
     * <pre>
     *wifi ssid 
     * </pre>
     */
    boolean hasSsid();
    /**
     * <code>required string ssid = 1;</code>
     *
     * <pre>
     *wifi ssid 
     * </pre>
     */
    java.lang.String getSsid();
    /**
     * <code>required string ssid = 1;</code>
     *
     * <pre>
     *wifi ssid 
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsidBytes();

    // required string mac = 2;
    /**
     * <code>required string mac = 2;</code>
     *
     * <pre>
     *wifi mac地址
     * </pre>
     */
    boolean hasMac();
    /**
     * <code>required string mac = 2;</code>
     *
     * <pre>
     *wifi mac地址
     * </pre>
     */
    java.lang.String getMac();
    /**
     * <code>required string mac = 2;</code>
     *
     * <pre>
     *wifi mac地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getMacBytes();

    // required int32 signalIntensity = 3;
    /**
     * <code>required int32 signalIntensity = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    boolean hasSignalIntensity();
    /**
     * <code>required int32 signalIntensity = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    int getSignalIntensity();
  }
  /**
   * Protobuf type {@code gboss.WifiAPInfo}
   *
   * <pre>
   **
   * wifi ap 信息
   * </pre>
   */
  public static final class WifiAPInfo extends
      com.google.protobuf.GeneratedMessage
      implements WifiAPInfoOrBuilder {
    // Use WifiAPInfo.newBuilder() to construct.
    private WifiAPInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WifiAPInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WifiAPInfo defaultInstance;
    public static WifiAPInfo getDefaultInstance() {
      return defaultInstance;
    }

    public WifiAPInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WifiAPInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ssid_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              mac_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              signalIntensity_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_WifiAPInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_WifiAPInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<WifiAPInfo> PARSER =
        new com.google.protobuf.AbstractParser<WifiAPInfo>() {
      public WifiAPInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WifiAPInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WifiAPInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string ssid = 1;
    public static final int SSID_FIELD_NUMBER = 1;
    private java.lang.Object ssid_;
    /**
     * <code>required string ssid = 1;</code>
     *
     * <pre>
     *wifi ssid 
     * </pre>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string ssid = 1;</code>
     *
     * <pre>
     *wifi ssid 
     * </pre>
     */
    public java.lang.String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ssid = 1;</code>
     *
     * <pre>
     *wifi ssid 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string mac = 2;
    public static final int MAC_FIELD_NUMBER = 2;
    private java.lang.Object mac_;
    /**
     * <code>required string mac = 2;</code>
     *
     * <pre>
     *wifi mac地址
     * </pre>
     */
    public boolean hasMac() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string mac = 2;</code>
     *
     * <pre>
     *wifi mac地址
     * </pre>
     */
    public java.lang.String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mac_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mac = 2;</code>
     *
     * <pre>
     *wifi mac地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 signalIntensity = 3;
    public static final int SIGNALINTENSITY_FIELD_NUMBER = 3;
    private int signalIntensity_;
    /**
     * <code>required int32 signalIntensity = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    public boolean hasSignalIntensity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 signalIntensity = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    public int getSignalIntensity() {
      return signalIntensity_;
    }

    private void initFields() {
      ssid_ = "";
      mac_ = "";
      signalIntensity_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSsid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMac()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignalIntensity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMacBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, signalIntensity_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMacBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, signalIntensity_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.WifiAPInfo}
     *
     * <pre>
     **
     * wifi ap 信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_WifiAPInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_WifiAPInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        signalIntensity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_WifiAPInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signalIntensity_ = signalIntensity_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.getDefaultInstance()) return this;
        if (other.hasSsid()) {
          bitField0_ |= 0x00000001;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasMac()) {
          bitField0_ |= 0x00000002;
          mac_ = other.mac_;
          onChanged();
        }
        if (other.hasSignalIntensity()) {
          setSignalIntensity(other.getSignalIntensity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSsid()) {
          
          return false;
        }
        if (!hasMac()) {
          
          return false;
        }
        if (!hasSignalIntensity()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string ssid = 1;
      private java.lang.Object ssid_ = "";
      /**
       * <code>required string ssid = 1;</code>
       *
       * <pre>
       *wifi ssid 
       * </pre>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string ssid = 1;</code>
       *
       * <pre>
       *wifi ssid 
       * </pre>
       */
      public java.lang.String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ssid = 1;</code>
       *
       * <pre>
       *wifi ssid 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        java.lang.Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ssid = 1;</code>
       *
       * <pre>
       *wifi ssid 
       * </pre>
       */
      public Builder setSsid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ssid = 1;</code>
       *
       * <pre>
       *wifi ssid 
       * </pre>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>required string ssid = 1;</code>
       *
       * <pre>
       *wifi ssid 
       * </pre>
       */
      public Builder setSsidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }

      // required string mac = 2;
      private java.lang.Object mac_ = "";
      /**
       * <code>required string mac = 2;</code>
       *
       * <pre>
       *wifi mac地址
       * </pre>
       */
      public boolean hasMac() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string mac = 2;</code>
       *
       * <pre>
       *wifi mac地址
       * </pre>
       */
      public java.lang.String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mac = 2;</code>
       *
       * <pre>
       *wifi mac地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMacBytes() {
        java.lang.Object ref = mac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mac = 2;</code>
       *
       * <pre>
       *wifi mac地址
       * </pre>
       */
      public Builder setMac(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string mac = 2;</code>
       *
       * <pre>
       *wifi mac地址
       * </pre>
       */
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      /**
       * <code>required string mac = 2;</code>
       *
       * <pre>
       *wifi mac地址
       * </pre>
       */
      public Builder setMacBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
        return this;
      }

      // required int32 signalIntensity = 3;
      private int signalIntensity_ ;
      /**
       * <code>required int32 signalIntensity = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public boolean hasSignalIntensity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 signalIntensity = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public int getSignalIntensity() {
        return signalIntensity_;
      }
      /**
       * <code>required int32 signalIntensity = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public Builder setSignalIntensity(int value) {
        bitField0_ |= 0x00000004;
        signalIntensity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 signalIntensity = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public Builder clearSignalIntensity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signalIntensity_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.WifiAPInfo)
    }

    static {
      defaultInstance = new WifiAPInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.WifiAPInfo)
  }

  public interface YDWInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 temperature = 1;
    /**
     * <code>required int32 temperature = 1;</code>
     *
     * <pre>
     *温度（单位：十分之一摄氏度）
     * </pre>
     */
    boolean hasTemperature();
    /**
     * <code>required int32 temperature = 1;</code>
     *
     * <pre>
     *温度（单位：十分之一摄氏度）
     * </pre>
     */
    int getTemperature();

    // required int32 drivingTime = 2;
    /**
     * <code>required int32 drivingTime = 2;</code>
     *
     * <pre>
     *行驶时长（单位:秒）
     * </pre>
     */
    boolean hasDrivingTime();
    /**
     * <code>required int32 drivingTime = 2;</code>
     *
     * <pre>
     *行驶时长（单位:秒）
     * </pre>
     */
    int getDrivingTime();

    // required int32 totalDistance = 3;
    /**
     * <code>required int32 totalDistance = 3;</code>
     *
     * <pre>
     *即时里程（单位：米）
     * </pre>
     */
    boolean hasTotalDistance();
    /**
     * <code>required int32 totalDistance = 3;</code>
     *
     * <pre>
     *即时里程（单位：米）
     * </pre>
     */
    int getTotalDistance();

    // required int32 unitPower = 4;
    /**
     * <code>required int32 unitPower = 4;</code>
     *
     * <pre>
     *车台电量（数值为0~5，越大表示电量越高）
     * </pre>
     */
    boolean hasUnitPower();
    /**
     * <code>required int32 unitPower = 4;</code>
     *
     * <pre>
     *车台电量（数值为0~5，越大表示电量越高）
     * </pre>
     */
    int getUnitPower();

    // required int32 bluetoothPower = 5;
    /**
     * <code>required int32 bluetoothPower = 5;</code>
     *
     * <pre>
     *蓝牙感应器电量（数值为0~5，越大表示电量越高）
     * </pre>
     */
    boolean hasBluetoothPower();
    /**
     * <code>required int32 bluetoothPower = 5;</code>
     *
     * <pre>
     *蓝牙感应器电量（数值为0~5，越大表示电量越高）
     * </pre>
     */
    int getBluetoothPower();
  }
  /**
   * Protobuf type {@code gboss.YDWInfo}
   *
   * <pre>
   **
   * 一动网信息
   * </pre>
   */
  public static final class YDWInfo extends
      com.google.protobuf.GeneratedMessage
      implements YDWInfoOrBuilder {
    // Use YDWInfo.newBuilder() to construct.
    private YDWInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private YDWInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final YDWInfo defaultInstance;
    public static YDWInfo getDefaultInstance() {
      return defaultInstance;
    }

    public YDWInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private YDWInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              temperature_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              drivingTime_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              totalDistance_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              unitPower_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bluetoothPower_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_YDWInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_YDWInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<YDWInfo> PARSER =
        new com.google.protobuf.AbstractParser<YDWInfo>() {
      public YDWInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new YDWInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<YDWInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 temperature = 1;
    public static final int TEMPERATURE_FIELD_NUMBER = 1;
    private int temperature_;
    /**
     * <code>required int32 temperature = 1;</code>
     *
     * <pre>
     *温度（单位：十分之一摄氏度）
     * </pre>
     */
    public boolean hasTemperature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 temperature = 1;</code>
     *
     * <pre>
     *温度（单位：十分之一摄氏度）
     * </pre>
     */
    public int getTemperature() {
      return temperature_;
    }

    // required int32 drivingTime = 2;
    public static final int DRIVINGTIME_FIELD_NUMBER = 2;
    private int drivingTime_;
    /**
     * <code>required int32 drivingTime = 2;</code>
     *
     * <pre>
     *行驶时长（单位:秒）
     * </pre>
     */
    public boolean hasDrivingTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 drivingTime = 2;</code>
     *
     * <pre>
     *行驶时长（单位:秒）
     * </pre>
     */
    public int getDrivingTime() {
      return drivingTime_;
    }

    // required int32 totalDistance = 3;
    public static final int TOTALDISTANCE_FIELD_NUMBER = 3;
    private int totalDistance_;
    /**
     * <code>required int32 totalDistance = 3;</code>
     *
     * <pre>
     *即时里程（单位：米）
     * </pre>
     */
    public boolean hasTotalDistance() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 totalDistance = 3;</code>
     *
     * <pre>
     *即时里程（单位：米）
     * </pre>
     */
    public int getTotalDistance() {
      return totalDistance_;
    }

    // required int32 unitPower = 4;
    public static final int UNITPOWER_FIELD_NUMBER = 4;
    private int unitPower_;
    /**
     * <code>required int32 unitPower = 4;</code>
     *
     * <pre>
     *车台电量（数值为0~5，越大表示电量越高）
     * </pre>
     */
    public boolean hasUnitPower() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 unitPower = 4;</code>
     *
     * <pre>
     *车台电量（数值为0~5，越大表示电量越高）
     * </pre>
     */
    public int getUnitPower() {
      return unitPower_;
    }

    // required int32 bluetoothPower = 5;
    public static final int BLUETOOTHPOWER_FIELD_NUMBER = 5;
    private int bluetoothPower_;
    /**
     * <code>required int32 bluetoothPower = 5;</code>
     *
     * <pre>
     *蓝牙感应器电量（数值为0~5，越大表示电量越高）
     * </pre>
     */
    public boolean hasBluetoothPower() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 bluetoothPower = 5;</code>
     *
     * <pre>
     *蓝牙感应器电量（数值为0~5，越大表示电量越高）
     * </pre>
     */
    public int getBluetoothPower() {
      return bluetoothPower_;
    }

    private void initFields() {
      temperature_ = 0;
      drivingTime_ = 0;
      totalDistance_ = 0;
      unitPower_ = 0;
      bluetoothPower_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTemperature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDrivingTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnitPower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBluetoothPower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, temperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, drivingTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, totalDistance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, unitPower_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, bluetoothPower_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, temperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, drivingTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, totalDistance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, unitPower_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, bluetoothPower_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.YDWInfo}
     *
     * <pre>
     **
     * 一动网信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.YDWInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_YDWInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_YDWInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        temperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        drivingTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        totalDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        unitPower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bluetoothPower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_YDWInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.temperature_ = temperature_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.drivingTime_ = drivingTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalDistance_ = totalDistance_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.unitPower_ = unitPower_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bluetoothPower_ = bluetoothPower_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.getDefaultInstance()) return this;
        if (other.hasTemperature()) {
          setTemperature(other.getTemperature());
        }
        if (other.hasDrivingTime()) {
          setDrivingTime(other.getDrivingTime());
        }
        if (other.hasTotalDistance()) {
          setTotalDistance(other.getTotalDistance());
        }
        if (other.hasUnitPower()) {
          setUnitPower(other.getUnitPower());
        }
        if (other.hasBluetoothPower()) {
          setBluetoothPower(other.getBluetoothPower());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTemperature()) {
          
          return false;
        }
        if (!hasDrivingTime()) {
          
          return false;
        }
        if (!hasTotalDistance()) {
          
          return false;
        }
        if (!hasUnitPower()) {
          
          return false;
        }
        if (!hasBluetoothPower()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 temperature = 1;
      private int temperature_ ;
      /**
       * <code>required int32 temperature = 1;</code>
       *
       * <pre>
       *温度（单位：十分之一摄氏度）
       * </pre>
       */
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 temperature = 1;</code>
       *
       * <pre>
       *温度（单位：十分之一摄氏度）
       * </pre>
       */
      public int getTemperature() {
        return temperature_;
      }
      /**
       * <code>required int32 temperature = 1;</code>
       *
       * <pre>
       *温度（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder setTemperature(int value) {
        bitField0_ |= 0x00000001;
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 temperature = 1;</code>
       *
       * <pre>
       *温度（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder clearTemperature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        temperature_ = 0;
        onChanged();
        return this;
      }

      // required int32 drivingTime = 2;
      private int drivingTime_ ;
      /**
       * <code>required int32 drivingTime = 2;</code>
       *
       * <pre>
       *行驶时长（单位:秒）
       * </pre>
       */
      public boolean hasDrivingTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 drivingTime = 2;</code>
       *
       * <pre>
       *行驶时长（单位:秒）
       * </pre>
       */
      public int getDrivingTime() {
        return drivingTime_;
      }
      /**
       * <code>required int32 drivingTime = 2;</code>
       *
       * <pre>
       *行驶时长（单位:秒）
       * </pre>
       */
      public Builder setDrivingTime(int value) {
        bitField0_ |= 0x00000002;
        drivingTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 drivingTime = 2;</code>
       *
       * <pre>
       *行驶时长（单位:秒）
       * </pre>
       */
      public Builder clearDrivingTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        drivingTime_ = 0;
        onChanged();
        return this;
      }

      // required int32 totalDistance = 3;
      private int totalDistance_ ;
      /**
       * <code>required int32 totalDistance = 3;</code>
       *
       * <pre>
       *即时里程（单位：米）
       * </pre>
       */
      public boolean hasTotalDistance() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 totalDistance = 3;</code>
       *
       * <pre>
       *即时里程（单位：米）
       * </pre>
       */
      public int getTotalDistance() {
        return totalDistance_;
      }
      /**
       * <code>required int32 totalDistance = 3;</code>
       *
       * <pre>
       *即时里程（单位：米）
       * </pre>
       */
      public Builder setTotalDistance(int value) {
        bitField0_ |= 0x00000004;
        totalDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 totalDistance = 3;</code>
       *
       * <pre>
       *即时里程（单位：米）
       * </pre>
       */
      public Builder clearTotalDistance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalDistance_ = 0;
        onChanged();
        return this;
      }

      // required int32 unitPower = 4;
      private int unitPower_ ;
      /**
       * <code>required int32 unitPower = 4;</code>
       *
       * <pre>
       *车台电量（数值为0~5，越大表示电量越高）
       * </pre>
       */
      public boolean hasUnitPower() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 unitPower = 4;</code>
       *
       * <pre>
       *车台电量（数值为0~5，越大表示电量越高）
       * </pre>
       */
      public int getUnitPower() {
        return unitPower_;
      }
      /**
       * <code>required int32 unitPower = 4;</code>
       *
       * <pre>
       *车台电量（数值为0~5，越大表示电量越高）
       * </pre>
       */
      public Builder setUnitPower(int value) {
        bitField0_ |= 0x00000008;
        unitPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unitPower = 4;</code>
       *
       * <pre>
       *车台电量（数值为0~5，越大表示电量越高）
       * </pre>
       */
      public Builder clearUnitPower() {
        bitField0_ = (bitField0_ & ~0x00000008);
        unitPower_ = 0;
        onChanged();
        return this;
      }

      // required int32 bluetoothPower = 5;
      private int bluetoothPower_ ;
      /**
       * <code>required int32 bluetoothPower = 5;</code>
       *
       * <pre>
       *蓝牙感应器电量（数值为0~5，越大表示电量越高）
       * </pre>
       */
      public boolean hasBluetoothPower() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 bluetoothPower = 5;</code>
       *
       * <pre>
       *蓝牙感应器电量（数值为0~5，越大表示电量越高）
       * </pre>
       */
      public int getBluetoothPower() {
        return bluetoothPower_;
      }
      /**
       * <code>required int32 bluetoothPower = 5;</code>
       *
       * <pre>
       *蓝牙感应器电量（数值为0~5，越大表示电量越高）
       * </pre>
       */
      public Builder setBluetoothPower(int value) {
        bitField0_ |= 0x00000010;
        bluetoothPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 bluetoothPower = 5;</code>
       *
       * <pre>
       *蓝牙感应器电量（数值为0~5，越大表示电量越高）
       * </pre>
       */
      public Builder clearBluetoothPower() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bluetoothPower_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.YDWInfo)
    }

    static {
      defaultInstance = new YDWInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.YDWInfo)
  }

  public interface NodeLostInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 abs = 1;
    /**
     * <code>optional int32 abs = 1;</code>
     */
    boolean hasAbs();
    /**
     * <code>optional int32 abs = 1;</code>
     */
    int getAbs();

    // optional int32 esp = 2;
    /**
     * <code>optional int32 esp = 2;</code>
     */
    boolean hasEsp();
    /**
     * <code>optional int32 esp = 2;</code>
     */
    int getEsp();

    // optional int32 ems = 3;
    /**
     * <code>optional int32 ems = 3;</code>
     */
    boolean hasEms();
    /**
     * <code>optional int32 ems = 3;</code>
     */
    int getEms();

    // optional int32 peps = 4;
    /**
     * <code>optional int32 peps = 4;</code>
     */
    boolean hasPeps();
    /**
     * <code>optional int32 peps = 4;</code>
     */
    int getPeps();

    // optional int32 tcu = 5;
    /**
     * <code>optional int32 tcu = 5;</code>
     */
    boolean hasTcu();
    /**
     * <code>optional int32 tcu = 5;</code>
     */
    int getTcu();

    // optional int32 bcm = 6;
    /**
     * <code>optional int32 bcm = 6;</code>
     */
    boolean hasBcm();
    /**
     * <code>optional int32 bcm = 6;</code>
     */
    int getBcm();

    // optional int32 icm = 7;
    /**
     * <code>optional int32 icm = 7;</code>
     */
    boolean hasIcm();
    /**
     * <code>optional int32 icm = 7;</code>
     */
    int getIcm();
  }
  /**
   * Protobuf type {@code gboss.NodeLostInfo}
   *
   * <pre>
   **
   * 节点丢失信息
   * 0:无丢失  1:有丢失
   * </pre>
   */
  public static final class NodeLostInfo extends
      com.google.protobuf.GeneratedMessage
      implements NodeLostInfoOrBuilder {
    // Use NodeLostInfo.newBuilder() to construct.
    private NodeLostInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NodeLostInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NodeLostInfo defaultInstance;
    public static NodeLostInfo getDefaultInstance() {
      return defaultInstance;
    }

    public NodeLostInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NodeLostInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              abs_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              esp_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ems_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              peps_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              tcu_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              bcm_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              icm_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeLostInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeLostInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<NodeLostInfo> PARSER =
        new com.google.protobuf.AbstractParser<NodeLostInfo>() {
      public NodeLostInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeLostInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NodeLostInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 abs = 1;
    public static final int ABS_FIELD_NUMBER = 1;
    private int abs_;
    /**
     * <code>optional int32 abs = 1;</code>
     */
    public boolean hasAbs() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 abs = 1;</code>
     */
    public int getAbs() {
      return abs_;
    }

    // optional int32 esp = 2;
    public static final int ESP_FIELD_NUMBER = 2;
    private int esp_;
    /**
     * <code>optional int32 esp = 2;</code>
     */
    public boolean hasEsp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 esp = 2;</code>
     */
    public int getEsp() {
      return esp_;
    }

    // optional int32 ems = 3;
    public static final int EMS_FIELD_NUMBER = 3;
    private int ems_;
    /**
     * <code>optional int32 ems = 3;</code>
     */
    public boolean hasEms() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 ems = 3;</code>
     */
    public int getEms() {
      return ems_;
    }

    // optional int32 peps = 4;
    public static final int PEPS_FIELD_NUMBER = 4;
    private int peps_;
    /**
     * <code>optional int32 peps = 4;</code>
     */
    public boolean hasPeps() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 peps = 4;</code>
     */
    public int getPeps() {
      return peps_;
    }

    // optional int32 tcu = 5;
    public static final int TCU_FIELD_NUMBER = 5;
    private int tcu_;
    /**
     * <code>optional int32 tcu = 5;</code>
     */
    public boolean hasTcu() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 tcu = 5;</code>
     */
    public int getTcu() {
      return tcu_;
    }

    // optional int32 bcm = 6;
    public static final int BCM_FIELD_NUMBER = 6;
    private int bcm_;
    /**
     * <code>optional int32 bcm = 6;</code>
     */
    public boolean hasBcm() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 bcm = 6;</code>
     */
    public int getBcm() {
      return bcm_;
    }

    // optional int32 icm = 7;
    public static final int ICM_FIELD_NUMBER = 7;
    private int icm_;
    /**
     * <code>optional int32 icm = 7;</code>
     */
    public boolean hasIcm() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 icm = 7;</code>
     */
    public int getIcm() {
      return icm_;
    }

    private void initFields() {
      abs_ = 0;
      esp_ = 0;
      ems_ = 0;
      peps_ = 0;
      tcu_ = 0;
      bcm_ = 0;
      icm_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, abs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, esp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, ems_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, peps_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, tcu_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, bcm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, icm_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, abs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, esp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ems_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, peps_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, tcu_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, bcm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, icm_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.NodeLostInfo}
     *
     * <pre>
     **
     * 节点丢失信息
     * 0:无丢失  1:有丢失
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeLostInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeLostInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        abs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        esp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ems_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        peps_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        tcu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        bcm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        icm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeLostInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.abs_ = abs_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.esp_ = esp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ems_ = ems_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.peps_ = peps_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tcu_ = tcu_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.bcm_ = bcm_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.icm_ = icm_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.getDefaultInstance()) return this;
        if (other.hasAbs()) {
          setAbs(other.getAbs());
        }
        if (other.hasEsp()) {
          setEsp(other.getEsp());
        }
        if (other.hasEms()) {
          setEms(other.getEms());
        }
        if (other.hasPeps()) {
          setPeps(other.getPeps());
        }
        if (other.hasTcu()) {
          setTcu(other.getTcu());
        }
        if (other.hasBcm()) {
          setBcm(other.getBcm());
        }
        if (other.hasIcm()) {
          setIcm(other.getIcm());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 abs = 1;
      private int abs_ ;
      /**
       * <code>optional int32 abs = 1;</code>
       */
      public boolean hasAbs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 abs = 1;</code>
       */
      public int getAbs() {
        return abs_;
      }
      /**
       * <code>optional int32 abs = 1;</code>
       */
      public Builder setAbs(int value) {
        bitField0_ |= 0x00000001;
        abs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 abs = 1;</code>
       */
      public Builder clearAbs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        abs_ = 0;
        onChanged();
        return this;
      }

      // optional int32 esp = 2;
      private int esp_ ;
      /**
       * <code>optional int32 esp = 2;</code>
       */
      public boolean hasEsp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 esp = 2;</code>
       */
      public int getEsp() {
        return esp_;
      }
      /**
       * <code>optional int32 esp = 2;</code>
       */
      public Builder setEsp(int value) {
        bitField0_ |= 0x00000002;
        esp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 esp = 2;</code>
       */
      public Builder clearEsp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        esp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ems = 3;
      private int ems_ ;
      /**
       * <code>optional int32 ems = 3;</code>
       */
      public boolean hasEms() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 ems = 3;</code>
       */
      public int getEms() {
        return ems_;
      }
      /**
       * <code>optional int32 ems = 3;</code>
       */
      public Builder setEms(int value) {
        bitField0_ |= 0x00000004;
        ems_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ems = 3;</code>
       */
      public Builder clearEms() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ems_ = 0;
        onChanged();
        return this;
      }

      // optional int32 peps = 4;
      private int peps_ ;
      /**
       * <code>optional int32 peps = 4;</code>
       */
      public boolean hasPeps() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 peps = 4;</code>
       */
      public int getPeps() {
        return peps_;
      }
      /**
       * <code>optional int32 peps = 4;</code>
       */
      public Builder setPeps(int value) {
        bitField0_ |= 0x00000008;
        peps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 peps = 4;</code>
       */
      public Builder clearPeps() {
        bitField0_ = (bitField0_ & ~0x00000008);
        peps_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tcu = 5;
      private int tcu_ ;
      /**
       * <code>optional int32 tcu = 5;</code>
       */
      public boolean hasTcu() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 tcu = 5;</code>
       */
      public int getTcu() {
        return tcu_;
      }
      /**
       * <code>optional int32 tcu = 5;</code>
       */
      public Builder setTcu(int value) {
        bitField0_ |= 0x00000010;
        tcu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tcu = 5;</code>
       */
      public Builder clearTcu() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tcu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bcm = 6;
      private int bcm_ ;
      /**
       * <code>optional int32 bcm = 6;</code>
       */
      public boolean hasBcm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 bcm = 6;</code>
       */
      public int getBcm() {
        return bcm_;
      }
      /**
       * <code>optional int32 bcm = 6;</code>
       */
      public Builder setBcm(int value) {
        bitField0_ |= 0x00000020;
        bcm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bcm = 6;</code>
       */
      public Builder clearBcm() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bcm_ = 0;
        onChanged();
        return this;
      }

      // optional int32 icm = 7;
      private int icm_ ;
      /**
       * <code>optional int32 icm = 7;</code>
       */
      public boolean hasIcm() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 icm = 7;</code>
       */
      public int getIcm() {
        return icm_;
      }
      /**
       * <code>optional int32 icm = 7;</code>
       */
      public Builder setIcm(int value) {
        bitField0_ |= 0x00000040;
        icm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 icm = 7;</code>
       */
      public Builder clearIcm() {
        bitField0_ = (bitField0_ & ~0x00000040);
        icm_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.NodeLostInfo)
    }

    static {
      defaultInstance = new NodeLostInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.NodeLostInfo)
  }

  public interface NodeFaultInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ebd = 1;
    /**
     * <code>optional int32 ebd = 1;</code>
     */
    boolean hasEbd();
    /**
     * <code>optional int32 ebd = 1;</code>
     */
    int getEbd();

    // optional int32 abs = 2;
    /**
     * <code>optional int32 abs = 2;</code>
     */
    boolean hasAbs();
    /**
     * <code>optional int32 abs = 2;</code>
     */
    int getAbs();

    // optional int32 esp = 3;
    /**
     * <code>optional int32 esp = 3;</code>
     *
     * <pre>
     *esp/tcs
     * </pre>
     */
    boolean hasEsp();
    /**
     * <code>optional int32 esp = 3;</code>
     *
     * <pre>
     *esp/tcs
     * </pre>
     */
    int getEsp();

    // optional int32 svs = 4;
    /**
     * <code>optional int32 svs = 4;</code>
     */
    boolean hasSvs();
    /**
     * <code>optional int32 svs = 4;</code>
     */
    int getSvs();

    // optional int32 mil = 5;
    /**
     * <code>optional int32 mil = 5;</code>
     */
    boolean hasMil();
    /**
     * <code>optional int32 mil = 5;</code>
     */
    int getMil();

    // optional int32 tcu = 6;
    /**
     * <code>optional int32 tcu = 6;</code>
     */
    boolean hasTcu();
    /**
     * <code>optional int32 tcu = 6;</code>
     */
    int getTcu();

    // optional int32 peps = 7;
    /**
     * <code>optional int32 peps = 7;</code>
     */
    boolean hasPeps();
    /**
     * <code>optional int32 peps = 7;</code>
     */
    int getPeps();

    // optional int32 tbox = 8;
    /**
     * <code>optional int32 tbox = 8;</code>
     */
    boolean hasTbox();
    /**
     * <code>optional int32 tbox = 8;</code>
     */
    int getTbox();
  }
  /**
   * Protobuf type {@code gboss.NodeFaultInfo}
   *
   * <pre>
   **
   * 节点故障信息
   * 0:无故障  1:有故障
   * </pre>
   */
  public static final class NodeFaultInfo extends
      com.google.protobuf.GeneratedMessage
      implements NodeFaultInfoOrBuilder {
    // Use NodeFaultInfo.newBuilder() to construct.
    private NodeFaultInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NodeFaultInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NodeFaultInfo defaultInstance;
    public static NodeFaultInfo getDefaultInstance() {
      return defaultInstance;
    }

    public NodeFaultInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NodeFaultInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ebd_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              abs_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              esp_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              svs_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              mil_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              tcu_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              peps_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              tbox_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeFaultInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeFaultInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<NodeFaultInfo> PARSER =
        new com.google.protobuf.AbstractParser<NodeFaultInfo>() {
      public NodeFaultInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeFaultInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NodeFaultInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ebd = 1;
    public static final int EBD_FIELD_NUMBER = 1;
    private int ebd_;
    /**
     * <code>optional int32 ebd = 1;</code>
     */
    public boolean hasEbd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ebd = 1;</code>
     */
    public int getEbd() {
      return ebd_;
    }

    // optional int32 abs = 2;
    public static final int ABS_FIELD_NUMBER = 2;
    private int abs_;
    /**
     * <code>optional int32 abs = 2;</code>
     */
    public boolean hasAbs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 abs = 2;</code>
     */
    public int getAbs() {
      return abs_;
    }

    // optional int32 esp = 3;
    public static final int ESP_FIELD_NUMBER = 3;
    private int esp_;
    /**
     * <code>optional int32 esp = 3;</code>
     *
     * <pre>
     *esp/tcs
     * </pre>
     */
    public boolean hasEsp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 esp = 3;</code>
     *
     * <pre>
     *esp/tcs
     * </pre>
     */
    public int getEsp() {
      return esp_;
    }

    // optional int32 svs = 4;
    public static final int SVS_FIELD_NUMBER = 4;
    private int svs_;
    /**
     * <code>optional int32 svs = 4;</code>
     */
    public boolean hasSvs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 svs = 4;</code>
     */
    public int getSvs() {
      return svs_;
    }

    // optional int32 mil = 5;
    public static final int MIL_FIELD_NUMBER = 5;
    private int mil_;
    /**
     * <code>optional int32 mil = 5;</code>
     */
    public boolean hasMil() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 mil = 5;</code>
     */
    public int getMil() {
      return mil_;
    }

    // optional int32 tcu = 6;
    public static final int TCU_FIELD_NUMBER = 6;
    private int tcu_;
    /**
     * <code>optional int32 tcu = 6;</code>
     */
    public boolean hasTcu() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tcu = 6;</code>
     */
    public int getTcu() {
      return tcu_;
    }

    // optional int32 peps = 7;
    public static final int PEPS_FIELD_NUMBER = 7;
    private int peps_;
    /**
     * <code>optional int32 peps = 7;</code>
     */
    public boolean hasPeps() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 peps = 7;</code>
     */
    public int getPeps() {
      return peps_;
    }

    // optional int32 tbox = 8;
    public static final int TBOX_FIELD_NUMBER = 8;
    private int tbox_;
    /**
     * <code>optional int32 tbox = 8;</code>
     */
    public boolean hasTbox() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 tbox = 8;</code>
     */
    public int getTbox() {
      return tbox_;
    }

    private void initFields() {
      ebd_ = 0;
      abs_ = 0;
      esp_ = 0;
      svs_ = 0;
      mil_ = 0;
      tcu_ = 0;
      peps_ = 0;
      tbox_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ebd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, abs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, esp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, svs_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, mil_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, tcu_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, peps_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, tbox_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ebd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, abs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, esp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, svs_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mil_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, tcu_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, peps_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, tbox_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.NodeFaultInfo}
     *
     * <pre>
     **
     * 节点故障信息
     * 0:无故障  1:有故障
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeFaultInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeFaultInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ebd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        abs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        esp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        svs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        tcu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        peps_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        tbox_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_NodeFaultInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ebd_ = ebd_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.abs_ = abs_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.esp_ = esp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.svs_ = svs_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mil_ = mil_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tcu_ = tcu_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.peps_ = peps_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tbox_ = tbox_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.getDefaultInstance()) return this;
        if (other.hasEbd()) {
          setEbd(other.getEbd());
        }
        if (other.hasAbs()) {
          setAbs(other.getAbs());
        }
        if (other.hasEsp()) {
          setEsp(other.getEsp());
        }
        if (other.hasSvs()) {
          setSvs(other.getSvs());
        }
        if (other.hasMil()) {
          setMil(other.getMil());
        }
        if (other.hasTcu()) {
          setTcu(other.getTcu());
        }
        if (other.hasPeps()) {
          setPeps(other.getPeps());
        }
        if (other.hasTbox()) {
          setTbox(other.getTbox());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ebd = 1;
      private int ebd_ ;
      /**
       * <code>optional int32 ebd = 1;</code>
       */
      public boolean hasEbd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ebd = 1;</code>
       */
      public int getEbd() {
        return ebd_;
      }
      /**
       * <code>optional int32 ebd = 1;</code>
       */
      public Builder setEbd(int value) {
        bitField0_ |= 0x00000001;
        ebd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ebd = 1;</code>
       */
      public Builder clearEbd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ebd_ = 0;
        onChanged();
        return this;
      }

      // optional int32 abs = 2;
      private int abs_ ;
      /**
       * <code>optional int32 abs = 2;</code>
       */
      public boolean hasAbs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 abs = 2;</code>
       */
      public int getAbs() {
        return abs_;
      }
      /**
       * <code>optional int32 abs = 2;</code>
       */
      public Builder setAbs(int value) {
        bitField0_ |= 0x00000002;
        abs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 abs = 2;</code>
       */
      public Builder clearAbs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        abs_ = 0;
        onChanged();
        return this;
      }

      // optional int32 esp = 3;
      private int esp_ ;
      /**
       * <code>optional int32 esp = 3;</code>
       *
       * <pre>
       *esp/tcs
       * </pre>
       */
      public boolean hasEsp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 esp = 3;</code>
       *
       * <pre>
       *esp/tcs
       * </pre>
       */
      public int getEsp() {
        return esp_;
      }
      /**
       * <code>optional int32 esp = 3;</code>
       *
       * <pre>
       *esp/tcs
       * </pre>
       */
      public Builder setEsp(int value) {
        bitField0_ |= 0x00000004;
        esp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 esp = 3;</code>
       *
       * <pre>
       *esp/tcs
       * </pre>
       */
      public Builder clearEsp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        esp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 svs = 4;
      private int svs_ ;
      /**
       * <code>optional int32 svs = 4;</code>
       */
      public boolean hasSvs() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 svs = 4;</code>
       */
      public int getSvs() {
        return svs_;
      }
      /**
       * <code>optional int32 svs = 4;</code>
       */
      public Builder setSvs(int value) {
        bitField0_ |= 0x00000008;
        svs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 svs = 4;</code>
       */
      public Builder clearSvs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        svs_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mil = 5;
      private int mil_ ;
      /**
       * <code>optional int32 mil = 5;</code>
       */
      public boolean hasMil() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 mil = 5;</code>
       */
      public int getMil() {
        return mil_;
      }
      /**
       * <code>optional int32 mil = 5;</code>
       */
      public Builder setMil(int value) {
        bitField0_ |= 0x00000010;
        mil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mil = 5;</code>
       */
      public Builder clearMil() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tcu = 6;
      private int tcu_ ;
      /**
       * <code>optional int32 tcu = 6;</code>
       */
      public boolean hasTcu() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tcu = 6;</code>
       */
      public int getTcu() {
        return tcu_;
      }
      /**
       * <code>optional int32 tcu = 6;</code>
       */
      public Builder setTcu(int value) {
        bitField0_ |= 0x00000020;
        tcu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tcu = 6;</code>
       */
      public Builder clearTcu() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tcu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 peps = 7;
      private int peps_ ;
      /**
       * <code>optional int32 peps = 7;</code>
       */
      public boolean hasPeps() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 peps = 7;</code>
       */
      public int getPeps() {
        return peps_;
      }
      /**
       * <code>optional int32 peps = 7;</code>
       */
      public Builder setPeps(int value) {
        bitField0_ |= 0x00000040;
        peps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 peps = 7;</code>
       */
      public Builder clearPeps() {
        bitField0_ = (bitField0_ & ~0x00000040);
        peps_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tbox = 8;
      private int tbox_ ;
      /**
       * <code>optional int32 tbox = 8;</code>
       */
      public boolean hasTbox() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tbox = 8;</code>
       */
      public int getTbox() {
        return tbox_;
      }
      /**
       * <code>optional int32 tbox = 8;</code>
       */
      public Builder setTbox(int value) {
        bitField0_ |= 0x00000080;
        tbox_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tbox = 8;</code>
       */
      public Builder clearTbox() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tbox_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.NodeFaultInfo)
    }

    static {
      defaultInstance = new NodeFaultInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.NodeFaultInfo)
  }

  public interface FaultLightStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .gboss.NodeLostInfo nodeLostInfo = 1;
    /**
     * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
     *
     * <pre>
     *节点丢失信息
     * </pre>
     */
    boolean hasNodeLostInfo();
    /**
     * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
     *
     * <pre>
     *节点丢失信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo getNodeLostInfo();
    /**
     * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
     *
     * <pre>
     *节点丢失信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfoOrBuilder getNodeLostInfoOrBuilder();

    // optional .gboss.NodeFaultInfo nodeFaultInfo = 2;
    /**
     * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
     *
     * <pre>
     *节点故障信息
     * </pre>
     */
    boolean hasNodeFaultInfo();
    /**
     * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
     *
     * <pre>
     *节点故障信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo getNodeFaultInfo();
    /**
     * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
     *
     * <pre>
     *节点故障信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfoOrBuilder getNodeFaultInfoOrBuilder();
  }
  /**
   * Protobuf type {@code gboss.FaultLightStatus}
   *
   * <pre>
   **
   * 故障灯状态
   * </pre>
   */
  public static final class FaultLightStatus extends
      com.google.protobuf.GeneratedMessage
      implements FaultLightStatusOrBuilder {
    // Use FaultLightStatus.newBuilder() to construct.
    private FaultLightStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FaultLightStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FaultLightStatus defaultInstance;
    public static FaultLightStatus getDefaultInstance() {
      return defaultInstance;
    }

    public FaultLightStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FaultLightStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = nodeLostInfo_.toBuilder();
              }
              nodeLostInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeLostInfo_);
                nodeLostInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = nodeFaultInfo_.toBuilder();
              }
              nodeFaultInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeFaultInfo_);
                nodeFaultInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultLightStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultLightStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.class, cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<FaultLightStatus> PARSER =
        new com.google.protobuf.AbstractParser<FaultLightStatus>() {
      public FaultLightStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FaultLightStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FaultLightStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .gboss.NodeLostInfo nodeLostInfo = 1;
    public static final int NODELOSTINFO_FIELD_NUMBER = 1;
    private cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo nodeLostInfo_;
    /**
     * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
     *
     * <pre>
     *节点丢失信息
     * </pre>
     */
    public boolean hasNodeLostInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
     *
     * <pre>
     *节点丢失信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo getNodeLostInfo() {
      return nodeLostInfo_;
    }
    /**
     * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
     *
     * <pre>
     *节点丢失信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfoOrBuilder getNodeLostInfoOrBuilder() {
      return nodeLostInfo_;
    }

    // optional .gboss.NodeFaultInfo nodeFaultInfo = 2;
    public static final int NODEFAULTINFO_FIELD_NUMBER = 2;
    private cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo nodeFaultInfo_;
    /**
     * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
     *
     * <pre>
     *节点故障信息
     * </pre>
     */
    public boolean hasNodeFaultInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
     *
     * <pre>
     *节点故障信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo getNodeFaultInfo() {
      return nodeFaultInfo_;
    }
    /**
     * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
     *
     * <pre>
     *节点故障信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfoOrBuilder getNodeFaultInfoOrBuilder() {
      return nodeFaultInfo_;
    }

    private void initFields() {
      nodeLostInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.getDefaultInstance();
      nodeFaultInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, nodeLostInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, nodeFaultInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodeLostInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, nodeFaultInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.FaultLightStatus}
     *
     * <pre>
     **
     * 故障灯状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultLightStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultLightStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.class, cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNodeLostInfoFieldBuilder();
          getNodeFaultInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (nodeLostInfoBuilder_ == null) {
          nodeLostInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.getDefaultInstance();
        } else {
          nodeLostInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (nodeFaultInfoBuilder_ == null) {
          nodeFaultInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.getDefaultInstance();
        } else {
          nodeFaultInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultLightStatus_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus build() {
        cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus result = new cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (nodeLostInfoBuilder_ == null) {
          result.nodeLostInfo_ = nodeLostInfo_;
        } else {
          result.nodeLostInfo_ = nodeLostInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (nodeFaultInfoBuilder_ == null) {
          result.nodeFaultInfo_ = nodeFaultInfo_;
        } else {
          result.nodeFaultInfo_ = nodeFaultInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.getDefaultInstance()) return this;
        if (other.hasNodeLostInfo()) {
          mergeNodeLostInfo(other.getNodeLostInfo());
        }
        if (other.hasNodeFaultInfo()) {
          mergeNodeFaultInfo(other.getNodeFaultInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .gboss.NodeLostInfo nodeLostInfo = 1;
      private cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo nodeLostInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo, cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfoOrBuilder> nodeLostInfoBuilder_;
      /**
       * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
       *
       * <pre>
       *节点丢失信息
       * </pre>
       */
      public boolean hasNodeLostInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
       *
       * <pre>
       *节点丢失信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo getNodeLostInfo() {
        if (nodeLostInfoBuilder_ == null) {
          return nodeLostInfo_;
        } else {
          return nodeLostInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
       *
       * <pre>
       *节点丢失信息
       * </pre>
       */
      public Builder setNodeLostInfo(cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo value) {
        if (nodeLostInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeLostInfo_ = value;
          onChanged();
        } else {
          nodeLostInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
       *
       * <pre>
       *节点丢失信息
       * </pre>
       */
      public Builder setNodeLostInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.Builder builderForValue) {
        if (nodeLostInfoBuilder_ == null) {
          nodeLostInfo_ = builderForValue.build();
          onChanged();
        } else {
          nodeLostInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
       *
       * <pre>
       *节点丢失信息
       * </pre>
       */
      public Builder mergeNodeLostInfo(cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo value) {
        if (nodeLostInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              nodeLostInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.getDefaultInstance()) {
            nodeLostInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.newBuilder(nodeLostInfo_).mergeFrom(value).buildPartial();
          } else {
            nodeLostInfo_ = value;
          }
          onChanged();
        } else {
          nodeLostInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
       *
       * <pre>
       *节点丢失信息
       * </pre>
       */
      public Builder clearNodeLostInfo() {
        if (nodeLostInfoBuilder_ == null) {
          nodeLostInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.getDefaultInstance();
          onChanged();
        } else {
          nodeLostInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
       *
       * <pre>
       *节点丢失信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.Builder getNodeLostInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getNodeLostInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
       *
       * <pre>
       *节点丢失信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfoOrBuilder getNodeLostInfoOrBuilder() {
        if (nodeLostInfoBuilder_ != null) {
          return nodeLostInfoBuilder_.getMessageOrBuilder();
        } else {
          return nodeLostInfo_;
        }
      }
      /**
       * <code>optional .gboss.NodeLostInfo nodeLostInfo = 1;</code>
       *
       * <pre>
       *节点丢失信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo, cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfoOrBuilder> 
          getNodeLostInfoFieldBuilder() {
        if (nodeLostInfoBuilder_ == null) {
          nodeLostInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo, cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.NodeLostInfoOrBuilder>(
                  nodeLostInfo_,
                  getParentForChildren(),
                  isClean());
          nodeLostInfo_ = null;
        }
        return nodeLostInfoBuilder_;
      }

      // optional .gboss.NodeFaultInfo nodeFaultInfo = 2;
      private cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo nodeFaultInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo, cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfoOrBuilder> nodeFaultInfoBuilder_;
      /**
       * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
       *
       * <pre>
       *节点故障信息
       * </pre>
       */
      public boolean hasNodeFaultInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
       *
       * <pre>
       *节点故障信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo getNodeFaultInfo() {
        if (nodeFaultInfoBuilder_ == null) {
          return nodeFaultInfo_;
        } else {
          return nodeFaultInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
       *
       * <pre>
       *节点故障信息
       * </pre>
       */
      public Builder setNodeFaultInfo(cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo value) {
        if (nodeFaultInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeFaultInfo_ = value;
          onChanged();
        } else {
          nodeFaultInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
       *
       * <pre>
       *节点故障信息
       * </pre>
       */
      public Builder setNodeFaultInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.Builder builderForValue) {
        if (nodeFaultInfoBuilder_ == null) {
          nodeFaultInfo_ = builderForValue.build();
          onChanged();
        } else {
          nodeFaultInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
       *
       * <pre>
       *节点故障信息
       * </pre>
       */
      public Builder mergeNodeFaultInfo(cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo value) {
        if (nodeFaultInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              nodeFaultInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.getDefaultInstance()) {
            nodeFaultInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.newBuilder(nodeFaultInfo_).mergeFrom(value).buildPartial();
          } else {
            nodeFaultInfo_ = value;
          }
          onChanged();
        } else {
          nodeFaultInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
       *
       * <pre>
       *节点故障信息
       * </pre>
       */
      public Builder clearNodeFaultInfo() {
        if (nodeFaultInfoBuilder_ == null) {
          nodeFaultInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.getDefaultInstance();
          onChanged();
        } else {
          nodeFaultInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
       *
       * <pre>
       *节点故障信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.Builder getNodeFaultInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getNodeFaultInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
       *
       * <pre>
       *节点故障信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfoOrBuilder getNodeFaultInfoOrBuilder() {
        if (nodeFaultInfoBuilder_ != null) {
          return nodeFaultInfoBuilder_.getMessageOrBuilder();
        } else {
          return nodeFaultInfo_;
        }
      }
      /**
       * <code>optional .gboss.NodeFaultInfo nodeFaultInfo = 2;</code>
       *
       * <pre>
       *节点故障信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo, cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfoOrBuilder> 
          getNodeFaultInfoFieldBuilder() {
        if (nodeFaultInfoBuilder_ == null) {
          nodeFaultInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo, cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.NodeFaultInfoOrBuilder>(
                  nodeFaultInfo_,
                  getParentForChildren(),
                  isClean());
          nodeFaultInfo_ = null;
        }
        return nodeFaultInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.FaultLightStatus)
    }

    static {
      defaultInstance = new FaultLightStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.FaultLightStatus)
  }

  public interface PengaodaGpsInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 travelSerialNo = 1;
    /**
     * <code>optional int32 travelSerialNo = 1;</code>
     *
     * <pre>
     *行程流水号（驾驶循环行程id）
     * </pre>
     */
    boolean hasTravelSerialNo();
    /**
     * <code>optional int32 travelSerialNo = 1;</code>
     *
     * <pre>
     *行程流水号（驾驶循环行程id）
     * </pre>
     */
    int getTravelSerialNo();

    // optional int32 deviceUUID = 2;
    /**
     * <code>optional int32 deviceUUID = 2;</code>
     *
     * <pre>
     *设备拔插次数
     * </pre>
     */
    boolean hasDeviceUUID();
    /**
     * <code>optional int32 deviceUUID = 2;</code>
     *
     * <pre>
     *设备拔插次数
     * </pre>
     */
    int getDeviceUUID();

    // optional string softHardwareVersion = 3;
    /**
     * <code>optional string softHardwareVersion = 3;</code>
     *
     * <pre>
     *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
     * </pre>
     */
    boolean hasSoftHardwareVersion();
    /**
     * <code>optional string softHardwareVersion = 3;</code>
     *
     * <pre>
     *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
     * </pre>
     */
    java.lang.String getSoftHardwareVersion();
    /**
     * <code>optional string softHardwareVersion = 3;</code>
     *
     * <pre>
     *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
     * </pre>
     */
    com.google.protobuf.ByteString
        getSoftHardwareVersionBytes();

    // optional string gsmId = 4;
    /**
     * <code>optional string gsmId = 4;</code>
     *
     * <pre>
     *设备通讯模组IMEI号码
     * </pre>
     */
    boolean hasGsmId();
    /**
     * <code>optional string gsmId = 4;</code>
     *
     * <pre>
     *设备通讯模组IMEI号码
     * </pre>
     */
    java.lang.String getGsmId();
    /**
     * <code>optional string gsmId = 4;</code>
     *
     * <pre>
     *设备通讯模组IMEI号码
     * </pre>
     */
    com.google.protobuf.ByteString
        getGsmIdBytes();

    // optional string imsi = 5;
    /**
     * <code>optional string imsi = 5;</code>
     *
     * <pre>
     *终端sim卡imsi号
     * </pre>
     */
    boolean hasImsi();
    /**
     * <code>optional string imsi = 5;</code>
     *
     * <pre>
     *终端sim卡imsi号
     * </pre>
     */
    java.lang.String getImsi();
    /**
     * <code>optional string imsi = 5;</code>
     *
     * <pre>
     *终端sim卡imsi号
     * </pre>
     */
    com.google.protobuf.ByteString
        getImsiBytes();

    // optional string iccid = 6;
    /**
     * <code>optional string iccid = 6;</code>
     *
     * <pre>
     *终端sim卡iccid号
     * </pre>
     */
    boolean hasIccid();
    /**
     * <code>optional string iccid = 6;</code>
     *
     * <pre>
     *终端sim卡iccid号
     * </pre>
     */
    java.lang.String getIccid();
    /**
     * <code>optional string iccid = 6;</code>
     *
     * <pre>
     *终端sim卡iccid号
     * </pre>
     */
    com.google.protobuf.ByteString
        getIccidBytes();

    // optional string vin = 7;
    /**
     * <code>optional string vin = 7;</code>
     *
     * <pre>
     *车辆vin码
     * </pre>
     */
    boolean hasVin();
    /**
     * <code>optional string vin = 7;</code>
     *
     * <pre>
     *车辆vin码
     * </pre>
     */
    java.lang.String getVin();
    /**
     * <code>optional string vin = 7;</code>
     *
     * <pre>
     *车辆vin码
     * </pre>
     */
    com.google.protobuf.ByteString
        getVinBytes();

    // optional int32 vehicleDistance = 8;
    /**
     * <code>optional int32 vehicleDistance = 8;</code>
     *
     * <pre>
     *车辆码表里程（单位：米）
     * </pre>
     */
    boolean hasVehicleDistance();
    /**
     * <code>optional int32 vehicleDistance = 8;</code>
     *
     * <pre>
     *车辆码表里程（单位：米）
     * </pre>
     */
    int getVehicleDistance();
  }
  /**
   * Protobuf type {@code gboss.PengaodaGpsInfo}
   *
   * <pre>
   **
   * 新鹏奥达gps附加信息
   * </pre>
   */
  public static final class PengaodaGpsInfo extends
      com.google.protobuf.GeneratedMessage
      implements PengaodaGpsInfoOrBuilder {
    // Use PengaodaGpsInfo.newBuilder() to construct.
    private PengaodaGpsInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PengaodaGpsInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PengaodaGpsInfo defaultInstance;
    public static PengaodaGpsInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PengaodaGpsInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PengaodaGpsInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              travelSerialNo_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              deviceUUID_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              softHardwareVersion_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              gsmId_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              imsi_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              iccid_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              vin_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              vehicleDistance_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaGpsInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaGpsInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<PengaodaGpsInfo> PARSER =
        new com.google.protobuf.AbstractParser<PengaodaGpsInfo>() {
      public PengaodaGpsInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PengaodaGpsInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PengaodaGpsInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 travelSerialNo = 1;
    public static final int TRAVELSERIALNO_FIELD_NUMBER = 1;
    private int travelSerialNo_;
    /**
     * <code>optional int32 travelSerialNo = 1;</code>
     *
     * <pre>
     *行程流水号（驾驶循环行程id）
     * </pre>
     */
    public boolean hasTravelSerialNo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 travelSerialNo = 1;</code>
     *
     * <pre>
     *行程流水号（驾驶循环行程id）
     * </pre>
     */
    public int getTravelSerialNo() {
      return travelSerialNo_;
    }

    // optional int32 deviceUUID = 2;
    public static final int DEVICEUUID_FIELD_NUMBER = 2;
    private int deviceUUID_;
    /**
     * <code>optional int32 deviceUUID = 2;</code>
     *
     * <pre>
     *设备拔插次数
     * </pre>
     */
    public boolean hasDeviceUUID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 deviceUUID = 2;</code>
     *
     * <pre>
     *设备拔插次数
     * </pre>
     */
    public int getDeviceUUID() {
      return deviceUUID_;
    }

    // optional string softHardwareVersion = 3;
    public static final int SOFTHARDWAREVERSION_FIELD_NUMBER = 3;
    private java.lang.Object softHardwareVersion_;
    /**
     * <code>optional string softHardwareVersion = 3;</code>
     *
     * <pre>
     *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
     * </pre>
     */
    public boolean hasSoftHardwareVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string softHardwareVersion = 3;</code>
     *
     * <pre>
     *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
     * </pre>
     */
    public java.lang.String getSoftHardwareVersion() {
      java.lang.Object ref = softHardwareVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          softHardwareVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string softHardwareVersion = 3;</code>
     *
     * <pre>
     *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSoftHardwareVersionBytes() {
      java.lang.Object ref = softHardwareVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        softHardwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gsmId = 4;
    public static final int GSMID_FIELD_NUMBER = 4;
    private java.lang.Object gsmId_;
    /**
     * <code>optional string gsmId = 4;</code>
     *
     * <pre>
     *设备通讯模组IMEI号码
     * </pre>
     */
    public boolean hasGsmId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string gsmId = 4;</code>
     *
     * <pre>
     *设备通讯模组IMEI号码
     * </pre>
     */
    public java.lang.String getGsmId() {
      java.lang.Object ref = gsmId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gsmId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gsmId = 4;</code>
     *
     * <pre>
     *设备通讯模组IMEI号码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGsmIdBytes() {
      java.lang.Object ref = gsmId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gsmId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string imsi = 5;
    public static final int IMSI_FIELD_NUMBER = 5;
    private java.lang.Object imsi_;
    /**
     * <code>optional string imsi = 5;</code>
     *
     * <pre>
     *终端sim卡imsi号
     * </pre>
     */
    public boolean hasImsi() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string imsi = 5;</code>
     *
     * <pre>
     *终端sim卡imsi号
     * </pre>
     */
    public java.lang.String getImsi() {
      java.lang.Object ref = imsi_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          imsi_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string imsi = 5;</code>
     *
     * <pre>
     *终端sim卡imsi号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getImsiBytes() {
      java.lang.Object ref = imsi_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        imsi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string iccid = 6;
    public static final int ICCID_FIELD_NUMBER = 6;
    private java.lang.Object iccid_;
    /**
     * <code>optional string iccid = 6;</code>
     *
     * <pre>
     *终端sim卡iccid号
     * </pre>
     */
    public boolean hasIccid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string iccid = 6;</code>
     *
     * <pre>
     *终端sim卡iccid号
     * </pre>
     */
    public java.lang.String getIccid() {
      java.lang.Object ref = iccid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iccid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string iccid = 6;</code>
     *
     * <pre>
     *终端sim卡iccid号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIccidBytes() {
      java.lang.Object ref = iccid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iccid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string vin = 7;
    public static final int VIN_FIELD_NUMBER = 7;
    private java.lang.Object vin_;
    /**
     * <code>optional string vin = 7;</code>
     *
     * <pre>
     *车辆vin码
     * </pre>
     */
    public boolean hasVin() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string vin = 7;</code>
     *
     * <pre>
     *车辆vin码
     * </pre>
     */
    public java.lang.String getVin() {
      java.lang.Object ref = vin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vin_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string vin = 7;</code>
     *
     * <pre>
     *车辆vin码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVinBytes() {
      java.lang.Object ref = vin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 vehicleDistance = 8;
    public static final int VEHICLEDISTANCE_FIELD_NUMBER = 8;
    private int vehicleDistance_;
    /**
     * <code>optional int32 vehicleDistance = 8;</code>
     *
     * <pre>
     *车辆码表里程（单位：米）
     * </pre>
     */
    public boolean hasVehicleDistance() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 vehicleDistance = 8;</code>
     *
     * <pre>
     *车辆码表里程（单位：米）
     * </pre>
     */
    public int getVehicleDistance() {
      return vehicleDistance_;
    }

    private void initFields() {
      travelSerialNo_ = 0;
      deviceUUID_ = 0;
      softHardwareVersion_ = "";
      gsmId_ = "";
      imsi_ = "";
      iccid_ = "";
      vin_ = "";
      vehicleDistance_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, travelSerialNo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, deviceUUID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSoftHardwareVersionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getGsmIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getImsiBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getIccidBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getVinBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, vehicleDistance_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, travelSerialNo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, deviceUUID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSoftHardwareVersionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getGsmIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getImsiBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getIccidBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getVinBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, vehicleDistance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.PengaodaGpsInfo}
     *
     * <pre>
     **
     * 新鹏奥达gps附加信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaGpsInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaGpsInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        travelSerialNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceUUID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        softHardwareVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        gsmId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        imsi_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        iccid_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        vin_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        vehicleDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaGpsInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.travelSerialNo_ = travelSerialNo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deviceUUID_ = deviceUUID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.softHardwareVersion_ = softHardwareVersion_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gsmId_ = gsmId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.imsi_ = imsi_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.iccid_ = iccid_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.vin_ = vin_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.vehicleDistance_ = vehicleDistance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.getDefaultInstance()) return this;
        if (other.hasTravelSerialNo()) {
          setTravelSerialNo(other.getTravelSerialNo());
        }
        if (other.hasDeviceUUID()) {
          setDeviceUUID(other.getDeviceUUID());
        }
        if (other.hasSoftHardwareVersion()) {
          bitField0_ |= 0x00000004;
          softHardwareVersion_ = other.softHardwareVersion_;
          onChanged();
        }
        if (other.hasGsmId()) {
          bitField0_ |= 0x00000008;
          gsmId_ = other.gsmId_;
          onChanged();
        }
        if (other.hasImsi()) {
          bitField0_ |= 0x00000010;
          imsi_ = other.imsi_;
          onChanged();
        }
        if (other.hasIccid()) {
          bitField0_ |= 0x00000020;
          iccid_ = other.iccid_;
          onChanged();
        }
        if (other.hasVin()) {
          bitField0_ |= 0x00000040;
          vin_ = other.vin_;
          onChanged();
        }
        if (other.hasVehicleDistance()) {
          setVehicleDistance(other.getVehicleDistance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 travelSerialNo = 1;
      private int travelSerialNo_ ;
      /**
       * <code>optional int32 travelSerialNo = 1;</code>
       *
       * <pre>
       *行程流水号（驾驶循环行程id）
       * </pre>
       */
      public boolean hasTravelSerialNo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 travelSerialNo = 1;</code>
       *
       * <pre>
       *行程流水号（驾驶循环行程id）
       * </pre>
       */
      public int getTravelSerialNo() {
        return travelSerialNo_;
      }
      /**
       * <code>optional int32 travelSerialNo = 1;</code>
       *
       * <pre>
       *行程流水号（驾驶循环行程id）
       * </pre>
       */
      public Builder setTravelSerialNo(int value) {
        bitField0_ |= 0x00000001;
        travelSerialNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 travelSerialNo = 1;</code>
       *
       * <pre>
       *行程流水号（驾驶循环行程id）
       * </pre>
       */
      public Builder clearTravelSerialNo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        travelSerialNo_ = 0;
        onChanged();
        return this;
      }

      // optional int32 deviceUUID = 2;
      private int deviceUUID_ ;
      /**
       * <code>optional int32 deviceUUID = 2;</code>
       *
       * <pre>
       *设备拔插次数
       * </pre>
       */
      public boolean hasDeviceUUID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 deviceUUID = 2;</code>
       *
       * <pre>
       *设备拔插次数
       * </pre>
       */
      public int getDeviceUUID() {
        return deviceUUID_;
      }
      /**
       * <code>optional int32 deviceUUID = 2;</code>
       *
       * <pre>
       *设备拔插次数
       * </pre>
       */
      public Builder setDeviceUUID(int value) {
        bitField0_ |= 0x00000002;
        deviceUUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deviceUUID = 2;</code>
       *
       * <pre>
       *设备拔插次数
       * </pre>
       */
      public Builder clearDeviceUUID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceUUID_ = 0;
        onChanged();
        return this;
      }

      // optional string softHardwareVersion = 3;
      private java.lang.Object softHardwareVersion_ = "";
      /**
       * <code>optional string softHardwareVersion = 3;</code>
       *
       * <pre>
       *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
       * </pre>
       */
      public boolean hasSoftHardwareVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string softHardwareVersion = 3;</code>
       *
       * <pre>
       *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
       * </pre>
       */
      public java.lang.String getSoftHardwareVersion() {
        java.lang.Object ref = softHardwareVersion_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          softHardwareVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string softHardwareVersion = 3;</code>
       *
       * <pre>
       *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSoftHardwareVersionBytes() {
        java.lang.Object ref = softHardwareVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          softHardwareVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string softHardwareVersion = 3;</code>
       *
       * <pre>
       *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
       * </pre>
       */
      public Builder setSoftHardwareVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        softHardwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string softHardwareVersion = 3;</code>
       *
       * <pre>
       *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
       * </pre>
       */
      public Builder clearSoftHardwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        softHardwareVersion_ = getDefaultInstance().getSoftHardwareVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string softHardwareVersion = 3;</code>
       *
       * <pre>
       *软硬件版本号，版本号：CXB900H100S10020150929，CXB--产品名称;900 --产品型号代码;H100--硬件版本;S100--软件版本;20150929--编译日期
       * </pre>
       */
      public Builder setSoftHardwareVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        softHardwareVersion_ = value;
        onChanged();
        return this;
      }

      // optional string gsmId = 4;
      private java.lang.Object gsmId_ = "";
      /**
       * <code>optional string gsmId = 4;</code>
       *
       * <pre>
       *设备通讯模组IMEI号码
       * </pre>
       */
      public boolean hasGsmId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string gsmId = 4;</code>
       *
       * <pre>
       *设备通讯模组IMEI号码
       * </pre>
       */
      public java.lang.String getGsmId() {
        java.lang.Object ref = gsmId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gsmId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gsmId = 4;</code>
       *
       * <pre>
       *设备通讯模组IMEI号码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGsmIdBytes() {
        java.lang.Object ref = gsmId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gsmId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gsmId = 4;</code>
       *
       * <pre>
       *设备通讯模组IMEI号码
       * </pre>
       */
      public Builder setGsmId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        gsmId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gsmId = 4;</code>
       *
       * <pre>
       *设备通讯模组IMEI号码
       * </pre>
       */
      public Builder clearGsmId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gsmId_ = getDefaultInstance().getGsmId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gsmId = 4;</code>
       *
       * <pre>
       *设备通讯模组IMEI号码
       * </pre>
       */
      public Builder setGsmIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        gsmId_ = value;
        onChanged();
        return this;
      }

      // optional string imsi = 5;
      private java.lang.Object imsi_ = "";
      /**
       * <code>optional string imsi = 5;</code>
       *
       * <pre>
       *终端sim卡imsi号
       * </pre>
       */
      public boolean hasImsi() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string imsi = 5;</code>
       *
       * <pre>
       *终端sim卡imsi号
       * </pre>
       */
      public java.lang.String getImsi() {
        java.lang.Object ref = imsi_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          imsi_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string imsi = 5;</code>
       *
       * <pre>
       *终端sim卡imsi号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getImsiBytes() {
        java.lang.Object ref = imsi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          imsi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string imsi = 5;</code>
       *
       * <pre>
       *终端sim卡imsi号
       * </pre>
       */
      public Builder setImsi(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        imsi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string imsi = 5;</code>
       *
       * <pre>
       *终端sim卡imsi号
       * </pre>
       */
      public Builder clearImsi() {
        bitField0_ = (bitField0_ & ~0x00000010);
        imsi_ = getDefaultInstance().getImsi();
        onChanged();
        return this;
      }
      /**
       * <code>optional string imsi = 5;</code>
       *
       * <pre>
       *终端sim卡imsi号
       * </pre>
       */
      public Builder setImsiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        imsi_ = value;
        onChanged();
        return this;
      }

      // optional string iccid = 6;
      private java.lang.Object iccid_ = "";
      /**
       * <code>optional string iccid = 6;</code>
       *
       * <pre>
       *终端sim卡iccid号
       * </pre>
       */
      public boolean hasIccid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string iccid = 6;</code>
       *
       * <pre>
       *终端sim卡iccid号
       * </pre>
       */
      public java.lang.String getIccid() {
        java.lang.Object ref = iccid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iccid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string iccid = 6;</code>
       *
       * <pre>
       *终端sim卡iccid号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIccidBytes() {
        java.lang.Object ref = iccid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iccid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string iccid = 6;</code>
       *
       * <pre>
       *终端sim卡iccid号
       * </pre>
       */
      public Builder setIccid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        iccid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string iccid = 6;</code>
       *
       * <pre>
       *终端sim卡iccid号
       * </pre>
       */
      public Builder clearIccid() {
        bitField0_ = (bitField0_ & ~0x00000020);
        iccid_ = getDefaultInstance().getIccid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string iccid = 6;</code>
       *
       * <pre>
       *终端sim卡iccid号
       * </pre>
       */
      public Builder setIccidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        iccid_ = value;
        onChanged();
        return this;
      }

      // optional string vin = 7;
      private java.lang.Object vin_ = "";
      /**
       * <code>optional string vin = 7;</code>
       *
       * <pre>
       *车辆vin码
       * </pre>
       */
      public boolean hasVin() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string vin = 7;</code>
       *
       * <pre>
       *车辆vin码
       * </pre>
       */
      public java.lang.String getVin() {
        java.lang.Object ref = vin_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          vin_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string vin = 7;</code>
       *
       * <pre>
       *车辆vin码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVinBytes() {
        java.lang.Object ref = vin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string vin = 7;</code>
       *
       * <pre>
       *车辆vin码
       * </pre>
       */
      public Builder setVin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        vin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string vin = 7;</code>
       *
       * <pre>
       *车辆vin码
       * </pre>
       */
      public Builder clearVin() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vin_ = getDefaultInstance().getVin();
        onChanged();
        return this;
      }
      /**
       * <code>optional string vin = 7;</code>
       *
       * <pre>
       *车辆vin码
       * </pre>
       */
      public Builder setVinBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        vin_ = value;
        onChanged();
        return this;
      }

      // optional int32 vehicleDistance = 8;
      private int vehicleDistance_ ;
      /**
       * <code>optional int32 vehicleDistance = 8;</code>
       *
       * <pre>
       *车辆码表里程（单位：米）
       * </pre>
       */
      public boolean hasVehicleDistance() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 vehicleDistance = 8;</code>
       *
       * <pre>
       *车辆码表里程（单位：米）
       * </pre>
       */
      public int getVehicleDistance() {
        return vehicleDistance_;
      }
      /**
       * <code>optional int32 vehicleDistance = 8;</code>
       *
       * <pre>
       *车辆码表里程（单位：米）
       * </pre>
       */
      public Builder setVehicleDistance(int value) {
        bitField0_ |= 0x00000080;
        vehicleDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vehicleDistance = 8;</code>
       *
       * <pre>
       *车辆码表里程（单位：米）
       * </pre>
       */
      public Builder clearVehicleDistance() {
        bitField0_ = (bitField0_ & ~0x00000080);
        vehicleDistance_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.PengaodaGpsInfo)
    }

    static {
      defaultInstance = new PengaodaGpsInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.PengaodaGpsInfo)
  }

  public interface BeiJingInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 devid = 1;
    /**
     * <code>optional int32 devid = 1;</code>
     *
     * <pre>
     *设备id
     * </pre>
     */
    boolean hasDevid();
    /**
     * <code>optional int32 devid = 1;</code>
     *
     * <pre>
     *设备id
     * </pre>
     */
    int getDevid();

    // optional int32 rfid = 2;
    /**
     * <code>optional int32 rfid = 2;</code>
     *
     * <pre>
     *会员卡卡号
     * </pre>
     */
    boolean hasRfid();
    /**
     * <code>optional int32 rfid = 2;</code>
     *
     * <pre>
     *会员卡卡号
     * </pre>
     */
    int getRfid();

    // optional int32 voltage = 3;
    /**
     * <code>optional int32 voltage = 3;</code>
     *
     * <pre>
     *电池电压值（单位：0.1V）
     * </pre>
     */
    boolean hasVoltage();
    /**
     * <code>optional int32 voltage = 3;</code>
     *
     * <pre>
     *电池电压值（单位：0.1V）
     * </pre>
     */
    int getVoltage();

    // optional int32 electricity = 4;
    /**
     * <code>optional int32 electricity = 4;</code>
     *
     * <pre>
     *电量百分比(百分之一)
     * </pre>
     */
    boolean hasElectricity();
    /**
     * <code>optional int32 electricity = 4;</code>
     *
     * <pre>
     *电量百分比(百分之一)
     * </pre>
     */
    int getElectricity();

    // optional int32 gsmvalue = 5;
    /**
     * <code>optional int32 gsmvalue = 5;</code>
     *
     * <pre>
     *GSM信号强度
     * </pre>
     */
    boolean hasGsmvalue();
    /**
     * <code>optional int32 gsmvalue = 5;</code>
     *
     * <pre>
     *GSM信号强度
     * </pre>
     */
    int getGsmvalue();

    // optional int32 satellitecount = 6;
    /**
     * <code>optional int32 satellitecount = 6;</code>
     *
     * <pre>
     *卫星数
     * </pre>
     */
    boolean hasSatellitecount();
    /**
     * <code>optional int32 satellitecount = 6;</code>
     *
     * <pre>
     *卫星数
     * </pre>
     */
    int getSatellitecount();

    // optional int32 mileage = 7;
    /**
     * <code>optional int32 mileage = 7;</code>
     *
     * <pre>
     *续航里程（km）
     * </pre>
     */
    boolean hasMileage();
    /**
     * <code>optional int32 mileage = 7;</code>
     *
     * <pre>
     *续航里程（km）
     * </pre>
     */
    int getMileage();

    // optional string chargeStatus = 8;
    /**
     * <code>optional string chargeStatus = 8;</code>
     *
     * <pre>
     *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
     * </pre>
     */
    boolean hasChargeStatus();
    /**
     * <code>optional string chargeStatus = 8;</code>
     *
     * <pre>
     *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
     * </pre>
     */
    java.lang.String getChargeStatus();
    /**
     * <code>optional string chargeStatus = 8;</code>
     *
     * <pre>
     *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
     * </pre>
     */
    com.google.protobuf.ByteString
        getChargeStatusBytes();

    // optional string fillGunStatus = 9;
    /**
     * <code>optional string fillGunStatus = 9;</code>
     *
     * <pre>
     *充枪连接状态 0 半连接 1未连接 2 已连接
     * </pre>
     */
    boolean hasFillGunStatus();
    /**
     * <code>optional string fillGunStatus = 9;</code>
     *
     * <pre>
     *充枪连接状态 0 半连接 1未连接 2 已连接
     * </pre>
     */
    java.lang.String getFillGunStatus();
    /**
     * <code>optional string fillGunStatus = 9;</code>
     *
     * <pre>
     *充枪连接状态 0 半连接 1未连接 2 已连接
     * </pre>
     */
    com.google.protobuf.ByteString
        getFillGunStatusBytes();

    // optional string accStatus = 10;
    /**
     * <code>optional string accStatus = 10;</code>
     *
     * <pre>
     *ACC状态   0 ACC关 1 ACC开
     * </pre>
     */
    boolean hasAccStatus();
    /**
     * <code>optional string accStatus = 10;</code>
     *
     * <pre>
     *ACC状态   0 ACC关 1 ACC开
     * </pre>
     */
    java.lang.String getAccStatus();
    /**
     * <code>optional string accStatus = 10;</code>
     *
     * <pre>
     *ACC状态   0 ACC关 1 ACC开
     * </pre>
     */
    com.google.protobuf.ByteString
        getAccStatusBytes();

    // optional string oilStatus = 11;
    /**
     * <code>optional string oilStatus = 11;</code>
     *
     * <pre>
     *油路状态  0 闭合  1 断开
     * </pre>
     */
    boolean hasOilStatus();
    /**
     * <code>optional string oilStatus = 11;</code>
     *
     * <pre>
     *油路状态  0 闭合  1 断开
     * </pre>
     */
    java.lang.String getOilStatus();
    /**
     * <code>optional string oilStatus = 11;</code>
     *
     * <pre>
     *油路状态  0 闭合  1 断开
     * </pre>
     */
    com.google.protobuf.ByteString
        getOilStatusBytes();

    // optional string defendStatus = 12;
    /**
     * <code>optional string defendStatus = 12;</code>
     *
     * <pre>
     *防盗状态  0 撤防  1设防
     * </pre>
     */
    boolean hasDefendStatus();
    /**
     * <code>optional string defendStatus = 12;</code>
     *
     * <pre>
     *防盗状态  0 撤防  1设防
     * </pre>
     */
    java.lang.String getDefendStatus();
    /**
     * <code>optional string defendStatus = 12;</code>
     *
     * <pre>
     *防盗状态  0 撤防  1设防
     * </pre>
     */
    com.google.protobuf.ByteString
        getDefendStatusBytes();

    // optional string centralLockStatus = 13;
    /**
     * <code>optional string centralLockStatus = 13;</code>
     *
     * <pre>
     *中控锁状态  0未锁 1锁上
     * </pre>
     */
    boolean hasCentralLockStatus();
    /**
     * <code>optional string centralLockStatus = 13;</code>
     *
     * <pre>
     *中控锁状态  0未锁 1锁上
     * </pre>
     */
    java.lang.String getCentralLockStatus();
    /**
     * <code>optional string centralLockStatus = 13;</code>
     *
     * <pre>
     *中控锁状态  0未锁 1锁上
     * </pre>
     */
    com.google.protobuf.ByteString
        getCentralLockStatusBytes();

    // optional string doorStatus = 14;
    /**
     * <code>optional string doorStatus = 14;</code>
     *
     * <pre>
     *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
     * </pre>
     */
    boolean hasDoorStatus();
    /**
     * <code>optional string doorStatus = 14;</code>
     *
     * <pre>
     *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
     * </pre>
     */
    java.lang.String getDoorStatus();
    /**
     * <code>optional string doorStatus = 14;</code>
     *
     * <pre>
     *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
     * </pre>
     */
    com.google.protobuf.ByteString
        getDoorStatusBytes();

    // optional string lightStatus = 15;
    /**
     * <code>optional string lightStatus = 15;</code>
     *
     * <pre>
     *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
     * </pre>
     */
    boolean hasLightStatus();
    /**
     * <code>optional string lightStatus = 15;</code>
     *
     * <pre>
     *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
     * </pre>
     */
    java.lang.String getLightStatus();
    /**
     * <code>optional string lightStatus = 15;</code>
     *
     * <pre>
     *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
     * </pre>
     */
    com.google.protobuf.ByteString
        getLightStatusBytes();

    // optional string windowStatus = 16;
    /**
     * <code>optional string windowStatus = 16;</code>
     *
     * <pre>
     *车窗状态 0 全关好1 未关好
     * </pre>
     */
    boolean hasWindowStatus();
    /**
     * <code>optional string windowStatus = 16;</code>
     *
     * <pre>
     *车窗状态 0 全关好1 未关好
     * </pre>
     */
    java.lang.String getWindowStatus();
    /**
     * <code>optional string windowStatus = 16;</code>
     *
     * <pre>
     *车窗状态 0 全关好1 未关好
     * </pre>
     */
    com.google.protobuf.ByteString
        getWindowStatusBytes();

    // optional int32 smallVoltage = 17;
    /**
     * <code>optional int32 smallVoltage = 17;</code>
     *
     * <pre>
     *小电瓶电压（单位:0.01V）
     * </pre>
     */
    boolean hasSmallVoltage();
    /**
     * <code>optional int32 smallVoltage = 17;</code>
     *
     * <pre>
     *小电瓶电压（单位:0.01V）
     * </pre>
     */
    int getSmallVoltage();
  }
  /**
   * Protobuf type {@code gboss.BeiJingInfo}
   *
   * <pre>
   **
   * 北汽附加信息
   * </pre>
   */
  public static final class BeiJingInfo extends
      com.google.protobuf.GeneratedMessage
      implements BeiJingInfoOrBuilder {
    // Use BeiJingInfo.newBuilder() to construct.
    private BeiJingInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BeiJingInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BeiJingInfo defaultInstance;
    public static BeiJingInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BeiJingInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BeiJingInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              devid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rfid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              voltage_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              electricity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gsmvalue_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              satellitecount_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              mileage_ = input.readInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              chargeStatus_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              fillGunStatus_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              accStatus_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              oilStatus_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              defendStatus_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              centralLockStatus_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              doorStatus_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              lightStatus_ = input.readBytes();
              break;
            }
            case 130: {
              bitField0_ |= 0x00008000;
              windowStatus_ = input.readBytes();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              smallVoltage_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BeiJingInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BeiJingInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BeiJingInfo> PARSER =
        new com.google.protobuf.AbstractParser<BeiJingInfo>() {
      public BeiJingInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BeiJingInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BeiJingInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 devid = 1;
    public static final int DEVID_FIELD_NUMBER = 1;
    private int devid_;
    /**
     * <code>optional int32 devid = 1;</code>
     *
     * <pre>
     *设备id
     * </pre>
     */
    public boolean hasDevid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 devid = 1;</code>
     *
     * <pre>
     *设备id
     * </pre>
     */
    public int getDevid() {
      return devid_;
    }

    // optional int32 rfid = 2;
    public static final int RFID_FIELD_NUMBER = 2;
    private int rfid_;
    /**
     * <code>optional int32 rfid = 2;</code>
     *
     * <pre>
     *会员卡卡号
     * </pre>
     */
    public boolean hasRfid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 rfid = 2;</code>
     *
     * <pre>
     *会员卡卡号
     * </pre>
     */
    public int getRfid() {
      return rfid_;
    }

    // optional int32 voltage = 3;
    public static final int VOLTAGE_FIELD_NUMBER = 3;
    private int voltage_;
    /**
     * <code>optional int32 voltage = 3;</code>
     *
     * <pre>
     *电池电压值（单位：0.1V）
     * </pre>
     */
    public boolean hasVoltage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 voltage = 3;</code>
     *
     * <pre>
     *电池电压值（单位：0.1V）
     * </pre>
     */
    public int getVoltage() {
      return voltage_;
    }

    // optional int32 electricity = 4;
    public static final int ELECTRICITY_FIELD_NUMBER = 4;
    private int electricity_;
    /**
     * <code>optional int32 electricity = 4;</code>
     *
     * <pre>
     *电量百分比(百分之一)
     * </pre>
     */
    public boolean hasElectricity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 electricity = 4;</code>
     *
     * <pre>
     *电量百分比(百分之一)
     * </pre>
     */
    public int getElectricity() {
      return electricity_;
    }

    // optional int32 gsmvalue = 5;
    public static final int GSMVALUE_FIELD_NUMBER = 5;
    private int gsmvalue_;
    /**
     * <code>optional int32 gsmvalue = 5;</code>
     *
     * <pre>
     *GSM信号强度
     * </pre>
     */
    public boolean hasGsmvalue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 gsmvalue = 5;</code>
     *
     * <pre>
     *GSM信号强度
     * </pre>
     */
    public int getGsmvalue() {
      return gsmvalue_;
    }

    // optional int32 satellitecount = 6;
    public static final int SATELLITECOUNT_FIELD_NUMBER = 6;
    private int satellitecount_;
    /**
     * <code>optional int32 satellitecount = 6;</code>
     *
     * <pre>
     *卫星数
     * </pre>
     */
    public boolean hasSatellitecount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 satellitecount = 6;</code>
     *
     * <pre>
     *卫星数
     * </pre>
     */
    public int getSatellitecount() {
      return satellitecount_;
    }

    // optional int32 mileage = 7;
    public static final int MILEAGE_FIELD_NUMBER = 7;
    private int mileage_;
    /**
     * <code>optional int32 mileage = 7;</code>
     *
     * <pre>
     *续航里程（km）
     * </pre>
     */
    public boolean hasMileage() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 mileage = 7;</code>
     *
     * <pre>
     *续航里程（km）
     * </pre>
     */
    public int getMileage() {
      return mileage_;
    }

    // optional string chargeStatus = 8;
    public static final int CHARGESTATUS_FIELD_NUMBER = 8;
    private java.lang.Object chargeStatus_;
    /**
     * <code>optional string chargeStatus = 8;</code>
     *
     * <pre>
     *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
     * </pre>
     */
    public boolean hasChargeStatus() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string chargeStatus = 8;</code>
     *
     * <pre>
     *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
     * </pre>
     */
    public java.lang.String getChargeStatus() {
      java.lang.Object ref = chargeStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chargeStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string chargeStatus = 8;</code>
     *
     * <pre>
     *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getChargeStatusBytes() {
      java.lang.Object ref = chargeStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chargeStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string fillGunStatus = 9;
    public static final int FILLGUNSTATUS_FIELD_NUMBER = 9;
    private java.lang.Object fillGunStatus_;
    /**
     * <code>optional string fillGunStatus = 9;</code>
     *
     * <pre>
     *充枪连接状态 0 半连接 1未连接 2 已连接
     * </pre>
     */
    public boolean hasFillGunStatus() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string fillGunStatus = 9;</code>
     *
     * <pre>
     *充枪连接状态 0 半连接 1未连接 2 已连接
     * </pre>
     */
    public java.lang.String getFillGunStatus() {
      java.lang.Object ref = fillGunStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fillGunStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fillGunStatus = 9;</code>
     *
     * <pre>
     *充枪连接状态 0 半连接 1未连接 2 已连接
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFillGunStatusBytes() {
      java.lang.Object ref = fillGunStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fillGunStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string accStatus = 10;
    public static final int ACCSTATUS_FIELD_NUMBER = 10;
    private java.lang.Object accStatus_;
    /**
     * <code>optional string accStatus = 10;</code>
     *
     * <pre>
     *ACC状态   0 ACC关 1 ACC开
     * </pre>
     */
    public boolean hasAccStatus() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string accStatus = 10;</code>
     *
     * <pre>
     *ACC状态   0 ACC关 1 ACC开
     * </pre>
     */
    public java.lang.String getAccStatus() {
      java.lang.Object ref = accStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          accStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string accStatus = 10;</code>
     *
     * <pre>
     *ACC状态   0 ACC关 1 ACC开
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAccStatusBytes() {
      java.lang.Object ref = accStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string oilStatus = 11;
    public static final int OILSTATUS_FIELD_NUMBER = 11;
    private java.lang.Object oilStatus_;
    /**
     * <code>optional string oilStatus = 11;</code>
     *
     * <pre>
     *油路状态  0 闭合  1 断开
     * </pre>
     */
    public boolean hasOilStatus() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string oilStatus = 11;</code>
     *
     * <pre>
     *油路状态  0 闭合  1 断开
     * </pre>
     */
    public java.lang.String getOilStatus() {
      java.lang.Object ref = oilStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          oilStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string oilStatus = 11;</code>
     *
     * <pre>
     *油路状态  0 闭合  1 断开
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOilStatusBytes() {
      java.lang.Object ref = oilStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        oilStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string defendStatus = 12;
    public static final int DEFENDSTATUS_FIELD_NUMBER = 12;
    private java.lang.Object defendStatus_;
    /**
     * <code>optional string defendStatus = 12;</code>
     *
     * <pre>
     *防盗状态  0 撤防  1设防
     * </pre>
     */
    public boolean hasDefendStatus() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string defendStatus = 12;</code>
     *
     * <pre>
     *防盗状态  0 撤防  1设防
     * </pre>
     */
    public java.lang.String getDefendStatus() {
      java.lang.Object ref = defendStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          defendStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string defendStatus = 12;</code>
     *
     * <pre>
     *防盗状态  0 撤防  1设防
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDefendStatusBytes() {
      java.lang.Object ref = defendStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defendStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string centralLockStatus = 13;
    public static final int CENTRALLOCKSTATUS_FIELD_NUMBER = 13;
    private java.lang.Object centralLockStatus_;
    /**
     * <code>optional string centralLockStatus = 13;</code>
     *
     * <pre>
     *中控锁状态  0未锁 1锁上
     * </pre>
     */
    public boolean hasCentralLockStatus() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string centralLockStatus = 13;</code>
     *
     * <pre>
     *中控锁状态  0未锁 1锁上
     * </pre>
     */
    public java.lang.String getCentralLockStatus() {
      java.lang.Object ref = centralLockStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          centralLockStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string centralLockStatus = 13;</code>
     *
     * <pre>
     *中控锁状态  0未锁 1锁上
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCentralLockStatusBytes() {
      java.lang.Object ref = centralLockStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        centralLockStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string doorStatus = 14;
    public static final int DOORSTATUS_FIELD_NUMBER = 14;
    private java.lang.Object doorStatus_;
    /**
     * <code>optional string doorStatus = 14;</code>
     *
     * <pre>
     *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
     * </pre>
     */
    public boolean hasDoorStatus() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string doorStatus = 14;</code>
     *
     * <pre>
     *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
     * </pre>
     */
    public java.lang.String getDoorStatus() {
      java.lang.Object ref = doorStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          doorStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string doorStatus = 14;</code>
     *
     * <pre>
     *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDoorStatusBytes() {
      java.lang.Object ref = doorStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        doorStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string lightStatus = 15;
    public static final int LIGHTSTATUS_FIELD_NUMBER = 15;
    private java.lang.Object lightStatus_;
    /**
     * <code>optional string lightStatus = 15;</code>
     *
     * <pre>
     *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
     * </pre>
     */
    public boolean hasLightStatus() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string lightStatus = 15;</code>
     *
     * <pre>
     *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
     * </pre>
     */
    public java.lang.String getLightStatus() {
      java.lang.Object ref = lightStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lightStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string lightStatus = 15;</code>
     *
     * <pre>
     *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLightStatusBytes() {
      java.lang.Object ref = lightStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lightStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string windowStatus = 16;
    public static final int WINDOWSTATUS_FIELD_NUMBER = 16;
    private java.lang.Object windowStatus_;
    /**
     * <code>optional string windowStatus = 16;</code>
     *
     * <pre>
     *车窗状态 0 全关好1 未关好
     * </pre>
     */
    public boolean hasWindowStatus() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string windowStatus = 16;</code>
     *
     * <pre>
     *车窗状态 0 全关好1 未关好
     * </pre>
     */
    public java.lang.String getWindowStatus() {
      java.lang.Object ref = windowStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          windowStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string windowStatus = 16;</code>
     *
     * <pre>
     *车窗状态 0 全关好1 未关好
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWindowStatusBytes() {
      java.lang.Object ref = windowStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        windowStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 smallVoltage = 17;
    public static final int SMALLVOLTAGE_FIELD_NUMBER = 17;
    private int smallVoltage_;
    /**
     * <code>optional int32 smallVoltage = 17;</code>
     *
     * <pre>
     *小电瓶电压（单位:0.01V）
     * </pre>
     */
    public boolean hasSmallVoltage() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 smallVoltage = 17;</code>
     *
     * <pre>
     *小电瓶电压（单位:0.01V）
     * </pre>
     */
    public int getSmallVoltage() {
      return smallVoltage_;
    }

    private void initFields() {
      devid_ = 0;
      rfid_ = 0;
      voltage_ = 0;
      electricity_ = 0;
      gsmvalue_ = 0;
      satellitecount_ = 0;
      mileage_ = 0;
      chargeStatus_ = "";
      fillGunStatus_ = "";
      accStatus_ = "";
      oilStatus_ = "";
      defendStatus_ = "";
      centralLockStatus_ = "";
      doorStatus_ = "";
      lightStatus_ = "";
      windowStatus_ = "";
      smallVoltage_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, devid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, rfid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, voltage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, electricity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, gsmvalue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, satellitecount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, mileage_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getChargeStatusBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getFillGunStatusBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getAccStatusBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getOilStatusBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getDefendStatusBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getCentralLockStatusBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getDoorStatusBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getLightStatusBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(16, getWindowStatusBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, smallVoltage_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, devid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rfid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, voltage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, electricity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, gsmvalue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, satellitecount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, mileage_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getChargeStatusBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getFillGunStatusBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getAccStatusBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getOilStatusBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getDefendStatusBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getCentralLockStatusBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getDoorStatusBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getLightStatusBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getWindowStatusBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, smallVoltage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.BeiJingInfo}
     *
     * <pre>
     **
     * 北汽附加信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BeiJingInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BeiJingInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        devid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        rfid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        voltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        electricity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        gsmvalue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        satellitecount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        mileage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        chargeStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        fillGunStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        accStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        oilStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        defendStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        centralLockStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        doorStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        lightStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        windowStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        smallVoltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BeiJingInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.devid_ = devid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rfid_ = rfid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.voltage_ = voltage_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.electricity_ = electricity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gsmvalue_ = gsmvalue_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.satellitecount_ = satellitecount_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.mileage_ = mileage_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.chargeStatus_ = chargeStatus_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fillGunStatus_ = fillGunStatus_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.accStatus_ = accStatus_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.oilStatus_ = oilStatus_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.defendStatus_ = defendStatus_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.centralLockStatus_ = centralLockStatus_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.doorStatus_ = doorStatus_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.lightStatus_ = lightStatus_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.windowStatus_ = windowStatus_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.smallVoltage_ = smallVoltage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.getDefaultInstance()) return this;
        if (other.hasDevid()) {
          setDevid(other.getDevid());
        }
        if (other.hasRfid()) {
          setRfid(other.getRfid());
        }
        if (other.hasVoltage()) {
          setVoltage(other.getVoltage());
        }
        if (other.hasElectricity()) {
          setElectricity(other.getElectricity());
        }
        if (other.hasGsmvalue()) {
          setGsmvalue(other.getGsmvalue());
        }
        if (other.hasSatellitecount()) {
          setSatellitecount(other.getSatellitecount());
        }
        if (other.hasMileage()) {
          setMileage(other.getMileage());
        }
        if (other.hasChargeStatus()) {
          bitField0_ |= 0x00000080;
          chargeStatus_ = other.chargeStatus_;
          onChanged();
        }
        if (other.hasFillGunStatus()) {
          bitField0_ |= 0x00000100;
          fillGunStatus_ = other.fillGunStatus_;
          onChanged();
        }
        if (other.hasAccStatus()) {
          bitField0_ |= 0x00000200;
          accStatus_ = other.accStatus_;
          onChanged();
        }
        if (other.hasOilStatus()) {
          bitField0_ |= 0x00000400;
          oilStatus_ = other.oilStatus_;
          onChanged();
        }
        if (other.hasDefendStatus()) {
          bitField0_ |= 0x00000800;
          defendStatus_ = other.defendStatus_;
          onChanged();
        }
        if (other.hasCentralLockStatus()) {
          bitField0_ |= 0x00001000;
          centralLockStatus_ = other.centralLockStatus_;
          onChanged();
        }
        if (other.hasDoorStatus()) {
          bitField0_ |= 0x00002000;
          doorStatus_ = other.doorStatus_;
          onChanged();
        }
        if (other.hasLightStatus()) {
          bitField0_ |= 0x00004000;
          lightStatus_ = other.lightStatus_;
          onChanged();
        }
        if (other.hasWindowStatus()) {
          bitField0_ |= 0x00008000;
          windowStatus_ = other.windowStatus_;
          onChanged();
        }
        if (other.hasSmallVoltage()) {
          setSmallVoltage(other.getSmallVoltage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 devid = 1;
      private int devid_ ;
      /**
       * <code>optional int32 devid = 1;</code>
       *
       * <pre>
       *设备id
       * </pre>
       */
      public boolean hasDevid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 devid = 1;</code>
       *
       * <pre>
       *设备id
       * </pre>
       */
      public int getDevid() {
        return devid_;
      }
      /**
       * <code>optional int32 devid = 1;</code>
       *
       * <pre>
       *设备id
       * </pre>
       */
      public Builder setDevid(int value) {
        bitField0_ |= 0x00000001;
        devid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 devid = 1;</code>
       *
       * <pre>
       *设备id
       * </pre>
       */
      public Builder clearDevid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        devid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rfid = 2;
      private int rfid_ ;
      /**
       * <code>optional int32 rfid = 2;</code>
       *
       * <pre>
       *会员卡卡号
       * </pre>
       */
      public boolean hasRfid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 rfid = 2;</code>
       *
       * <pre>
       *会员卡卡号
       * </pre>
       */
      public int getRfid() {
        return rfid_;
      }
      /**
       * <code>optional int32 rfid = 2;</code>
       *
       * <pre>
       *会员卡卡号
       * </pre>
       */
      public Builder setRfid(int value) {
        bitField0_ |= 0x00000002;
        rfid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rfid = 2;</code>
       *
       * <pre>
       *会员卡卡号
       * </pre>
       */
      public Builder clearRfid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rfid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 voltage = 3;
      private int voltage_ ;
      /**
       * <code>optional int32 voltage = 3;</code>
       *
       * <pre>
       *电池电压值（单位：0.1V）
       * </pre>
       */
      public boolean hasVoltage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 voltage = 3;</code>
       *
       * <pre>
       *电池电压值（单位：0.1V）
       * </pre>
       */
      public int getVoltage() {
        return voltage_;
      }
      /**
       * <code>optional int32 voltage = 3;</code>
       *
       * <pre>
       *电池电压值（单位：0.1V）
       * </pre>
       */
      public Builder setVoltage(int value) {
        bitField0_ |= 0x00000004;
        voltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 voltage = 3;</code>
       *
       * <pre>
       *电池电压值（单位：0.1V）
       * </pre>
       */
      public Builder clearVoltage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        voltage_ = 0;
        onChanged();
        return this;
      }

      // optional int32 electricity = 4;
      private int electricity_ ;
      /**
       * <code>optional int32 electricity = 4;</code>
       *
       * <pre>
       *电量百分比(百分之一)
       * </pre>
       */
      public boolean hasElectricity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 electricity = 4;</code>
       *
       * <pre>
       *电量百分比(百分之一)
       * </pre>
       */
      public int getElectricity() {
        return electricity_;
      }
      /**
       * <code>optional int32 electricity = 4;</code>
       *
       * <pre>
       *电量百分比(百分之一)
       * </pre>
       */
      public Builder setElectricity(int value) {
        bitField0_ |= 0x00000008;
        electricity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 electricity = 4;</code>
       *
       * <pre>
       *电量百分比(百分之一)
       * </pre>
       */
      public Builder clearElectricity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        electricity_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gsmvalue = 5;
      private int gsmvalue_ ;
      /**
       * <code>optional int32 gsmvalue = 5;</code>
       *
       * <pre>
       *GSM信号强度
       * </pre>
       */
      public boolean hasGsmvalue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 gsmvalue = 5;</code>
       *
       * <pre>
       *GSM信号强度
       * </pre>
       */
      public int getGsmvalue() {
        return gsmvalue_;
      }
      /**
       * <code>optional int32 gsmvalue = 5;</code>
       *
       * <pre>
       *GSM信号强度
       * </pre>
       */
      public Builder setGsmvalue(int value) {
        bitField0_ |= 0x00000010;
        gsmvalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gsmvalue = 5;</code>
       *
       * <pre>
       *GSM信号强度
       * </pre>
       */
      public Builder clearGsmvalue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gsmvalue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 satellitecount = 6;
      private int satellitecount_ ;
      /**
       * <code>optional int32 satellitecount = 6;</code>
       *
       * <pre>
       *卫星数
       * </pre>
       */
      public boolean hasSatellitecount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 satellitecount = 6;</code>
       *
       * <pre>
       *卫星数
       * </pre>
       */
      public int getSatellitecount() {
        return satellitecount_;
      }
      /**
       * <code>optional int32 satellitecount = 6;</code>
       *
       * <pre>
       *卫星数
       * </pre>
       */
      public Builder setSatellitecount(int value) {
        bitField0_ |= 0x00000020;
        satellitecount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 satellitecount = 6;</code>
       *
       * <pre>
       *卫星数
       * </pre>
       */
      public Builder clearSatellitecount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        satellitecount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mileage = 7;
      private int mileage_ ;
      /**
       * <code>optional int32 mileage = 7;</code>
       *
       * <pre>
       *续航里程（km）
       * </pre>
       */
      public boolean hasMileage() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 mileage = 7;</code>
       *
       * <pre>
       *续航里程（km）
       * </pre>
       */
      public int getMileage() {
        return mileage_;
      }
      /**
       * <code>optional int32 mileage = 7;</code>
       *
       * <pre>
       *续航里程（km）
       * </pre>
       */
      public Builder setMileage(int value) {
        bitField0_ |= 0x00000040;
        mileage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mileage = 7;</code>
       *
       * <pre>
       *续航里程（km）
       * </pre>
       */
      public Builder clearMileage() {
        bitField0_ = (bitField0_ & ~0x00000040);
        mileage_ = 0;
        onChanged();
        return this;
      }

      // optional string chargeStatus = 8;
      private java.lang.Object chargeStatus_ = "";
      /**
       * <code>optional string chargeStatus = 8;</code>
       *
       * <pre>
       *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
       * </pre>
       */
      public boolean hasChargeStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string chargeStatus = 8;</code>
       *
       * <pre>
       *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
       * </pre>
       */
      public java.lang.String getChargeStatus() {
        java.lang.Object ref = chargeStatus_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          chargeStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string chargeStatus = 8;</code>
       *
       * <pre>
       *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChargeStatusBytes() {
        java.lang.Object ref = chargeStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chargeStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string chargeStatus = 8;</code>
       *
       * <pre>
       *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
       * </pre>
       */
      public Builder setChargeStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        chargeStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string chargeStatus = 8;</code>
       *
       * <pre>
       *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
       * </pre>
       */
      public Builder clearChargeStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        chargeStatus_ = getDefaultInstance().getChargeStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string chargeStatus = 8;</code>
       *
       * <pre>
       *充电状态（0：未充电，1：充电中，2：充电完成，3：充电故障）
       * </pre>
       */
      public Builder setChargeStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        chargeStatus_ = value;
        onChanged();
        return this;
      }

      // optional string fillGunStatus = 9;
      private java.lang.Object fillGunStatus_ = "";
      /**
       * <code>optional string fillGunStatus = 9;</code>
       *
       * <pre>
       *充枪连接状态 0 半连接 1未连接 2 已连接
       * </pre>
       */
      public boolean hasFillGunStatus() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string fillGunStatus = 9;</code>
       *
       * <pre>
       *充枪连接状态 0 半连接 1未连接 2 已连接
       * </pre>
       */
      public java.lang.String getFillGunStatus() {
        java.lang.Object ref = fillGunStatus_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          fillGunStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fillGunStatus = 9;</code>
       *
       * <pre>
       *充枪连接状态 0 半连接 1未连接 2 已连接
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFillGunStatusBytes() {
        java.lang.Object ref = fillGunStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fillGunStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fillGunStatus = 9;</code>
       *
       * <pre>
       *充枪连接状态 0 半连接 1未连接 2 已连接
       * </pre>
       */
      public Builder setFillGunStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        fillGunStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fillGunStatus = 9;</code>
       *
       * <pre>
       *充枪连接状态 0 半连接 1未连接 2 已连接
       * </pre>
       */
      public Builder clearFillGunStatus() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fillGunStatus_ = getDefaultInstance().getFillGunStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fillGunStatus = 9;</code>
       *
       * <pre>
       *充枪连接状态 0 半连接 1未连接 2 已连接
       * </pre>
       */
      public Builder setFillGunStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        fillGunStatus_ = value;
        onChanged();
        return this;
      }

      // optional string accStatus = 10;
      private java.lang.Object accStatus_ = "";
      /**
       * <code>optional string accStatus = 10;</code>
       *
       * <pre>
       *ACC状态   0 ACC关 1 ACC开
       * </pre>
       */
      public boolean hasAccStatus() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string accStatus = 10;</code>
       *
       * <pre>
       *ACC状态   0 ACC关 1 ACC开
       * </pre>
       */
      public java.lang.String getAccStatus() {
        java.lang.Object ref = accStatus_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          accStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string accStatus = 10;</code>
       *
       * <pre>
       *ACC状态   0 ACC关 1 ACC开
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAccStatusBytes() {
        java.lang.Object ref = accStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string accStatus = 10;</code>
       *
       * <pre>
       *ACC状态   0 ACC关 1 ACC开
       * </pre>
       */
      public Builder setAccStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        accStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string accStatus = 10;</code>
       *
       * <pre>
       *ACC状态   0 ACC关 1 ACC开
       * </pre>
       */
      public Builder clearAccStatus() {
        bitField0_ = (bitField0_ & ~0x00000200);
        accStatus_ = getDefaultInstance().getAccStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string accStatus = 10;</code>
       *
       * <pre>
       *ACC状态   0 ACC关 1 ACC开
       * </pre>
       */
      public Builder setAccStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        accStatus_ = value;
        onChanged();
        return this;
      }

      // optional string oilStatus = 11;
      private java.lang.Object oilStatus_ = "";
      /**
       * <code>optional string oilStatus = 11;</code>
       *
       * <pre>
       *油路状态  0 闭合  1 断开
       * </pre>
       */
      public boolean hasOilStatus() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string oilStatus = 11;</code>
       *
       * <pre>
       *油路状态  0 闭合  1 断开
       * </pre>
       */
      public java.lang.String getOilStatus() {
        java.lang.Object ref = oilStatus_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          oilStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string oilStatus = 11;</code>
       *
       * <pre>
       *油路状态  0 闭合  1 断开
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOilStatusBytes() {
        java.lang.Object ref = oilStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          oilStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string oilStatus = 11;</code>
       *
       * <pre>
       *油路状态  0 闭合  1 断开
       * </pre>
       */
      public Builder setOilStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        oilStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string oilStatus = 11;</code>
       *
       * <pre>
       *油路状态  0 闭合  1 断开
       * </pre>
       */
      public Builder clearOilStatus() {
        bitField0_ = (bitField0_ & ~0x00000400);
        oilStatus_ = getDefaultInstance().getOilStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string oilStatus = 11;</code>
       *
       * <pre>
       *油路状态  0 闭合  1 断开
       * </pre>
       */
      public Builder setOilStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        oilStatus_ = value;
        onChanged();
        return this;
      }

      // optional string defendStatus = 12;
      private java.lang.Object defendStatus_ = "";
      /**
       * <code>optional string defendStatus = 12;</code>
       *
       * <pre>
       *防盗状态  0 撤防  1设防
       * </pre>
       */
      public boolean hasDefendStatus() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string defendStatus = 12;</code>
       *
       * <pre>
       *防盗状态  0 撤防  1设防
       * </pre>
       */
      public java.lang.String getDefendStatus() {
        java.lang.Object ref = defendStatus_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          defendStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string defendStatus = 12;</code>
       *
       * <pre>
       *防盗状态  0 撤防  1设防
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDefendStatusBytes() {
        java.lang.Object ref = defendStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          defendStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string defendStatus = 12;</code>
       *
       * <pre>
       *防盗状态  0 撤防  1设防
       * </pre>
       */
      public Builder setDefendStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        defendStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string defendStatus = 12;</code>
       *
       * <pre>
       *防盗状态  0 撤防  1设防
       * </pre>
       */
      public Builder clearDefendStatus() {
        bitField0_ = (bitField0_ & ~0x00000800);
        defendStatus_ = getDefaultInstance().getDefendStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string defendStatus = 12;</code>
       *
       * <pre>
       *防盗状态  0 撤防  1设防
       * </pre>
       */
      public Builder setDefendStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        defendStatus_ = value;
        onChanged();
        return this;
      }

      // optional string centralLockStatus = 13;
      private java.lang.Object centralLockStatus_ = "";
      /**
       * <code>optional string centralLockStatus = 13;</code>
       *
       * <pre>
       *中控锁状态  0未锁 1锁上
       * </pre>
       */
      public boolean hasCentralLockStatus() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string centralLockStatus = 13;</code>
       *
       * <pre>
       *中控锁状态  0未锁 1锁上
       * </pre>
       */
      public java.lang.String getCentralLockStatus() {
        java.lang.Object ref = centralLockStatus_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          centralLockStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string centralLockStatus = 13;</code>
       *
       * <pre>
       *中控锁状态  0未锁 1锁上
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCentralLockStatusBytes() {
        java.lang.Object ref = centralLockStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          centralLockStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string centralLockStatus = 13;</code>
       *
       * <pre>
       *中控锁状态  0未锁 1锁上
       * </pre>
       */
      public Builder setCentralLockStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        centralLockStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string centralLockStatus = 13;</code>
       *
       * <pre>
       *中控锁状态  0未锁 1锁上
       * </pre>
       */
      public Builder clearCentralLockStatus() {
        bitField0_ = (bitField0_ & ~0x00001000);
        centralLockStatus_ = getDefaultInstance().getCentralLockStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string centralLockStatus = 13;</code>
       *
       * <pre>
       *中控锁状态  0未锁 1锁上
       * </pre>
       */
      public Builder setCentralLockStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        centralLockStatus_ = value;
        onChanged();
        return this;
      }

      // optional string doorStatus = 14;
      private java.lang.Object doorStatus_ = "";
      /**
       * <code>optional string doorStatus = 14;</code>
       *
       * <pre>
       *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
       * </pre>
       */
      public boolean hasDoorStatus() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string doorStatus = 14;</code>
       *
       * <pre>
       *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
       * </pre>
       */
      public java.lang.String getDoorStatus() {
        java.lang.Object ref = doorStatus_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          doorStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string doorStatus = 14;</code>
       *
       * <pre>
       *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDoorStatusBytes() {
        java.lang.Object ref = doorStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          doorStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string doorStatus = 14;</code>
       *
       * <pre>
       *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
       * </pre>
       */
      public Builder setDoorStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        doorStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string doorStatus = 14;</code>
       *
       * <pre>
       *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
       * </pre>
       */
      public Builder clearDoorStatus() {
        bitField0_ = (bitField0_ & ~0x00002000);
        doorStatus_ = getDefaultInstance().getDoorStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string doorStatus = 14;</code>
       *
       * <pre>
       *车门状态，第一个字节为驾驶员门，第二个字节为副驾驶员门，第三个字节为驾驶员后门，第四个字节为副驾驶员后门，第五个为后备箱门 0未关 1 关 
       * </pre>
       */
      public Builder setDoorStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        doorStatus_ = value;
        onChanged();
        return this;
      }

      // optional string lightStatus = 15;
      private java.lang.Object lightStatus_ = "";
      /**
       * <code>optional string lightStatus = 15;</code>
       *
       * <pre>
       *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
       * </pre>
       */
      public boolean hasLightStatus() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string lightStatus = 15;</code>
       *
       * <pre>
       *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
       * </pre>
       */
      public java.lang.String getLightStatus() {
        java.lang.Object ref = lightStatus_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          lightStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string lightStatus = 15;</code>
       *
       * <pre>
       *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLightStatusBytes() {
        java.lang.Object ref = lightStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lightStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string lightStatus = 15;</code>
       *
       * <pre>
       *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
       * </pre>
       */
      public Builder setLightStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        lightStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string lightStatus = 15;</code>
       *
       * <pre>
       *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
       * </pre>
       */
      public Builder clearLightStatus() {
        bitField0_ = (bitField0_ & ~0x00004000);
        lightStatus_ = getDefaultInstance().getLightStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string lightStatus = 15;</code>
       *
       * <pre>
       *车灯状态  第一个字节为小灯，第二个字节为大灯，第三个字节为后雾灯，第四个字节为前雾灯  0 灭  1亮
       * </pre>
       */
      public Builder setLightStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        lightStatus_ = value;
        onChanged();
        return this;
      }

      // optional string windowStatus = 16;
      private java.lang.Object windowStatus_ = "";
      /**
       * <code>optional string windowStatus = 16;</code>
       *
       * <pre>
       *车窗状态 0 全关好1 未关好
       * </pre>
       */
      public boolean hasWindowStatus() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string windowStatus = 16;</code>
       *
       * <pre>
       *车窗状态 0 全关好1 未关好
       * </pre>
       */
      public java.lang.String getWindowStatus() {
        java.lang.Object ref = windowStatus_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          windowStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string windowStatus = 16;</code>
       *
       * <pre>
       *车窗状态 0 全关好1 未关好
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWindowStatusBytes() {
        java.lang.Object ref = windowStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          windowStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string windowStatus = 16;</code>
       *
       * <pre>
       *车窗状态 0 全关好1 未关好
       * </pre>
       */
      public Builder setWindowStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        windowStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string windowStatus = 16;</code>
       *
       * <pre>
       *车窗状态 0 全关好1 未关好
       * </pre>
       */
      public Builder clearWindowStatus() {
        bitField0_ = (bitField0_ & ~0x00008000);
        windowStatus_ = getDefaultInstance().getWindowStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string windowStatus = 16;</code>
       *
       * <pre>
       *车窗状态 0 全关好1 未关好
       * </pre>
       */
      public Builder setWindowStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        windowStatus_ = value;
        onChanged();
        return this;
      }

      // optional int32 smallVoltage = 17;
      private int smallVoltage_ ;
      /**
       * <code>optional int32 smallVoltage = 17;</code>
       *
       * <pre>
       *小电瓶电压（单位:0.01V）
       * </pre>
       */
      public boolean hasSmallVoltage() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 smallVoltage = 17;</code>
       *
       * <pre>
       *小电瓶电压（单位:0.01V）
       * </pre>
       */
      public int getSmallVoltage() {
        return smallVoltage_;
      }
      /**
       * <code>optional int32 smallVoltage = 17;</code>
       *
       * <pre>
       *小电瓶电压（单位:0.01V）
       * </pre>
       */
      public Builder setSmallVoltage(int value) {
        bitField0_ |= 0x00010000;
        smallVoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 smallVoltage = 17;</code>
       *
       * <pre>
       *小电瓶电压（单位:0.01V）
       * </pre>
       */
      public Builder clearSmallVoltage() {
        bitField0_ = (bitField0_ & ~0x00010000);
        smallVoltage_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.BeiJingInfo)
    }

    static {
      defaultInstance = new BeiJingInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.BeiJingInfo)
  }

  public interface BatteryUnitInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 unitsn = 1;
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    boolean hasUnitsn();
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    int getUnitsn();

    // required int32 batterytype = 2;
    /**
     * <code>required int32 batterytype = 2;</code>
     *
     * <pre>
     *电池类型: 铅酸电池:0x01, 镍氢电池:0x02, 磷酸铁锂电池:0x03, 锰酸锂电池:0x04,
     * </pre>
     */
    boolean hasBatterytype();
    /**
     * <code>required int32 batterytype = 2;</code>
     *
     * <pre>
     *电池类型: 铅酸电池:0x01, 镍氢电池:0x02, 磷酸铁锂电池:0x03, 锰酸锂电池:0x04,
     * </pre>
     */
    int getBatterytype();

    // optional string manufacturer = 3;
    /**
     * <code>optional string manufacturer = 3;</code>
     *
     * <pre>
     *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
     *其他电池:-1
     * </pre>
     */
    boolean hasManufacturer();
    /**
     * <code>optional string manufacturer = 3;</code>
     *
     * <pre>
     *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
     *其他电池:-1
     * </pre>
     */
    java.lang.String getManufacturer();
    /**
     * <code>optional string manufacturer = 3;</code>
     *
     * <pre>
     *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
     *其他电池:-1
     * </pre>
     */
    com.google.protobuf.ByteString
        getManufacturerBytes();

    // optional int64 manufacturDate = 4;
    /**
     * <code>optional int64 manufacturDate = 4;</code>
     *
     * <pre>
     *制造日期(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    boolean hasManufacturDate();
    /**
     * <code>optional int64 manufacturDate = 4;</code>
     *
     * <pre>
     *制造日期(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    long getManufacturDate();

    // optional int32 nominalcapacity = 5;
    /**
     * <code>optional int32 nominalcapacity = 5;</code>
     *
     * <pre>
     *额定能量（单位：o.1度,千卡时）
     * </pre>
     */
    boolean hasNominalcapacity();
    /**
     * <code>optional int32 nominalcapacity = 5;</code>
     *
     * <pre>
     *额定能量（单位：o.1度,千卡时）
     * </pre>
     */
    int getNominalcapacity();

    // optional int32 ratedvoltage = 6;
    /**
     * <code>optional int32 ratedvoltage = 6;</code>
     *
     * <pre>
     *额定电压（单位：0.1V)
     * </pre>
     */
    boolean hasRatedvoltage();
    /**
     * <code>optional int32 ratedvoltage = 6;</code>
     *
     * <pre>
     *额定电压（单位：0.1V)
     * </pre>
     */
    int getRatedvoltage();
  }
  /**
   * Protobuf type {@code gboss.BatteryUnitInfo}
   *
   * <pre>
   *************************************************************************************
   * 动力蓄电池每包信息
   ************************************************************************************
   * </pre>
   */
  public static final class BatteryUnitInfo extends
      com.google.protobuf.GeneratedMessage
      implements BatteryUnitInfoOrBuilder {
    // Use BatteryUnitInfo.newBuilder() to construct.
    private BatteryUnitInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BatteryUnitInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BatteryUnitInfo defaultInstance;
    public static BatteryUnitInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BatteryUnitInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BatteryUnitInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              unitsn_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              batterytype_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              manufacturer_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              manufacturDate_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              nominalcapacity_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ratedvoltage_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BatteryUnitInfo> PARSER =
        new com.google.protobuf.AbstractParser<BatteryUnitInfo>() {
      public BatteryUnitInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatteryUnitInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BatteryUnitInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 unitsn = 1;
    public static final int UNITSN_FIELD_NUMBER = 1;
    private int unitsn_;
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    public boolean hasUnitsn() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    public int getUnitsn() {
      return unitsn_;
    }

    // required int32 batterytype = 2;
    public static final int BATTERYTYPE_FIELD_NUMBER = 2;
    private int batterytype_;
    /**
     * <code>required int32 batterytype = 2;</code>
     *
     * <pre>
     *电池类型: 铅酸电池:0x01, 镍氢电池:0x02, 磷酸铁锂电池:0x03, 锰酸锂电池:0x04,
     * </pre>
     */
    public boolean hasBatterytype() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 batterytype = 2;</code>
     *
     * <pre>
     *电池类型: 铅酸电池:0x01, 镍氢电池:0x02, 磷酸铁锂电池:0x03, 锰酸锂电池:0x04,
     * </pre>
     */
    public int getBatterytype() {
      return batterytype_;
    }

    // optional string manufacturer = 3;
    public static final int MANUFACTURER_FIELD_NUMBER = 3;
    private java.lang.Object manufacturer_;
    /**
     * <code>optional string manufacturer = 3;</code>
     *
     * <pre>
     *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
     *其他电池:-1
     * </pre>
     */
    public boolean hasManufacturer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string manufacturer = 3;</code>
     *
     * <pre>
     *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
     *其他电池:-1
     * </pre>
     */
    public java.lang.String getManufacturer() {
      java.lang.Object ref = manufacturer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          manufacturer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string manufacturer = 3;</code>
     *
     * <pre>
     *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
     *其他电池:-1
     * </pre>
     */
    public com.google.protobuf.ByteString
        getManufacturerBytes() {
      java.lang.Object ref = manufacturer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        manufacturer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 manufacturDate = 4;
    public static final int MANUFACTURDATE_FIELD_NUMBER = 4;
    private long manufacturDate_;
    /**
     * <code>optional int64 manufacturDate = 4;</code>
     *
     * <pre>
     *制造日期(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public boolean hasManufacturDate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 manufacturDate = 4;</code>
     *
     * <pre>
     *制造日期(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public long getManufacturDate() {
      return manufacturDate_;
    }

    // optional int32 nominalcapacity = 5;
    public static final int NOMINALCAPACITY_FIELD_NUMBER = 5;
    private int nominalcapacity_;
    /**
     * <code>optional int32 nominalcapacity = 5;</code>
     *
     * <pre>
     *额定能量（单位：o.1度,千卡时）
     * </pre>
     */
    public boolean hasNominalcapacity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 nominalcapacity = 5;</code>
     *
     * <pre>
     *额定能量（单位：o.1度,千卡时）
     * </pre>
     */
    public int getNominalcapacity() {
      return nominalcapacity_;
    }

    // optional int32 ratedvoltage = 6;
    public static final int RATEDVOLTAGE_FIELD_NUMBER = 6;
    private int ratedvoltage_;
    /**
     * <code>optional int32 ratedvoltage = 6;</code>
     *
     * <pre>
     *额定电压（单位：0.1V)
     * </pre>
     */
    public boolean hasRatedvoltage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 ratedvoltage = 6;</code>
     *
     * <pre>
     *额定电压（单位：0.1V)
     * </pre>
     */
    public int getRatedvoltage() {
      return ratedvoltage_;
    }

    private void initFields() {
      unitsn_ = 0;
      batterytype_ = 0;
      manufacturer_ = "";
      manufacturDate_ = 0L;
      nominalcapacity_ = 0;
      ratedvoltage_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUnitsn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBatterytype()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, unitsn_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, batterytype_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getManufacturerBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, manufacturDate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, nominalcapacity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, ratedvoltage_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, unitsn_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, batterytype_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getManufacturerBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, manufacturDate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, nominalcapacity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, ratedvoltage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.BatteryUnitInfo}
     *
     * <pre>
     *************************************************************************************
     * 动力蓄电池每包信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        unitsn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        batterytype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        manufacturer_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        manufacturDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        nominalcapacity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ratedvoltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitsn_ = unitsn_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.batterytype_ = batterytype_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.manufacturer_ = manufacturer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.manufacturDate_ = manufacturDate_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nominalcapacity_ = nominalcapacity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ratedvoltage_ = ratedvoltage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.getDefaultInstance()) return this;
        if (other.hasUnitsn()) {
          setUnitsn(other.getUnitsn());
        }
        if (other.hasBatterytype()) {
          setBatterytype(other.getBatterytype());
        }
        if (other.hasManufacturer()) {
          bitField0_ |= 0x00000004;
          manufacturer_ = other.manufacturer_;
          onChanged();
        }
        if (other.hasManufacturDate()) {
          setManufacturDate(other.getManufacturDate());
        }
        if (other.hasNominalcapacity()) {
          setNominalcapacity(other.getNominalcapacity());
        }
        if (other.hasRatedvoltage()) {
          setRatedvoltage(other.getRatedvoltage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUnitsn()) {
          
          return false;
        }
        if (!hasBatterytype()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 unitsn = 1;
      private int unitsn_ ;
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public boolean hasUnitsn() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public int getUnitsn() {
        return unitsn_;
      }
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public Builder setUnitsn(int value) {
        bitField0_ |= 0x00000001;
        unitsn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public Builder clearUnitsn() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitsn_ = 0;
        onChanged();
        return this;
      }

      // required int32 batterytype = 2;
      private int batterytype_ ;
      /**
       * <code>required int32 batterytype = 2;</code>
       *
       * <pre>
       *电池类型: 铅酸电池:0x01, 镍氢电池:0x02, 磷酸铁锂电池:0x03, 锰酸锂电池:0x04,
       * </pre>
       */
      public boolean hasBatterytype() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 batterytype = 2;</code>
       *
       * <pre>
       *电池类型: 铅酸电池:0x01, 镍氢电池:0x02, 磷酸铁锂电池:0x03, 锰酸锂电池:0x04,
       * </pre>
       */
      public int getBatterytype() {
        return batterytype_;
      }
      /**
       * <code>required int32 batterytype = 2;</code>
       *
       * <pre>
       *电池类型: 铅酸电池:0x01, 镍氢电池:0x02, 磷酸铁锂电池:0x03, 锰酸锂电池:0x04,
       * </pre>
       */
      public Builder setBatterytype(int value) {
        bitField0_ |= 0x00000002;
        batterytype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 batterytype = 2;</code>
       *
       * <pre>
       *电池类型: 铅酸电池:0x01, 镍氢电池:0x02, 磷酸铁锂电池:0x03, 锰酸锂电池:0x04,
       * </pre>
       */
      public Builder clearBatterytype() {
        bitField0_ = (bitField0_ & ~0x00000002);
        batterytype_ = 0;
        onChanged();
        return this;
      }

      // optional string manufacturer = 3;
      private java.lang.Object manufacturer_ = "";
      /**
       * <code>optional string manufacturer = 3;</code>
       *
       * <pre>
       *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
       *其他电池:-1
       * </pre>
       */
      public boolean hasManufacturer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string manufacturer = 3;</code>
       *
       * <pre>
       *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
       *其他电池:-1
       * </pre>
       */
      public java.lang.String getManufacturer() {
        java.lang.Object ref = manufacturer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          manufacturer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string manufacturer = 3;</code>
       *
       * <pre>
       *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
       *其他电池:-1
       * </pre>
       */
      public com.google.protobuf.ByteString
          getManufacturerBytes() {
        java.lang.Object ref = manufacturer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          manufacturer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string manufacturer = 3;</code>
       *
       * <pre>
       *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
       *其他电池:-1
       * </pre>
       */
      public Builder setManufacturer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        manufacturer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string manufacturer = 3;</code>
       *
       * <pre>
       *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
       *其他电池:-1
       * </pre>
       */
      public Builder clearManufacturer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        manufacturer_ = getDefaultInstance().getManufacturer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string manufacturer = 3;</code>
       *
       * <pre>
       *钴酸锂电池:0x05, 三元材料电池:0x06, 聚合物锂离子电池:0x07, 
       *其他电池:-1
       * </pre>
       */
      public Builder setManufacturerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        manufacturer_ = value;
        onChanged();
        return this;
      }

      // optional int64 manufacturDate = 4;
      private long manufacturDate_ ;
      /**
       * <code>optional int64 manufacturDate = 4;</code>
       *
       * <pre>
       *制造日期(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public boolean hasManufacturDate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 manufacturDate = 4;</code>
       *
       * <pre>
       *制造日期(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public long getManufacturDate() {
        return manufacturDate_;
      }
      /**
       * <code>optional int64 manufacturDate = 4;</code>
       *
       * <pre>
       *制造日期(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder setManufacturDate(long value) {
        bitField0_ |= 0x00000008;
        manufacturDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 manufacturDate = 4;</code>
       *
       * <pre>
       *制造日期(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder clearManufacturDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        manufacturDate_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 nominalcapacity = 5;
      private int nominalcapacity_ ;
      /**
       * <code>optional int32 nominalcapacity = 5;</code>
       *
       * <pre>
       *额定能量（单位：o.1度,千卡时）
       * </pre>
       */
      public boolean hasNominalcapacity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 nominalcapacity = 5;</code>
       *
       * <pre>
       *额定能量（单位：o.1度,千卡时）
       * </pre>
       */
      public int getNominalcapacity() {
        return nominalcapacity_;
      }
      /**
       * <code>optional int32 nominalcapacity = 5;</code>
       *
       * <pre>
       *额定能量（单位：o.1度,千卡时）
       * </pre>
       */
      public Builder setNominalcapacity(int value) {
        bitField0_ |= 0x00000010;
        nominalcapacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nominalcapacity = 5;</code>
       *
       * <pre>
       *额定能量（单位：o.1度,千卡时）
       * </pre>
       */
      public Builder clearNominalcapacity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nominalcapacity_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ratedvoltage = 6;
      private int ratedvoltage_ ;
      /**
       * <code>optional int32 ratedvoltage = 6;</code>
       *
       * <pre>
       *额定电压（单位：0.1V)
       * </pre>
       */
      public boolean hasRatedvoltage() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 ratedvoltage = 6;</code>
       *
       * <pre>
       *额定电压（单位：0.1V)
       * </pre>
       */
      public int getRatedvoltage() {
        return ratedvoltage_;
      }
      /**
       * <code>optional int32 ratedvoltage = 6;</code>
       *
       * <pre>
       *额定电压（单位：0.1V)
       * </pre>
       */
      public Builder setRatedvoltage(int value) {
        bitField0_ |= 0x00000020;
        ratedvoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ratedvoltage = 6;</code>
       *
       * <pre>
       *额定电压（单位：0.1V)
       * </pre>
       */
      public Builder clearRatedvoltage() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ratedvoltage_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.BatteryUnitInfo)
    }

    static {
      defaultInstance = new BatteryUnitInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.BatteryUnitInfo)
  }

  public interface BatteryUnitVoltageInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 unitsn = 1;
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    boolean hasUnitsn();
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    int getUnitsn();

    // repeated int32 batteryvoltage = 2;
    /**
     * <code>repeated int32 batteryvoltage = 2;</code>
     *
     * <pre>
     *单体蓄电池电压列表 
     * </pre>
     */
    java.util.List<java.lang.Integer> getBatteryvoltageList();
    /**
     * <code>repeated int32 batteryvoltage = 2;</code>
     *
     * <pre>
     *单体蓄电池电压列表 
     * </pre>
     */
    int getBatteryvoltageCount();
    /**
     * <code>repeated int32 batteryvoltage = 2;</code>
     *
     * <pre>
     *单体蓄电池电压列表 
     * </pre>
     */
    int getBatteryvoltage(int index);
  }
  /**
   * Protobuf type {@code gboss.BatteryUnitVoltageInfo}
   *
   * <pre>
   *************************************************************************************
   * 动力蓄电池每包电压信息
   ************************************************************************************
   * </pre>
   */
  public static final class BatteryUnitVoltageInfo extends
      com.google.protobuf.GeneratedMessage
      implements BatteryUnitVoltageInfoOrBuilder {
    // Use BatteryUnitVoltageInfo.newBuilder() to construct.
    private BatteryUnitVoltageInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BatteryUnitVoltageInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BatteryUnitVoltageInfo defaultInstance;
    public static BatteryUnitVoltageInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BatteryUnitVoltageInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BatteryUnitVoltageInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              unitsn_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                batteryvoltage_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              batteryvoltage_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                batteryvoltage_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                batteryvoltage_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          batteryvoltage_ = java.util.Collections.unmodifiableList(batteryvoltage_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitVoltageInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitVoltageInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BatteryUnitVoltageInfo> PARSER =
        new com.google.protobuf.AbstractParser<BatteryUnitVoltageInfo>() {
      public BatteryUnitVoltageInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatteryUnitVoltageInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BatteryUnitVoltageInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 unitsn = 1;
    public static final int UNITSN_FIELD_NUMBER = 1;
    private int unitsn_;
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    public boolean hasUnitsn() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    public int getUnitsn() {
      return unitsn_;
    }

    // repeated int32 batteryvoltage = 2;
    public static final int BATTERYVOLTAGE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> batteryvoltage_;
    /**
     * <code>repeated int32 batteryvoltage = 2;</code>
     *
     * <pre>
     *单体蓄电池电压列表 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBatteryvoltageList() {
      return batteryvoltage_;
    }
    /**
     * <code>repeated int32 batteryvoltage = 2;</code>
     *
     * <pre>
     *单体蓄电池电压列表 
     * </pre>
     */
    public int getBatteryvoltageCount() {
      return batteryvoltage_.size();
    }
    /**
     * <code>repeated int32 batteryvoltage = 2;</code>
     *
     * <pre>
     *单体蓄电池电压列表 
     * </pre>
     */
    public int getBatteryvoltage(int index) {
      return batteryvoltage_.get(index);
    }

    private void initFields() {
      unitsn_ = 0;
      batteryvoltage_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUnitsn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, unitsn_);
      }
      for (int i = 0; i < batteryvoltage_.size(); i++) {
        output.writeInt32(2, batteryvoltage_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, unitsn_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < batteryvoltage_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(batteryvoltage_.get(i));
        }
        size += dataSize;
        size += 1 * getBatteryvoltageList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.BatteryUnitVoltageInfo}
     *
     * <pre>
     *************************************************************************************
     * 动力蓄电池每包电压信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitVoltageInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitVoltageInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        unitsn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        batteryvoltage_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitVoltageInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitsn_ = unitsn_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          batteryvoltage_ = java.util.Collections.unmodifiableList(batteryvoltage_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.batteryvoltage_ = batteryvoltage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.getDefaultInstance()) return this;
        if (other.hasUnitsn()) {
          setUnitsn(other.getUnitsn());
        }
        if (!other.batteryvoltage_.isEmpty()) {
          if (batteryvoltage_.isEmpty()) {
            batteryvoltage_ = other.batteryvoltage_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBatteryvoltageIsMutable();
            batteryvoltage_.addAll(other.batteryvoltage_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUnitsn()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 unitsn = 1;
      private int unitsn_ ;
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public boolean hasUnitsn() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public int getUnitsn() {
        return unitsn_;
      }
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public Builder setUnitsn(int value) {
        bitField0_ |= 0x00000001;
        unitsn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public Builder clearUnitsn() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitsn_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 batteryvoltage = 2;
      private java.util.List<java.lang.Integer> batteryvoltage_ = java.util.Collections.emptyList();
      private void ensureBatteryvoltageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          batteryvoltage_ = new java.util.ArrayList<java.lang.Integer>(batteryvoltage_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 batteryvoltage = 2;</code>
       *
       * <pre>
       *单体蓄电池电压列表 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBatteryvoltageList() {
        return java.util.Collections.unmodifiableList(batteryvoltage_);
      }
      /**
       * <code>repeated int32 batteryvoltage = 2;</code>
       *
       * <pre>
       *单体蓄电池电压列表 
       * </pre>
       */
      public int getBatteryvoltageCount() {
        return batteryvoltage_.size();
      }
      /**
       * <code>repeated int32 batteryvoltage = 2;</code>
       *
       * <pre>
       *单体蓄电池电压列表 
       * </pre>
       */
      public int getBatteryvoltage(int index) {
        return batteryvoltage_.get(index);
      }
      /**
       * <code>repeated int32 batteryvoltage = 2;</code>
       *
       * <pre>
       *单体蓄电池电压列表 
       * </pre>
       */
      public Builder setBatteryvoltage(
          int index, int value) {
        ensureBatteryvoltageIsMutable();
        batteryvoltage_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 batteryvoltage = 2;</code>
       *
       * <pre>
       *单体蓄电池电压列表 
       * </pre>
       */
      public Builder addBatteryvoltage(int value) {
        ensureBatteryvoltageIsMutable();
        batteryvoltage_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 batteryvoltage = 2;</code>
       *
       * <pre>
       *单体蓄电池电压列表 
       * </pre>
       */
      public Builder addAllBatteryvoltage(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBatteryvoltageIsMutable();
        super.addAll(values, batteryvoltage_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 batteryvoltage = 2;</code>
       *
       * <pre>
       *单体蓄电池电压列表 
       * </pre>
       */
      public Builder clearBatteryvoltage() {
        batteryvoltage_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.BatteryUnitVoltageInfo)
    }

    static {
      defaultInstance = new BatteryUnitVoltageInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.BatteryUnitVoltageInfo)
  }

  public interface BatteryVoltageInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo> 
        getUnitvoltageList();
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo getUnitvoltage(int index);
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    int getUnitvoltageCount();
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder> 
        getUnitvoltageOrBuilderList();
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder getUnitvoltageOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gboss.BatteryVoltageInfo}
   *
   * <pre>
   *************************************************************************************
   * 动力蓄电池电压信息
   ************************************************************************************
   * </pre>
   */
  public static final class BatteryVoltageInfo extends
      com.google.protobuf.GeneratedMessage
      implements BatteryVoltageInfoOrBuilder {
    // Use BatteryVoltageInfo.newBuilder() to construct.
    private BatteryVoltageInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BatteryVoltageInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BatteryVoltageInfo defaultInstance;
    public static BatteryVoltageInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BatteryVoltageInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BatteryVoltageInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                unitvoltage_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              unitvoltage_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          unitvoltage_ = java.util.Collections.unmodifiableList(unitvoltage_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryVoltageInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryVoltageInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BatteryVoltageInfo> PARSER =
        new com.google.protobuf.AbstractParser<BatteryVoltageInfo>() {
      public BatteryVoltageInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatteryVoltageInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BatteryVoltageInfo> getParserForType() {
      return PARSER;
    }

    // repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;
    public static final int UNITVOLTAGE_FIELD_NUMBER = 1;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo> unitvoltage_;
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo> getUnitvoltageList() {
      return unitvoltage_;
    }
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder> 
        getUnitvoltageOrBuilderList() {
      return unitvoltage_;
    }
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    public int getUnitvoltageCount() {
      return unitvoltage_.size();
    }
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo getUnitvoltage(int index) {
      return unitvoltage_.get(index);
    }
    /**
     * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
     *
     * <pre>
     *每包蓄电池电压信息列表 
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder getUnitvoltageOrBuilder(
        int index) {
      return unitvoltage_.get(index);
    }

    private void initFields() {
      unitvoltage_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getUnitvoltageCount(); i++) {
        if (!getUnitvoltage(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < unitvoltage_.size(); i++) {
        output.writeMessage(1, unitvoltage_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < unitvoltage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, unitvoltage_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.BatteryVoltageInfo}
     *
     * <pre>
     *************************************************************************************
     * 动力蓄电池电压信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryVoltageInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryVoltageInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUnitvoltageFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (unitvoltageBuilder_ == null) {
          unitvoltage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          unitvoltageBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryVoltageInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo(this);
        int from_bitField0_ = bitField0_;
        if (unitvoltageBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            unitvoltage_ = java.util.Collections.unmodifiableList(unitvoltage_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.unitvoltage_ = unitvoltage_;
        } else {
          result.unitvoltage_ = unitvoltageBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.getDefaultInstance()) return this;
        if (unitvoltageBuilder_ == null) {
          if (!other.unitvoltage_.isEmpty()) {
            if (unitvoltage_.isEmpty()) {
              unitvoltage_ = other.unitvoltage_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureUnitvoltageIsMutable();
              unitvoltage_.addAll(other.unitvoltage_);
            }
            onChanged();
          }
        } else {
          if (!other.unitvoltage_.isEmpty()) {
            if (unitvoltageBuilder_.isEmpty()) {
              unitvoltageBuilder_.dispose();
              unitvoltageBuilder_ = null;
              unitvoltage_ = other.unitvoltage_;
              bitField0_ = (bitField0_ & ~0x00000001);
              unitvoltageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUnitvoltageFieldBuilder() : null;
            } else {
              unitvoltageBuilder_.addAllMessages(other.unitvoltage_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getUnitvoltageCount(); i++) {
          if (!getUnitvoltage(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo> unitvoltage_ =
        java.util.Collections.emptyList();
      private void ensureUnitvoltageIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          unitvoltage_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo>(unitvoltage_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder> unitvoltageBuilder_;

      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo> getUnitvoltageList() {
        if (unitvoltageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(unitvoltage_);
        } else {
          return unitvoltageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public int getUnitvoltageCount() {
        if (unitvoltageBuilder_ == null) {
          return unitvoltage_.size();
        } else {
          return unitvoltageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo getUnitvoltage(int index) {
        if (unitvoltageBuilder_ == null) {
          return unitvoltage_.get(index);
        } else {
          return unitvoltageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public Builder setUnitvoltage(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo value) {
        if (unitvoltageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitvoltageIsMutable();
          unitvoltage_.set(index, value);
          onChanged();
        } else {
          unitvoltageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public Builder setUnitvoltage(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder builderForValue) {
        if (unitvoltageBuilder_ == null) {
          ensureUnitvoltageIsMutable();
          unitvoltage_.set(index, builderForValue.build());
          onChanged();
        } else {
          unitvoltageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public Builder addUnitvoltage(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo value) {
        if (unitvoltageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitvoltageIsMutable();
          unitvoltage_.add(value);
          onChanged();
        } else {
          unitvoltageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public Builder addUnitvoltage(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo value) {
        if (unitvoltageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitvoltageIsMutable();
          unitvoltage_.add(index, value);
          onChanged();
        } else {
          unitvoltageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public Builder addUnitvoltage(
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder builderForValue) {
        if (unitvoltageBuilder_ == null) {
          ensureUnitvoltageIsMutable();
          unitvoltage_.add(builderForValue.build());
          onChanged();
        } else {
          unitvoltageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public Builder addUnitvoltage(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder builderForValue) {
        if (unitvoltageBuilder_ == null) {
          ensureUnitvoltageIsMutable();
          unitvoltage_.add(index, builderForValue.build());
          onChanged();
        } else {
          unitvoltageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public Builder addAllUnitvoltage(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo> values) {
        if (unitvoltageBuilder_ == null) {
          ensureUnitvoltageIsMutable();
          super.addAll(values, unitvoltage_);
          onChanged();
        } else {
          unitvoltageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public Builder clearUnitvoltage() {
        if (unitvoltageBuilder_ == null) {
          unitvoltage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          unitvoltageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public Builder removeUnitvoltage(int index) {
        if (unitvoltageBuilder_ == null) {
          ensureUnitvoltageIsMutable();
          unitvoltage_.remove(index);
          onChanged();
        } else {
          unitvoltageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder getUnitvoltageBuilder(
          int index) {
        return getUnitvoltageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder getUnitvoltageOrBuilder(
          int index) {
        if (unitvoltageBuilder_ == null) {
          return unitvoltage_.get(index);  } else {
          return unitvoltageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder> 
           getUnitvoltageOrBuilderList() {
        if (unitvoltageBuilder_ != null) {
          return unitvoltageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(unitvoltage_);
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder addUnitvoltageBuilder() {
        return getUnitvoltageFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder addUnitvoltageBuilder(
          int index) {
        return getUnitvoltageFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.BatteryUnitVoltageInfo unitvoltage = 1;</code>
       *
       * <pre>
       *每包蓄电池电压信息列表 
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder> 
           getUnitvoltageBuilderList() {
        return getUnitvoltageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder> 
          getUnitvoltageFieldBuilder() {
        if (unitvoltageBuilder_ == null) {
          unitvoltageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitVoltageInfoOrBuilder>(
                  unitvoltage_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          unitvoltage_ = null;
        }
        return unitvoltageBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.BatteryVoltageInfo)
    }

    static {
      defaultInstance = new BatteryVoltageInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.BatteryVoltageInfo)
  }

  public interface BatteryUnitTemperatureInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 unitsn = 1;
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    boolean hasUnitsn();
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    int getUnitsn();

    // repeated int32 temperature = 2;
    /**
     * <code>repeated int32 temperature = 2;</code>
     *
     * <pre>
     *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
     * </pre>
     */
    java.util.List<java.lang.Integer> getTemperatureList();
    /**
     * <code>repeated int32 temperature = 2;</code>
     *
     * <pre>
     *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
     * </pre>
     */
    int getTemperatureCount();
    /**
     * <code>repeated int32 temperature = 2;</code>
     *
     * <pre>
     *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
     * </pre>
     */
    int getTemperature(int index);
  }
  /**
   * Protobuf type {@code gboss.BatteryUnitTemperatureInfo}
   *
   * <pre>
   *************************************************************************************
   * 动力蓄电池每包温度信息
   ************************************************************************************
   * </pre>
   */
  public static final class BatteryUnitTemperatureInfo extends
      com.google.protobuf.GeneratedMessage
      implements BatteryUnitTemperatureInfoOrBuilder {
    // Use BatteryUnitTemperatureInfo.newBuilder() to construct.
    private BatteryUnitTemperatureInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BatteryUnitTemperatureInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BatteryUnitTemperatureInfo defaultInstance;
    public static BatteryUnitTemperatureInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BatteryUnitTemperatureInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BatteryUnitTemperatureInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              unitsn_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                temperature_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              temperature_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                temperature_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                temperature_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          temperature_ = java.util.Collections.unmodifiableList(temperature_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitTemperatureInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitTemperatureInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BatteryUnitTemperatureInfo> PARSER =
        new com.google.protobuf.AbstractParser<BatteryUnitTemperatureInfo>() {
      public BatteryUnitTemperatureInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatteryUnitTemperatureInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BatteryUnitTemperatureInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 unitsn = 1;
    public static final int UNITSN_FIELD_NUMBER = 1;
    private int unitsn_;
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    public boolean hasUnitsn() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 unitsn = 1;</code>
     *
     * <pre>
     *包序号
     * </pre>
     */
    public int getUnitsn() {
      return unitsn_;
    }

    // repeated int32 temperature = 2;
    public static final int TEMPERATURE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> temperature_;
    /**
     * <code>repeated int32 temperature = 2;</code>
     *
     * <pre>
     *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTemperatureList() {
      return temperature_;
    }
    /**
     * <code>repeated int32 temperature = 2;</code>
     *
     * <pre>
     *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
     * </pre>
     */
    public int getTemperatureCount() {
      return temperature_.size();
    }
    /**
     * <code>repeated int32 temperature = 2;</code>
     *
     * <pre>
     *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
     * </pre>
     */
    public int getTemperature(int index) {
      return temperature_.get(index);
    }

    private void initFields() {
      unitsn_ = 0;
      temperature_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUnitsn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, unitsn_);
      }
      for (int i = 0; i < temperature_.size(); i++) {
        output.writeInt32(2, temperature_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, unitsn_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < temperature_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(temperature_.get(i));
        }
        size += dataSize;
        size += 1 * getTemperatureList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.BatteryUnitTemperatureInfo}
     *
     * <pre>
     *************************************************************************************
     * 动力蓄电池每包温度信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitTemperatureInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitTemperatureInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        unitsn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        temperature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryUnitTemperatureInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitsn_ = unitsn_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          temperature_ = java.util.Collections.unmodifiableList(temperature_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.temperature_ = temperature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.getDefaultInstance()) return this;
        if (other.hasUnitsn()) {
          setUnitsn(other.getUnitsn());
        }
        if (!other.temperature_.isEmpty()) {
          if (temperature_.isEmpty()) {
            temperature_ = other.temperature_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTemperatureIsMutable();
            temperature_.addAll(other.temperature_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUnitsn()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 unitsn = 1;
      private int unitsn_ ;
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public boolean hasUnitsn() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public int getUnitsn() {
        return unitsn_;
      }
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public Builder setUnitsn(int value) {
        bitField0_ |= 0x00000001;
        unitsn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unitsn = 1;</code>
       *
       * <pre>
       *包序号
       * </pre>
       */
      public Builder clearUnitsn() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitsn_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 temperature = 2;
      private java.util.List<java.lang.Integer> temperature_ = java.util.Collections.emptyList();
      private void ensureTemperatureIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          temperature_ = new java.util.ArrayList<java.lang.Integer>(temperature_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 temperature = 2;</code>
       *
       * <pre>
       *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTemperatureList() {
        return java.util.Collections.unmodifiableList(temperature_);
      }
      /**
       * <code>repeated int32 temperature = 2;</code>
       *
       * <pre>
       *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
       * </pre>
       */
      public int getTemperatureCount() {
        return temperature_.size();
      }
      /**
       * <code>repeated int32 temperature = 2;</code>
       *
       * <pre>
       *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
       * </pre>
       */
      public int getTemperature(int index) {
        return temperature_.get(index);
      }
      /**
       * <code>repeated int32 temperature = 2;</code>
       *
       * <pre>
       *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder setTemperature(
          int index, int value) {
        ensureTemperatureIsMutable();
        temperature_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 temperature = 2;</code>
       *
       * <pre>
       *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder addTemperature(int value) {
        ensureTemperatureIsMutable();
        temperature_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 temperature = 2;</code>
       *
       * <pre>
       *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder addAllTemperature(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTemperatureIsMutable();
        super.addAll(values, temperature_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 temperature = 2;</code>
       *
       * <pre>
       *每包温度探针的温度列表（探针数不一定等于单体电池数）（单位：十分之一摄氏度） 
       * </pre>
       */
      public Builder clearTemperature() {
        temperature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.BatteryUnitTemperatureInfo)
    }

    static {
      defaultInstance = new BatteryUnitTemperatureInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.BatteryUnitTemperatureInfo)
  }

  public interface BatteryTemperatureInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo> 
        getUnittemperatureList();
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo getUnittemperature(int index);
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    int getUnittemperatureCount();
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder> 
        getUnittemperatureOrBuilderList();
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder getUnittemperatureOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gboss.BatteryTemperatureInfo}
   *
   * <pre>
   *************************************************************************************
   * 动力蓄电池温度信息
   ************************************************************************************
   * </pre>
   */
  public static final class BatteryTemperatureInfo extends
      com.google.protobuf.GeneratedMessage
      implements BatteryTemperatureInfoOrBuilder {
    // Use BatteryTemperatureInfo.newBuilder() to construct.
    private BatteryTemperatureInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BatteryTemperatureInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BatteryTemperatureInfo defaultInstance;
    public static BatteryTemperatureInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BatteryTemperatureInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BatteryTemperatureInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                unittemperature_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              unittemperature_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          unittemperature_ = java.util.Collections.unmodifiableList(unittemperature_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryTemperatureInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryTemperatureInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BatteryTemperatureInfo> PARSER =
        new com.google.protobuf.AbstractParser<BatteryTemperatureInfo>() {
      public BatteryTemperatureInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatteryTemperatureInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BatteryTemperatureInfo> getParserForType() {
      return PARSER;
    }

    // repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;
    public static final int UNITTEMPERATURE_FIELD_NUMBER = 1;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo> unittemperature_;
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo> getUnittemperatureList() {
      return unittemperature_;
    }
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder> 
        getUnittemperatureOrBuilderList() {
      return unittemperature_;
    }
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    public int getUnittemperatureCount() {
      return unittemperature_.size();
    }
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo getUnittemperature(int index) {
      return unittemperature_.get(index);
    }
    /**
     * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
     *
     * <pre>
     *每包蓄电池温度信息列表 
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder getUnittemperatureOrBuilder(
        int index) {
      return unittemperature_.get(index);
    }

    private void initFields() {
      unittemperature_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getUnittemperatureCount(); i++) {
        if (!getUnittemperature(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < unittemperature_.size(); i++) {
        output.writeMessage(1, unittemperature_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < unittemperature_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, unittemperature_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.BatteryTemperatureInfo}
     *
     * <pre>
     *************************************************************************************
     * 动力蓄电池温度信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryTemperatureInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryTemperatureInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUnittemperatureFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (unittemperatureBuilder_ == null) {
          unittemperature_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          unittemperatureBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryTemperatureInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo(this);
        int from_bitField0_ = bitField0_;
        if (unittemperatureBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            unittemperature_ = java.util.Collections.unmodifiableList(unittemperature_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.unittemperature_ = unittemperature_;
        } else {
          result.unittemperature_ = unittemperatureBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.getDefaultInstance()) return this;
        if (unittemperatureBuilder_ == null) {
          if (!other.unittemperature_.isEmpty()) {
            if (unittemperature_.isEmpty()) {
              unittemperature_ = other.unittemperature_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureUnittemperatureIsMutable();
              unittemperature_.addAll(other.unittemperature_);
            }
            onChanged();
          }
        } else {
          if (!other.unittemperature_.isEmpty()) {
            if (unittemperatureBuilder_.isEmpty()) {
              unittemperatureBuilder_.dispose();
              unittemperatureBuilder_ = null;
              unittemperature_ = other.unittemperature_;
              bitField0_ = (bitField0_ & ~0x00000001);
              unittemperatureBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUnittemperatureFieldBuilder() : null;
            } else {
              unittemperatureBuilder_.addAllMessages(other.unittemperature_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getUnittemperatureCount(); i++) {
          if (!getUnittemperature(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo> unittemperature_ =
        java.util.Collections.emptyList();
      private void ensureUnittemperatureIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          unittemperature_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo>(unittemperature_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder> unittemperatureBuilder_;

      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo> getUnittemperatureList() {
        if (unittemperatureBuilder_ == null) {
          return java.util.Collections.unmodifiableList(unittemperature_);
        } else {
          return unittemperatureBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public int getUnittemperatureCount() {
        if (unittemperatureBuilder_ == null) {
          return unittemperature_.size();
        } else {
          return unittemperatureBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo getUnittemperature(int index) {
        if (unittemperatureBuilder_ == null) {
          return unittemperature_.get(index);
        } else {
          return unittemperatureBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public Builder setUnittemperature(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo value) {
        if (unittemperatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnittemperatureIsMutable();
          unittemperature_.set(index, value);
          onChanged();
        } else {
          unittemperatureBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public Builder setUnittemperature(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder builderForValue) {
        if (unittemperatureBuilder_ == null) {
          ensureUnittemperatureIsMutable();
          unittemperature_.set(index, builderForValue.build());
          onChanged();
        } else {
          unittemperatureBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public Builder addUnittemperature(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo value) {
        if (unittemperatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnittemperatureIsMutable();
          unittemperature_.add(value);
          onChanged();
        } else {
          unittemperatureBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public Builder addUnittemperature(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo value) {
        if (unittemperatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnittemperatureIsMutable();
          unittemperature_.add(index, value);
          onChanged();
        } else {
          unittemperatureBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public Builder addUnittemperature(
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder builderForValue) {
        if (unittemperatureBuilder_ == null) {
          ensureUnittemperatureIsMutable();
          unittemperature_.add(builderForValue.build());
          onChanged();
        } else {
          unittemperatureBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public Builder addUnittemperature(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder builderForValue) {
        if (unittemperatureBuilder_ == null) {
          ensureUnittemperatureIsMutable();
          unittemperature_.add(index, builderForValue.build());
          onChanged();
        } else {
          unittemperatureBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public Builder addAllUnittemperature(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo> values) {
        if (unittemperatureBuilder_ == null) {
          ensureUnittemperatureIsMutable();
          super.addAll(values, unittemperature_);
          onChanged();
        } else {
          unittemperatureBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public Builder clearUnittemperature() {
        if (unittemperatureBuilder_ == null) {
          unittemperature_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          unittemperatureBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public Builder removeUnittemperature(int index) {
        if (unittemperatureBuilder_ == null) {
          ensureUnittemperatureIsMutable();
          unittemperature_.remove(index);
          onChanged();
        } else {
          unittemperatureBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder getUnittemperatureBuilder(
          int index) {
        return getUnittemperatureFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder getUnittemperatureOrBuilder(
          int index) {
        if (unittemperatureBuilder_ == null) {
          return unittemperature_.get(index);  } else {
          return unittemperatureBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder> 
           getUnittemperatureOrBuilderList() {
        if (unittemperatureBuilder_ != null) {
          return unittemperatureBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(unittemperature_);
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder addUnittemperatureBuilder() {
        return getUnittemperatureFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder addUnittemperatureBuilder(
          int index) {
        return getUnittemperatureFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.BatteryUnitTemperatureInfo unittemperature = 1;</code>
       *
       * <pre>
       *每包蓄电池温度信息列表 
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder> 
           getUnittemperatureBuilderList() {
        return getUnittemperatureFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder> 
          getUnittemperatureFieldBuilder() {
        if (unittemperatureBuilder_ == null) {
          unittemperatureBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitTemperatureInfoOrBuilder>(
                  unittemperature_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          unittemperature_ = null;
        }
        return unittemperatureBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.BatteryTemperatureInfo)
    }

    static {
      defaultInstance = new BatteryTemperatureInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.BatteryTemperatureInfo)
  }

  public interface VehicleRegisterInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 registerTime = 1;
    /**
     * <code>required int64 registerTime = 1;</code>
     *
     * <pre>
     *注册时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    boolean hasRegisterTime();
    /**
     * <code>required int64 registerTime = 1;</code>
     *
     * <pre>
     *注册时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    long getRegisterTime();

    // required string callLetter = 2;
    /**
     * <code>required string callLetter = 2;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 2;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 2;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // optional string plateno = 3;
    /**
     * <code>optional string plateno = 3;</code>
     *
     * <pre>
     *车牌号
     * </pre>
     */
    boolean hasPlateno();
    /**
     * <code>optional string plateno = 3;</code>
     *
     * <pre>
     *车牌号
     * </pre>
     */
    java.lang.String getPlateno();
    /**
     * <code>optional string plateno = 3;</code>
     *
     * <pre>
     *车牌号
     * </pre>
     */
    com.google.protobuf.ByteString
        getPlatenoBytes();

    // optional string unitno = 4;
    /**
     * <code>optional string unitno = 4;</code>
     *
     * <pre>
     *车载终端编号
     * </pre>
     */
    boolean hasUnitno();
    /**
     * <code>optional string unitno = 4;</code>
     *
     * <pre>
     *车载终端编号
     * </pre>
     */
    java.lang.String getUnitno();
    /**
     * <code>optional string unitno = 4;</code>
     *
     * <pre>
     *车载终端编号
     * </pre>
     */
    com.google.protobuf.ByteString
        getUnitnoBytes();

    // optional string vin = 5;
    /**
     * <code>optional string vin = 5;</code>
     *
     * <pre>
     *车架号
     * </pre>
     */
    boolean hasVin();
    /**
     * <code>optional string vin = 5;</code>
     *
     * <pre>
     *车架号
     * </pre>
     */
    java.lang.String getVin();
    /**
     * <code>optional string vin = 5;</code>
     *
     * <pre>
     *车架号
     * </pre>
     */
    com.google.protobuf.ByteString
        getVinBytes();

    // optional string engineno = 6;
    /**
     * <code>optional string engineno = 6;</code>
     *
     * <pre>
     *发动机号
     * </pre>
     */
    boolean hasEngineno();
    /**
     * <code>optional string engineno = 6;</code>
     *
     * <pre>
     *发动机号
     * </pre>
     */
    java.lang.String getEngineno();
    /**
     * <code>optional string engineno = 6;</code>
     *
     * <pre>
     *发动机号
     * </pre>
     */
    com.google.protobuf.ByteString
        getEnginenoBytes();

    // repeated .gboss.BatteryUnitInfo battery = 7;
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo> 
        getBatteryList();
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo getBattery(int index);
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    int getBatteryCount();
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder> 
        getBatteryOrBuilderList();
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder getBatteryOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gboss.VehicleRegisterInfo}
   *
   * <pre>
   *************************************************************************************
   * 车辆注册信息
   ************************************************************************************
   * </pre>
   */
  public static final class VehicleRegisterInfo extends
      com.google.protobuf.GeneratedMessage
      implements VehicleRegisterInfoOrBuilder {
    // Use VehicleRegisterInfo.newBuilder() to construct.
    private VehicleRegisterInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VehicleRegisterInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VehicleRegisterInfo defaultInstance;
    public static VehicleRegisterInfo getDefaultInstance() {
      return defaultInstance;
    }

    public VehicleRegisterInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VehicleRegisterInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              registerTime_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              callLetter_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              plateno_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              unitno_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              vin_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              engineno_ = input.readBytes();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                battery_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo>();
                mutable_bitField0_ |= 0x00000040;
              }
              battery_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          battery_ = java.util.Collections.unmodifiableList(battery_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VehicleRegisterInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VehicleRegisterInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<VehicleRegisterInfo> PARSER =
        new com.google.protobuf.AbstractParser<VehicleRegisterInfo>() {
      public VehicleRegisterInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VehicleRegisterInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VehicleRegisterInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 registerTime = 1;
    public static final int REGISTERTIME_FIELD_NUMBER = 1;
    private long registerTime_;
    /**
     * <code>required int64 registerTime = 1;</code>
     *
     * <pre>
     *注册时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public boolean hasRegisterTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 registerTime = 1;</code>
     *
     * <pre>
     *注册时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public long getRegisterTime() {
      return registerTime_;
    }

    // required string callLetter = 2;
    public static final int CALLLETTER_FIELD_NUMBER = 2;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 2;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string callLetter = 2;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 2;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string plateno = 3;
    public static final int PLATENO_FIELD_NUMBER = 3;
    private java.lang.Object plateno_;
    /**
     * <code>optional string plateno = 3;</code>
     *
     * <pre>
     *车牌号
     * </pre>
     */
    public boolean hasPlateno() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string plateno = 3;</code>
     *
     * <pre>
     *车牌号
     * </pre>
     */
    public java.lang.String getPlateno() {
      java.lang.Object ref = plateno_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          plateno_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string plateno = 3;</code>
     *
     * <pre>
     *车牌号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPlatenoBytes() {
      java.lang.Object ref = plateno_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plateno_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string unitno = 4;
    public static final int UNITNO_FIELD_NUMBER = 4;
    private java.lang.Object unitno_;
    /**
     * <code>optional string unitno = 4;</code>
     *
     * <pre>
     *车载终端编号
     * </pre>
     */
    public boolean hasUnitno() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string unitno = 4;</code>
     *
     * <pre>
     *车载终端编号
     * </pre>
     */
    public java.lang.String getUnitno() {
      java.lang.Object ref = unitno_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          unitno_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string unitno = 4;</code>
     *
     * <pre>
     *车载终端编号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUnitnoBytes() {
      java.lang.Object ref = unitno_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        unitno_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string vin = 5;
    public static final int VIN_FIELD_NUMBER = 5;
    private java.lang.Object vin_;
    /**
     * <code>optional string vin = 5;</code>
     *
     * <pre>
     *车架号
     * </pre>
     */
    public boolean hasVin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string vin = 5;</code>
     *
     * <pre>
     *车架号
     * </pre>
     */
    public java.lang.String getVin() {
      java.lang.Object ref = vin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vin_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string vin = 5;</code>
     *
     * <pre>
     *车架号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVinBytes() {
      java.lang.Object ref = vin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string engineno = 6;
    public static final int ENGINENO_FIELD_NUMBER = 6;
    private java.lang.Object engineno_;
    /**
     * <code>optional string engineno = 6;</code>
     *
     * <pre>
     *发动机号
     * </pre>
     */
    public boolean hasEngineno() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string engineno = 6;</code>
     *
     * <pre>
     *发动机号
     * </pre>
     */
    public java.lang.String getEngineno() {
      java.lang.Object ref = engineno_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          engineno_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string engineno = 6;</code>
     *
     * <pre>
     *发动机号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEnginenoBytes() {
      java.lang.Object ref = engineno_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        engineno_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .gboss.BatteryUnitInfo battery = 7;
    public static final int BATTERY_FIELD_NUMBER = 7;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo> battery_;
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo> getBatteryList() {
      return battery_;
    }
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder> 
        getBatteryOrBuilderList() {
      return battery_;
    }
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    public int getBatteryCount() {
      return battery_.size();
    }
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo getBattery(int index) {
      return battery_.get(index);
    }
    /**
     * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
     *
     * <pre>
     *电池列表 
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder getBatteryOrBuilder(
        int index) {
      return battery_.get(index);
    }

    private void initFields() {
      registerTime_ = 0L;
      callLetter_ = "";
      plateno_ = "";
      unitno_ = "";
      vin_ = "";
      engineno_ = "";
      battery_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRegisterTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBatteryCount(); i++) {
        if (!getBattery(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, registerTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPlatenoBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getUnitnoBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getVinBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getEnginenoBytes());
      }
      for (int i = 0; i < battery_.size(); i++) {
        output.writeMessage(7, battery_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, registerTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPlatenoBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getUnitnoBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getVinBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getEnginenoBytes());
      }
      for (int i = 0; i < battery_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, battery_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.VehicleRegisterInfo}
     *
     * <pre>
     *************************************************************************************
     * 车辆注册信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VehicleRegisterInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VehicleRegisterInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBatteryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        registerTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        plateno_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        unitno_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        vin_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        engineno_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (batteryBuilder_ == null) {
          battery_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          batteryBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VehicleRegisterInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.registerTime_ = registerTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.plateno_ = plateno_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.unitno_ = unitno_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.vin_ = vin_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.engineno_ = engineno_;
        if (batteryBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            battery_ = java.util.Collections.unmodifiableList(battery_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.battery_ = battery_;
        } else {
          result.battery_ = batteryBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo.getDefaultInstance()) return this;
        if (other.hasRegisterTime()) {
          setRegisterTime(other.getRegisterTime());
        }
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000002;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasPlateno()) {
          bitField0_ |= 0x00000004;
          plateno_ = other.plateno_;
          onChanged();
        }
        if (other.hasUnitno()) {
          bitField0_ |= 0x00000008;
          unitno_ = other.unitno_;
          onChanged();
        }
        if (other.hasVin()) {
          bitField0_ |= 0x00000010;
          vin_ = other.vin_;
          onChanged();
        }
        if (other.hasEngineno()) {
          bitField0_ |= 0x00000020;
          engineno_ = other.engineno_;
          onChanged();
        }
        if (batteryBuilder_ == null) {
          if (!other.battery_.isEmpty()) {
            if (battery_.isEmpty()) {
              battery_ = other.battery_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureBatteryIsMutable();
              battery_.addAll(other.battery_);
            }
            onChanged();
          }
        } else {
          if (!other.battery_.isEmpty()) {
            if (batteryBuilder_.isEmpty()) {
              batteryBuilder_.dispose();
              batteryBuilder_ = null;
              battery_ = other.battery_;
              bitField0_ = (bitField0_ & ~0x00000040);
              batteryBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBatteryFieldBuilder() : null;
            } else {
              batteryBuilder_.addAllMessages(other.battery_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRegisterTime()) {
          
          return false;
        }
        if (!hasCallLetter()) {
          
          return false;
        }
        for (int i = 0; i < getBatteryCount(); i++) {
          if (!getBattery(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.VehicleRegisterInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 registerTime = 1;
      private long registerTime_ ;
      /**
       * <code>required int64 registerTime = 1;</code>
       *
       * <pre>
       *注册时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public boolean hasRegisterTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 registerTime = 1;</code>
       *
       * <pre>
       *注册时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public long getRegisterTime() {
        return registerTime_;
      }
      /**
       * <code>required int64 registerTime = 1;</code>
       *
       * <pre>
       *注册时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder setRegisterTime(long value) {
        bitField0_ |= 0x00000001;
        registerTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 registerTime = 1;</code>
       *
       * <pre>
       *注册时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder clearRegisterTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        registerTime_ = 0L;
        onChanged();
        return this;
      }

      // required string callLetter = 2;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 2;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string callLetter = 2;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 2;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 2;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 2;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000002);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 2;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // optional string plateno = 3;
      private java.lang.Object plateno_ = "";
      /**
       * <code>optional string plateno = 3;</code>
       *
       * <pre>
       *车牌号
       * </pre>
       */
      public boolean hasPlateno() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string plateno = 3;</code>
       *
       * <pre>
       *车牌号
       * </pre>
       */
      public java.lang.String getPlateno() {
        java.lang.Object ref = plateno_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          plateno_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string plateno = 3;</code>
       *
       * <pre>
       *车牌号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPlatenoBytes() {
        java.lang.Object ref = plateno_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plateno_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string plateno = 3;</code>
       *
       * <pre>
       *车牌号
       * </pre>
       */
      public Builder setPlateno(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        plateno_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string plateno = 3;</code>
       *
       * <pre>
       *车牌号
       * </pre>
       */
      public Builder clearPlateno() {
        bitField0_ = (bitField0_ & ~0x00000004);
        plateno_ = getDefaultInstance().getPlateno();
        onChanged();
        return this;
      }
      /**
       * <code>optional string plateno = 3;</code>
       *
       * <pre>
       *车牌号
       * </pre>
       */
      public Builder setPlatenoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        plateno_ = value;
        onChanged();
        return this;
      }

      // optional string unitno = 4;
      private java.lang.Object unitno_ = "";
      /**
       * <code>optional string unitno = 4;</code>
       *
       * <pre>
       *车载终端编号
       * </pre>
       */
      public boolean hasUnitno() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string unitno = 4;</code>
       *
       * <pre>
       *车载终端编号
       * </pre>
       */
      public java.lang.String getUnitno() {
        java.lang.Object ref = unitno_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          unitno_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string unitno = 4;</code>
       *
       * <pre>
       *车载终端编号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUnitnoBytes() {
        java.lang.Object ref = unitno_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          unitno_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string unitno = 4;</code>
       *
       * <pre>
       *车载终端编号
       * </pre>
       */
      public Builder setUnitno(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        unitno_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string unitno = 4;</code>
       *
       * <pre>
       *车载终端编号
       * </pre>
       */
      public Builder clearUnitno() {
        bitField0_ = (bitField0_ & ~0x00000008);
        unitno_ = getDefaultInstance().getUnitno();
        onChanged();
        return this;
      }
      /**
       * <code>optional string unitno = 4;</code>
       *
       * <pre>
       *车载终端编号
       * </pre>
       */
      public Builder setUnitnoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        unitno_ = value;
        onChanged();
        return this;
      }

      // optional string vin = 5;
      private java.lang.Object vin_ = "";
      /**
       * <code>optional string vin = 5;</code>
       *
       * <pre>
       *车架号
       * </pre>
       */
      public boolean hasVin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string vin = 5;</code>
       *
       * <pre>
       *车架号
       * </pre>
       */
      public java.lang.String getVin() {
        java.lang.Object ref = vin_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          vin_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string vin = 5;</code>
       *
       * <pre>
       *车架号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVinBytes() {
        java.lang.Object ref = vin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string vin = 5;</code>
       *
       * <pre>
       *车架号
       * </pre>
       */
      public Builder setVin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        vin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string vin = 5;</code>
       *
       * <pre>
       *车架号
       * </pre>
       */
      public Builder clearVin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        vin_ = getDefaultInstance().getVin();
        onChanged();
        return this;
      }
      /**
       * <code>optional string vin = 5;</code>
       *
       * <pre>
       *车架号
       * </pre>
       */
      public Builder setVinBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        vin_ = value;
        onChanged();
        return this;
      }

      // optional string engineno = 6;
      private java.lang.Object engineno_ = "";
      /**
       * <code>optional string engineno = 6;</code>
       *
       * <pre>
       *发动机号
       * </pre>
       */
      public boolean hasEngineno() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string engineno = 6;</code>
       *
       * <pre>
       *发动机号
       * </pre>
       */
      public java.lang.String getEngineno() {
        java.lang.Object ref = engineno_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          engineno_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string engineno = 6;</code>
       *
       * <pre>
       *发动机号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEnginenoBytes() {
        java.lang.Object ref = engineno_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          engineno_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string engineno = 6;</code>
       *
       * <pre>
       *发动机号
       * </pre>
       */
      public Builder setEngineno(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        engineno_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string engineno = 6;</code>
       *
       * <pre>
       *发动机号
       * </pre>
       */
      public Builder clearEngineno() {
        bitField0_ = (bitField0_ & ~0x00000020);
        engineno_ = getDefaultInstance().getEngineno();
        onChanged();
        return this;
      }
      /**
       * <code>optional string engineno = 6;</code>
       *
       * <pre>
       *发动机号
       * </pre>
       */
      public Builder setEnginenoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        engineno_ = value;
        onChanged();
        return this;
      }

      // repeated .gboss.BatteryUnitInfo battery = 7;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo> battery_ =
        java.util.Collections.emptyList();
      private void ensureBatteryIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          battery_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo>(battery_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder> batteryBuilder_;

      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo> getBatteryList() {
        if (batteryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(battery_);
        } else {
          return batteryBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public int getBatteryCount() {
        if (batteryBuilder_ == null) {
          return battery_.size();
        } else {
          return batteryBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo getBattery(int index) {
        if (batteryBuilder_ == null) {
          return battery_.get(index);
        } else {
          return batteryBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public Builder setBattery(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo value) {
        if (batteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatteryIsMutable();
          battery_.set(index, value);
          onChanged();
        } else {
          batteryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public Builder setBattery(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder builderForValue) {
        if (batteryBuilder_ == null) {
          ensureBatteryIsMutable();
          battery_.set(index, builderForValue.build());
          onChanged();
        } else {
          batteryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public Builder addBattery(cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo value) {
        if (batteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatteryIsMutable();
          battery_.add(value);
          onChanged();
        } else {
          batteryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public Builder addBattery(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo value) {
        if (batteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatteryIsMutable();
          battery_.add(index, value);
          onChanged();
        } else {
          batteryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public Builder addBattery(
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder builderForValue) {
        if (batteryBuilder_ == null) {
          ensureBatteryIsMutable();
          battery_.add(builderForValue.build());
          onChanged();
        } else {
          batteryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public Builder addBattery(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder builderForValue) {
        if (batteryBuilder_ == null) {
          ensureBatteryIsMutable();
          battery_.add(index, builderForValue.build());
          onChanged();
        } else {
          batteryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public Builder addAllBattery(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo> values) {
        if (batteryBuilder_ == null) {
          ensureBatteryIsMutable();
          super.addAll(values, battery_);
          onChanged();
        } else {
          batteryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public Builder clearBattery() {
        if (batteryBuilder_ == null) {
          battery_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          batteryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public Builder removeBattery(int index) {
        if (batteryBuilder_ == null) {
          ensureBatteryIsMutable();
          battery_.remove(index);
          onChanged();
        } else {
          batteryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder getBatteryBuilder(
          int index) {
        return getBatteryFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder getBatteryOrBuilder(
          int index) {
        if (batteryBuilder_ == null) {
          return battery_.get(index);  } else {
          return batteryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder> 
           getBatteryOrBuilderList() {
        if (batteryBuilder_ != null) {
          return batteryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(battery_);
        }
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder addBatteryBuilder() {
        return getBatteryFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder addBatteryBuilder(
          int index) {
        return getBatteryFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.BatteryUnitInfo battery = 7;</code>
       *
       * <pre>
       *电池列表 
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder> 
           getBatteryBuilderList() {
        return getBatteryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder> 
          getBatteryFieldBuilder() {
        if (batteryBuilder_ == null) {
          batteryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryUnitInfoOrBuilder>(
                  battery_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          battery_ = null;
        }
        return batteryBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.VehicleRegisterInfo)
    }

    static {
      defaultInstance = new VehicleRegisterInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.VehicleRegisterInfo)
  }

  public interface BatteryExtremumInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 maxvoltage = 1;
    /**
     * <code>optional int32 maxvoltage = 1;</code>
     *
     * <pre>
     *电池单体电压最高值（单位：0.001V)
     * </pre>
     */
    boolean hasMaxvoltage();
    /**
     * <code>optional int32 maxvoltage = 1;</code>
     *
     * <pre>
     *电池单体电压最高值（单位：0.001V)
     * </pre>
     */
    int getMaxvoltage();

    // optional int32 maxvoltageunitsn = 2;
    /**
     * <code>optional int32 maxvoltageunitsn = 2;</code>
     *
     * <pre>
     *最高电压的电池单体所在包序号
     * </pre>
     */
    boolean hasMaxvoltageunitsn();
    /**
     * <code>optional int32 maxvoltageunitsn = 2;</code>
     *
     * <pre>
     *最高电压的电池单体所在包序号
     * </pre>
     */
    int getMaxvoltageunitsn();

    // optional int32 maxvoltagebodysn = 3;
    /**
     * <code>optional int32 maxvoltagebodysn = 3;</code>
     *
     * <pre>
     *最高电压的电池单体在包中序号
     * </pre>
     */
    boolean hasMaxvoltagebodysn();
    /**
     * <code>optional int32 maxvoltagebodysn = 3;</code>
     *
     * <pre>
     *最高电压的电池单体在包中序号
     * </pre>
     */
    int getMaxvoltagebodysn();

    // optional int32 minvoltage = 4;
    /**
     * <code>optional int32 minvoltage = 4;</code>
     *
     * <pre>
     *电池单体电压最低值（单位：0.001V)
     * </pre>
     */
    boolean hasMinvoltage();
    /**
     * <code>optional int32 minvoltage = 4;</code>
     *
     * <pre>
     *电池单体电压最低值（单位：0.001V)
     * </pre>
     */
    int getMinvoltage();

    // optional int32 minvoltageunitsn = 5;
    /**
     * <code>optional int32 minvoltageunitsn = 5;</code>
     *
     * <pre>
     *最低电压的电池单体所在包序号
     * </pre>
     */
    boolean hasMinvoltageunitsn();
    /**
     * <code>optional int32 minvoltageunitsn = 5;</code>
     *
     * <pre>
     *最低电压的电池单体所在包序号
     * </pre>
     */
    int getMinvoltageunitsn();

    // optional int32 minvoltagebodysn = 6;
    /**
     * <code>optional int32 minvoltagebodysn = 6;</code>
     *
     * <pre>
     *最低电压的电池单体在包中序号
     * </pre>
     */
    boolean hasMinvoltagebodysn();
    /**
     * <code>optional int32 minvoltagebodysn = 6;</code>
     *
     * <pre>
     *最低电压的电池单体在包中序号
     * </pre>
     */
    int getMinvoltagebodysn();

    // optional int32 maxtemperature = 7;
    /**
     * <code>optional int32 maxtemperature = 7;</code>
     *
     * <pre>
     *电池单体温度最高值（单位：十分之一摄氏度）
     * </pre>
     */
    boolean hasMaxtemperature();
    /**
     * <code>optional int32 maxtemperature = 7;</code>
     *
     * <pre>
     *电池单体温度最高值（单位：十分之一摄氏度）
     * </pre>
     */
    int getMaxtemperature();

    // optional int32 maxtemperatureunitsn = 8;
    /**
     * <code>optional int32 maxtemperatureunitsn = 8;</code>
     *
     * <pre>
     *最高温度的电池单体所在包序号
     * </pre>
     */
    boolean hasMaxtemperatureunitsn();
    /**
     * <code>optional int32 maxtemperatureunitsn = 8;</code>
     *
     * <pre>
     *最高温度的电池单体所在包序号
     * </pre>
     */
    int getMaxtemperatureunitsn();

    // optional int32 maxtemperaturebodysn = 9;
    /**
     * <code>optional int32 maxtemperaturebodysn = 9;</code>
     *
     * <pre>
     *最高温度的电池单体在包中序号
     * </pre>
     */
    boolean hasMaxtemperaturebodysn();
    /**
     * <code>optional int32 maxtemperaturebodysn = 9;</code>
     *
     * <pre>
     *最高温度的电池单体在包中序号
     * </pre>
     */
    int getMaxtemperaturebodysn();

    // optional int32 mintemperature = 10;
    /**
     * <code>optional int32 mintemperature = 10;</code>
     *
     * <pre>
     *电池单体温度最低值（单位：十分之一摄氏度）
     * </pre>
     */
    boolean hasMintemperature();
    /**
     * <code>optional int32 mintemperature = 10;</code>
     *
     * <pre>
     *电池单体温度最低值（单位：十分之一摄氏度）
     * </pre>
     */
    int getMintemperature();

    // optional int32 mintemperatureunitsn = 11;
    /**
     * <code>optional int32 mintemperatureunitsn = 11;</code>
     *
     * <pre>
     *最低温度的电池单体所在包序号
     * </pre>
     */
    boolean hasMintemperatureunitsn();
    /**
     * <code>optional int32 mintemperatureunitsn = 11;</code>
     *
     * <pre>
     *最低温度的电池单体所在包序号
     * </pre>
     */
    int getMintemperatureunitsn();

    // optional int32 mintemperaturebodysn = 12;
    /**
     * <code>optional int32 mintemperaturebodysn = 12;</code>
     *
     * <pre>
     *最低温度的电池单体在包中序号
     * </pre>
     */
    boolean hasMintemperaturebodysn();
    /**
     * <code>optional int32 mintemperaturebodysn = 12;</code>
     *
     * <pre>
     *最低温度的电池单体在包中序号
     * </pre>
     */
    int getMintemperaturebodysn();
  }
  /**
   * Protobuf type {@code gboss.BatteryExtremumInfo}
   *
   * <pre>
   *************************************************************************************
   * 蓄电池极值数据信息
   ************************************************************************************
   * </pre>
   */
  public static final class BatteryExtremumInfo extends
      com.google.protobuf.GeneratedMessage
      implements BatteryExtremumInfoOrBuilder {
    // Use BatteryExtremumInfo.newBuilder() to construct.
    private BatteryExtremumInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BatteryExtremumInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BatteryExtremumInfo defaultInstance;
    public static BatteryExtremumInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BatteryExtremumInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BatteryExtremumInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              maxvoltage_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxvoltageunitsn_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxvoltagebodysn_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              minvoltage_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              minvoltageunitsn_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              minvoltagebodysn_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              maxtemperature_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              maxtemperatureunitsn_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              maxtemperaturebodysn_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              mintemperature_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              mintemperatureunitsn_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              mintemperaturebodysn_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryExtremumInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryExtremumInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BatteryExtremumInfo> PARSER =
        new com.google.protobuf.AbstractParser<BatteryExtremumInfo>() {
      public BatteryExtremumInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatteryExtremumInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BatteryExtremumInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 maxvoltage = 1;
    public static final int MAXVOLTAGE_FIELD_NUMBER = 1;
    private int maxvoltage_;
    /**
     * <code>optional int32 maxvoltage = 1;</code>
     *
     * <pre>
     *电池单体电压最高值（单位：0.001V)
     * </pre>
     */
    public boolean hasMaxvoltage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 maxvoltage = 1;</code>
     *
     * <pre>
     *电池单体电压最高值（单位：0.001V)
     * </pre>
     */
    public int getMaxvoltage() {
      return maxvoltage_;
    }

    // optional int32 maxvoltageunitsn = 2;
    public static final int MAXVOLTAGEUNITSN_FIELD_NUMBER = 2;
    private int maxvoltageunitsn_;
    /**
     * <code>optional int32 maxvoltageunitsn = 2;</code>
     *
     * <pre>
     *最高电压的电池单体所在包序号
     * </pre>
     */
    public boolean hasMaxvoltageunitsn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 maxvoltageunitsn = 2;</code>
     *
     * <pre>
     *最高电压的电池单体所在包序号
     * </pre>
     */
    public int getMaxvoltageunitsn() {
      return maxvoltageunitsn_;
    }

    // optional int32 maxvoltagebodysn = 3;
    public static final int MAXVOLTAGEBODYSN_FIELD_NUMBER = 3;
    private int maxvoltagebodysn_;
    /**
     * <code>optional int32 maxvoltagebodysn = 3;</code>
     *
     * <pre>
     *最高电压的电池单体在包中序号
     * </pre>
     */
    public boolean hasMaxvoltagebodysn() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 maxvoltagebodysn = 3;</code>
     *
     * <pre>
     *最高电压的电池单体在包中序号
     * </pre>
     */
    public int getMaxvoltagebodysn() {
      return maxvoltagebodysn_;
    }

    // optional int32 minvoltage = 4;
    public static final int MINVOLTAGE_FIELD_NUMBER = 4;
    private int minvoltage_;
    /**
     * <code>optional int32 minvoltage = 4;</code>
     *
     * <pre>
     *电池单体电压最低值（单位：0.001V)
     * </pre>
     */
    public boolean hasMinvoltage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 minvoltage = 4;</code>
     *
     * <pre>
     *电池单体电压最低值（单位：0.001V)
     * </pre>
     */
    public int getMinvoltage() {
      return minvoltage_;
    }

    // optional int32 minvoltageunitsn = 5;
    public static final int MINVOLTAGEUNITSN_FIELD_NUMBER = 5;
    private int minvoltageunitsn_;
    /**
     * <code>optional int32 minvoltageunitsn = 5;</code>
     *
     * <pre>
     *最低电压的电池单体所在包序号
     * </pre>
     */
    public boolean hasMinvoltageunitsn() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 minvoltageunitsn = 5;</code>
     *
     * <pre>
     *最低电压的电池单体所在包序号
     * </pre>
     */
    public int getMinvoltageunitsn() {
      return minvoltageunitsn_;
    }

    // optional int32 minvoltagebodysn = 6;
    public static final int MINVOLTAGEBODYSN_FIELD_NUMBER = 6;
    private int minvoltagebodysn_;
    /**
     * <code>optional int32 minvoltagebodysn = 6;</code>
     *
     * <pre>
     *最低电压的电池单体在包中序号
     * </pre>
     */
    public boolean hasMinvoltagebodysn() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 minvoltagebodysn = 6;</code>
     *
     * <pre>
     *最低电压的电池单体在包中序号
     * </pre>
     */
    public int getMinvoltagebodysn() {
      return minvoltagebodysn_;
    }

    // optional int32 maxtemperature = 7;
    public static final int MAXTEMPERATURE_FIELD_NUMBER = 7;
    private int maxtemperature_;
    /**
     * <code>optional int32 maxtemperature = 7;</code>
     *
     * <pre>
     *电池单体温度最高值（单位：十分之一摄氏度）
     * </pre>
     */
    public boolean hasMaxtemperature() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 maxtemperature = 7;</code>
     *
     * <pre>
     *电池单体温度最高值（单位：十分之一摄氏度）
     * </pre>
     */
    public int getMaxtemperature() {
      return maxtemperature_;
    }

    // optional int32 maxtemperatureunitsn = 8;
    public static final int MAXTEMPERATUREUNITSN_FIELD_NUMBER = 8;
    private int maxtemperatureunitsn_;
    /**
     * <code>optional int32 maxtemperatureunitsn = 8;</code>
     *
     * <pre>
     *最高温度的电池单体所在包序号
     * </pre>
     */
    public boolean hasMaxtemperatureunitsn() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 maxtemperatureunitsn = 8;</code>
     *
     * <pre>
     *最高温度的电池单体所在包序号
     * </pre>
     */
    public int getMaxtemperatureunitsn() {
      return maxtemperatureunitsn_;
    }

    // optional int32 maxtemperaturebodysn = 9;
    public static final int MAXTEMPERATUREBODYSN_FIELD_NUMBER = 9;
    private int maxtemperaturebodysn_;
    /**
     * <code>optional int32 maxtemperaturebodysn = 9;</code>
     *
     * <pre>
     *最高温度的电池单体在包中序号
     * </pre>
     */
    public boolean hasMaxtemperaturebodysn() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 maxtemperaturebodysn = 9;</code>
     *
     * <pre>
     *最高温度的电池单体在包中序号
     * </pre>
     */
    public int getMaxtemperaturebodysn() {
      return maxtemperaturebodysn_;
    }

    // optional int32 mintemperature = 10;
    public static final int MINTEMPERATURE_FIELD_NUMBER = 10;
    private int mintemperature_;
    /**
     * <code>optional int32 mintemperature = 10;</code>
     *
     * <pre>
     *电池单体温度最低值（单位：十分之一摄氏度）
     * </pre>
     */
    public boolean hasMintemperature() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 mintemperature = 10;</code>
     *
     * <pre>
     *电池单体温度最低值（单位：十分之一摄氏度）
     * </pre>
     */
    public int getMintemperature() {
      return mintemperature_;
    }

    // optional int32 mintemperatureunitsn = 11;
    public static final int MINTEMPERATUREUNITSN_FIELD_NUMBER = 11;
    private int mintemperatureunitsn_;
    /**
     * <code>optional int32 mintemperatureunitsn = 11;</code>
     *
     * <pre>
     *最低温度的电池单体所在包序号
     * </pre>
     */
    public boolean hasMintemperatureunitsn() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 mintemperatureunitsn = 11;</code>
     *
     * <pre>
     *最低温度的电池单体所在包序号
     * </pre>
     */
    public int getMintemperatureunitsn() {
      return mintemperatureunitsn_;
    }

    // optional int32 mintemperaturebodysn = 12;
    public static final int MINTEMPERATUREBODYSN_FIELD_NUMBER = 12;
    private int mintemperaturebodysn_;
    /**
     * <code>optional int32 mintemperaturebodysn = 12;</code>
     *
     * <pre>
     *最低温度的电池单体在包中序号
     * </pre>
     */
    public boolean hasMintemperaturebodysn() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 mintemperaturebodysn = 12;</code>
     *
     * <pre>
     *最低温度的电池单体在包中序号
     * </pre>
     */
    public int getMintemperaturebodysn() {
      return mintemperaturebodysn_;
    }

    private void initFields() {
      maxvoltage_ = 0;
      maxvoltageunitsn_ = 0;
      maxvoltagebodysn_ = 0;
      minvoltage_ = 0;
      minvoltageunitsn_ = 0;
      minvoltagebodysn_ = 0;
      maxtemperature_ = 0;
      maxtemperatureunitsn_ = 0;
      maxtemperaturebodysn_ = 0;
      mintemperature_ = 0;
      mintemperatureunitsn_ = 0;
      mintemperaturebodysn_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, maxvoltage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxvoltageunitsn_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, maxvoltagebodysn_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, minvoltage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, minvoltageunitsn_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, minvoltagebodysn_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, maxtemperature_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, maxtemperatureunitsn_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, maxtemperaturebodysn_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, mintemperature_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, mintemperatureunitsn_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, mintemperaturebodysn_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxvoltage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxvoltageunitsn_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxvoltagebodysn_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, minvoltage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, minvoltageunitsn_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, minvoltagebodysn_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxtemperature_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, maxtemperatureunitsn_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, maxtemperaturebodysn_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, mintemperature_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, mintemperatureunitsn_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, mintemperaturebodysn_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.BatteryExtremumInfo}
     *
     * <pre>
     *************************************************************************************
     * 蓄电池极值数据信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryExtremumInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryExtremumInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        maxvoltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxvoltageunitsn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxvoltagebodysn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        minvoltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        minvoltageunitsn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        minvoltagebodysn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxtemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxtemperatureunitsn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        maxtemperaturebodysn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        mintemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        mintemperatureunitsn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        mintemperaturebodysn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_BatteryExtremumInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxvoltage_ = maxvoltage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxvoltageunitsn_ = maxvoltageunitsn_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxvoltagebodysn_ = maxvoltagebodysn_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minvoltage_ = minvoltage_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.minvoltageunitsn_ = minvoltageunitsn_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.minvoltagebodysn_ = minvoltagebodysn_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxtemperature_ = maxtemperature_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxtemperatureunitsn_ = maxtemperatureunitsn_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.maxtemperaturebodysn_ = maxtemperaturebodysn_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.mintemperature_ = mintemperature_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.mintemperatureunitsn_ = mintemperatureunitsn_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.mintemperaturebodysn_ = mintemperaturebodysn_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.getDefaultInstance()) return this;
        if (other.hasMaxvoltage()) {
          setMaxvoltage(other.getMaxvoltage());
        }
        if (other.hasMaxvoltageunitsn()) {
          setMaxvoltageunitsn(other.getMaxvoltageunitsn());
        }
        if (other.hasMaxvoltagebodysn()) {
          setMaxvoltagebodysn(other.getMaxvoltagebodysn());
        }
        if (other.hasMinvoltage()) {
          setMinvoltage(other.getMinvoltage());
        }
        if (other.hasMinvoltageunitsn()) {
          setMinvoltageunitsn(other.getMinvoltageunitsn());
        }
        if (other.hasMinvoltagebodysn()) {
          setMinvoltagebodysn(other.getMinvoltagebodysn());
        }
        if (other.hasMaxtemperature()) {
          setMaxtemperature(other.getMaxtemperature());
        }
        if (other.hasMaxtemperatureunitsn()) {
          setMaxtemperatureunitsn(other.getMaxtemperatureunitsn());
        }
        if (other.hasMaxtemperaturebodysn()) {
          setMaxtemperaturebodysn(other.getMaxtemperaturebodysn());
        }
        if (other.hasMintemperature()) {
          setMintemperature(other.getMintemperature());
        }
        if (other.hasMintemperatureunitsn()) {
          setMintemperatureunitsn(other.getMintemperatureunitsn());
        }
        if (other.hasMintemperaturebodysn()) {
          setMintemperaturebodysn(other.getMintemperaturebodysn());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 maxvoltage = 1;
      private int maxvoltage_ ;
      /**
       * <code>optional int32 maxvoltage = 1;</code>
       *
       * <pre>
       *电池单体电压最高值（单位：0.001V)
       * </pre>
       */
      public boolean hasMaxvoltage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 maxvoltage = 1;</code>
       *
       * <pre>
       *电池单体电压最高值（单位：0.001V)
       * </pre>
       */
      public int getMaxvoltage() {
        return maxvoltage_;
      }
      /**
       * <code>optional int32 maxvoltage = 1;</code>
       *
       * <pre>
       *电池单体电压最高值（单位：0.001V)
       * </pre>
       */
      public Builder setMaxvoltage(int value) {
        bitField0_ |= 0x00000001;
        maxvoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxvoltage = 1;</code>
       *
       * <pre>
       *电池单体电压最高值（单位：0.001V)
       * </pre>
       */
      public Builder clearMaxvoltage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxvoltage_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxvoltageunitsn = 2;
      private int maxvoltageunitsn_ ;
      /**
       * <code>optional int32 maxvoltageunitsn = 2;</code>
       *
       * <pre>
       *最高电压的电池单体所在包序号
       * </pre>
       */
      public boolean hasMaxvoltageunitsn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 maxvoltageunitsn = 2;</code>
       *
       * <pre>
       *最高电压的电池单体所在包序号
       * </pre>
       */
      public int getMaxvoltageunitsn() {
        return maxvoltageunitsn_;
      }
      /**
       * <code>optional int32 maxvoltageunitsn = 2;</code>
       *
       * <pre>
       *最高电压的电池单体所在包序号
       * </pre>
       */
      public Builder setMaxvoltageunitsn(int value) {
        bitField0_ |= 0x00000002;
        maxvoltageunitsn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxvoltageunitsn = 2;</code>
       *
       * <pre>
       *最高电压的电池单体所在包序号
       * </pre>
       */
      public Builder clearMaxvoltageunitsn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxvoltageunitsn_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxvoltagebodysn = 3;
      private int maxvoltagebodysn_ ;
      /**
       * <code>optional int32 maxvoltagebodysn = 3;</code>
       *
       * <pre>
       *最高电压的电池单体在包中序号
       * </pre>
       */
      public boolean hasMaxvoltagebodysn() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 maxvoltagebodysn = 3;</code>
       *
       * <pre>
       *最高电压的电池单体在包中序号
       * </pre>
       */
      public int getMaxvoltagebodysn() {
        return maxvoltagebodysn_;
      }
      /**
       * <code>optional int32 maxvoltagebodysn = 3;</code>
       *
       * <pre>
       *最高电压的电池单体在包中序号
       * </pre>
       */
      public Builder setMaxvoltagebodysn(int value) {
        bitField0_ |= 0x00000004;
        maxvoltagebodysn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxvoltagebodysn = 3;</code>
       *
       * <pre>
       *最高电压的电池单体在包中序号
       * </pre>
       */
      public Builder clearMaxvoltagebodysn() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxvoltagebodysn_ = 0;
        onChanged();
        return this;
      }

      // optional int32 minvoltage = 4;
      private int minvoltage_ ;
      /**
       * <code>optional int32 minvoltage = 4;</code>
       *
       * <pre>
       *电池单体电压最低值（单位：0.001V)
       * </pre>
       */
      public boolean hasMinvoltage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 minvoltage = 4;</code>
       *
       * <pre>
       *电池单体电压最低值（单位：0.001V)
       * </pre>
       */
      public int getMinvoltage() {
        return minvoltage_;
      }
      /**
       * <code>optional int32 minvoltage = 4;</code>
       *
       * <pre>
       *电池单体电压最低值（单位：0.001V)
       * </pre>
       */
      public Builder setMinvoltage(int value) {
        bitField0_ |= 0x00000008;
        minvoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 minvoltage = 4;</code>
       *
       * <pre>
       *电池单体电压最低值（单位：0.001V)
       * </pre>
       */
      public Builder clearMinvoltage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minvoltage_ = 0;
        onChanged();
        return this;
      }

      // optional int32 minvoltageunitsn = 5;
      private int minvoltageunitsn_ ;
      /**
       * <code>optional int32 minvoltageunitsn = 5;</code>
       *
       * <pre>
       *最低电压的电池单体所在包序号
       * </pre>
       */
      public boolean hasMinvoltageunitsn() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 minvoltageunitsn = 5;</code>
       *
       * <pre>
       *最低电压的电池单体所在包序号
       * </pre>
       */
      public int getMinvoltageunitsn() {
        return minvoltageunitsn_;
      }
      /**
       * <code>optional int32 minvoltageunitsn = 5;</code>
       *
       * <pre>
       *最低电压的电池单体所在包序号
       * </pre>
       */
      public Builder setMinvoltageunitsn(int value) {
        bitField0_ |= 0x00000010;
        minvoltageunitsn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 minvoltageunitsn = 5;</code>
       *
       * <pre>
       *最低电压的电池单体所在包序号
       * </pre>
       */
      public Builder clearMinvoltageunitsn() {
        bitField0_ = (bitField0_ & ~0x00000010);
        minvoltageunitsn_ = 0;
        onChanged();
        return this;
      }

      // optional int32 minvoltagebodysn = 6;
      private int minvoltagebodysn_ ;
      /**
       * <code>optional int32 minvoltagebodysn = 6;</code>
       *
       * <pre>
       *最低电压的电池单体在包中序号
       * </pre>
       */
      public boolean hasMinvoltagebodysn() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 minvoltagebodysn = 6;</code>
       *
       * <pre>
       *最低电压的电池单体在包中序号
       * </pre>
       */
      public int getMinvoltagebodysn() {
        return minvoltagebodysn_;
      }
      /**
       * <code>optional int32 minvoltagebodysn = 6;</code>
       *
       * <pre>
       *最低电压的电池单体在包中序号
       * </pre>
       */
      public Builder setMinvoltagebodysn(int value) {
        bitField0_ |= 0x00000020;
        minvoltagebodysn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 minvoltagebodysn = 6;</code>
       *
       * <pre>
       *最低电压的电池单体在包中序号
       * </pre>
       */
      public Builder clearMinvoltagebodysn() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minvoltagebodysn_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxtemperature = 7;
      private int maxtemperature_ ;
      /**
       * <code>optional int32 maxtemperature = 7;</code>
       *
       * <pre>
       *电池单体温度最高值（单位：十分之一摄氏度）
       * </pre>
       */
      public boolean hasMaxtemperature() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 maxtemperature = 7;</code>
       *
       * <pre>
       *电池单体温度最高值（单位：十分之一摄氏度）
       * </pre>
       */
      public int getMaxtemperature() {
        return maxtemperature_;
      }
      /**
       * <code>optional int32 maxtemperature = 7;</code>
       *
       * <pre>
       *电池单体温度最高值（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder setMaxtemperature(int value) {
        bitField0_ |= 0x00000040;
        maxtemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxtemperature = 7;</code>
       *
       * <pre>
       *电池单体温度最高值（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder clearMaxtemperature() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxtemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxtemperatureunitsn = 8;
      private int maxtemperatureunitsn_ ;
      /**
       * <code>optional int32 maxtemperatureunitsn = 8;</code>
       *
       * <pre>
       *最高温度的电池单体所在包序号
       * </pre>
       */
      public boolean hasMaxtemperatureunitsn() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 maxtemperatureunitsn = 8;</code>
       *
       * <pre>
       *最高温度的电池单体所在包序号
       * </pre>
       */
      public int getMaxtemperatureunitsn() {
        return maxtemperatureunitsn_;
      }
      /**
       * <code>optional int32 maxtemperatureunitsn = 8;</code>
       *
       * <pre>
       *最高温度的电池单体所在包序号
       * </pre>
       */
      public Builder setMaxtemperatureunitsn(int value) {
        bitField0_ |= 0x00000080;
        maxtemperatureunitsn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxtemperatureunitsn = 8;</code>
       *
       * <pre>
       *最高温度的电池单体所在包序号
       * </pre>
       */
      public Builder clearMaxtemperatureunitsn() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxtemperatureunitsn_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxtemperaturebodysn = 9;
      private int maxtemperaturebodysn_ ;
      /**
       * <code>optional int32 maxtemperaturebodysn = 9;</code>
       *
       * <pre>
       *最高温度的电池单体在包中序号
       * </pre>
       */
      public boolean hasMaxtemperaturebodysn() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 maxtemperaturebodysn = 9;</code>
       *
       * <pre>
       *最高温度的电池单体在包中序号
       * </pre>
       */
      public int getMaxtemperaturebodysn() {
        return maxtemperaturebodysn_;
      }
      /**
       * <code>optional int32 maxtemperaturebodysn = 9;</code>
       *
       * <pre>
       *最高温度的电池单体在包中序号
       * </pre>
       */
      public Builder setMaxtemperaturebodysn(int value) {
        bitField0_ |= 0x00000100;
        maxtemperaturebodysn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxtemperaturebodysn = 9;</code>
       *
       * <pre>
       *最高温度的电池单体在包中序号
       * </pre>
       */
      public Builder clearMaxtemperaturebodysn() {
        bitField0_ = (bitField0_ & ~0x00000100);
        maxtemperaturebodysn_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mintemperature = 10;
      private int mintemperature_ ;
      /**
       * <code>optional int32 mintemperature = 10;</code>
       *
       * <pre>
       *电池单体温度最低值（单位：十分之一摄氏度）
       * </pre>
       */
      public boolean hasMintemperature() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 mintemperature = 10;</code>
       *
       * <pre>
       *电池单体温度最低值（单位：十分之一摄氏度）
       * </pre>
       */
      public int getMintemperature() {
        return mintemperature_;
      }
      /**
       * <code>optional int32 mintemperature = 10;</code>
       *
       * <pre>
       *电池单体温度最低值（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder setMintemperature(int value) {
        bitField0_ |= 0x00000200;
        mintemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mintemperature = 10;</code>
       *
       * <pre>
       *电池单体温度最低值（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder clearMintemperature() {
        bitField0_ = (bitField0_ & ~0x00000200);
        mintemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mintemperatureunitsn = 11;
      private int mintemperatureunitsn_ ;
      /**
       * <code>optional int32 mintemperatureunitsn = 11;</code>
       *
       * <pre>
       *最低温度的电池单体所在包序号
       * </pre>
       */
      public boolean hasMintemperatureunitsn() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 mintemperatureunitsn = 11;</code>
       *
       * <pre>
       *最低温度的电池单体所在包序号
       * </pre>
       */
      public int getMintemperatureunitsn() {
        return mintemperatureunitsn_;
      }
      /**
       * <code>optional int32 mintemperatureunitsn = 11;</code>
       *
       * <pre>
       *最低温度的电池单体所在包序号
       * </pre>
       */
      public Builder setMintemperatureunitsn(int value) {
        bitField0_ |= 0x00000400;
        mintemperatureunitsn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mintemperatureunitsn = 11;</code>
       *
       * <pre>
       *最低温度的电池单体所在包序号
       * </pre>
       */
      public Builder clearMintemperatureunitsn() {
        bitField0_ = (bitField0_ & ~0x00000400);
        mintemperatureunitsn_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mintemperaturebodysn = 12;
      private int mintemperaturebodysn_ ;
      /**
       * <code>optional int32 mintemperaturebodysn = 12;</code>
       *
       * <pre>
       *最低温度的电池单体在包中序号
       * </pre>
       */
      public boolean hasMintemperaturebodysn() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 mintemperaturebodysn = 12;</code>
       *
       * <pre>
       *最低温度的电池单体在包中序号
       * </pre>
       */
      public int getMintemperaturebodysn() {
        return mintemperaturebodysn_;
      }
      /**
       * <code>optional int32 mintemperaturebodysn = 12;</code>
       *
       * <pre>
       *最低温度的电池单体在包中序号
       * </pre>
       */
      public Builder setMintemperaturebodysn(int value) {
        bitField0_ |= 0x00000800;
        mintemperaturebodysn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mintemperaturebodysn = 12;</code>
       *
       * <pre>
       *最低温度的电池单体在包中序号
       * </pre>
       */
      public Builder clearMintemperaturebodysn() {
        bitField0_ = (bitField0_ & ~0x00000800);
        mintemperaturebodysn_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.BatteryExtremumInfo)
    }

    static {
      defaultInstance = new BatteryExtremumInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.BatteryExtremumInfo)
  }

  public interface VKModBusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string devType = 1;
    /**
     * <code>required string devType = 1;</code>
     *
     * <pre>
     *设备类型 E+B-UREA-01
     * </pre>
     */
    boolean hasDevType();
    /**
     * <code>required string devType = 1;</code>
     *
     * <pre>
     *设备类型 E+B-UREA-01
     * </pre>
     */
    java.lang.String getDevType();
    /**
     * <code>required string devType = 1;</code>
     *
     * <pre>
     *设备类型 E+B-UREA-01
     * </pre>
     */
    com.google.protobuf.ByteString
        getDevTypeBytes();

    // required string devID = 2;
    /**
     * <code>required string devID = 2;</code>
     *
     * <pre>
     *设备ID 16位、设备唯一ID，设备固化在内部
     * </pre>
     */
    boolean hasDevID();
    /**
     * <code>required string devID = 2;</code>
     *
     * <pre>
     *设备ID 16位、设备唯一ID，设备固化在内部
     * </pre>
     */
    java.lang.String getDevID();
    /**
     * <code>required string devID = 2;</code>
     *
     * <pre>
     *设备ID 16位、设备唯一ID，设备固化在内部
     * </pre>
     */
    com.google.protobuf.ByteString
        getDevIDBytes();

    // optional int32 action = 3;
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *帧类型 1：注册及注册回复;2:上线及上线回复;3：数据、状态 ;4：命令;
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *帧类型 1：注册及注册回复;2:上线及上线回复;3：数据、状态 ;4：命令;
     * </pre>
     */
    int getAction();

    // optional string devPWD = 4;
    /**
     * <code>optional string devPWD = 4;</code>
     *
     * <pre>
     *密码 密码，6字节，仅限数字（0~9）
     * </pre>
     */
    boolean hasDevPWD();
    /**
     * <code>optional string devPWD = 4;</code>
     *
     * <pre>
     *密码 密码，6字节，仅限数字（0~9）
     * </pre>
     */
    java.lang.String getDevPWD();
    /**
     * <code>optional string devPWD = 4;</code>
     *
     * <pre>
     *密码 密码，6字节，仅限数字（0~9）
     * </pre>
     */
    com.google.protobuf.ByteString
        getDevPWDBytes();

    // optional int32 devLock = 5;
    /**
     * <code>optional int32 devLock = 5;</code>
     *
     * <pre>
     *设备锁操作 1：锁机;0：解锁
     * </pre>
     */
    boolean hasDevLock();
    /**
     * <code>optional int32 devLock = 5;</code>
     *
     * <pre>
     *设备锁操作 1：锁机;0：解锁
     * </pre>
     */
    int getDevLock();

    // optional int32 devStatus = 6;
    /**
     * <code>optional int32 devStatus = 6;</code>
     *
     * <pre>
     *设备状态 1:锁机;2：工作;3：调试
     * </pre>
     */
    boolean hasDevStatus();
    /**
     * <code>optional int32 devStatus = 6;</code>
     *
     * <pre>
     *设备状态 1:锁机;2：工作;3：调试
     * </pre>
     */
    int getDevStatus();

    // optional int32 singleMeasure = 7;
    /**
     * <code>optional int32 singleMeasure = 7;</code>
     *
     * <pre>
     *单次加注量
     * </pre>
     */
    boolean hasSingleMeasure();
    /**
     * <code>optional int32 singleMeasure = 7;</code>
     *
     * <pre>
     *单次加注量
     * </pre>
     */
    int getSingleMeasure();

    // optional int32 singleAmount = 8;
    /**
     * <code>optional int32 singleAmount = 8;</code>
     *
     * <pre>
     *单次加注金额
     * </pre>
     */
    boolean hasSingleAmount();
    /**
     * <code>optional int32 singleAmount = 8;</code>
     *
     * <pre>
     *单次加注金额
     * </pre>
     */
    int getSingleAmount();

    // optional int32 remainder = 9;
    /**
     * <code>optional int32 remainder = 9;</code>
     *
     * <pre>
     *剩余量
     * </pre>
     */
    boolean hasRemainder();
    /**
     * <code>optional int32 remainder = 9;</code>
     *
     * <pre>
     *剩余量
     * </pre>
     */
    int getRemainder();

    // optional int64 totalMeasure = 10;
    /**
     * <code>optional int64 totalMeasure = 10;</code>
     *
     * <pre>
     *累计加注量
     * </pre>
     */
    boolean hasTotalMeasure();
    /**
     * <code>optional int64 totalMeasure = 10;</code>
     *
     * <pre>
     *累计加注量
     * </pre>
     */
    long getTotalMeasure();

    // optional int64 totalAmount = 11;
    /**
     * <code>optional int64 totalAmount = 11;</code>
     *
     * <pre>
     *累计加注金额
     * </pre>
     */
    boolean hasTotalAmount();
    /**
     * <code>optional int64 totalAmount = 11;</code>
     *
     * <pre>
     *累计加注金额
     * </pre>
     */
    long getTotalAmount();

    // optional int64 workTime = 12;
    /**
     * <code>optional int64 workTime = 12;</code>
     *
     * <pre>
     *工作时间累计
     * </pre>
     */
    boolean hasWorkTime();
    /**
     * <code>optional int64 workTime = 12;</code>
     *
     * <pre>
     *工作时间累计
     * </pre>
     */
    long getWorkTime();

    // optional int32 workCount = 13;
    /**
     * <code>optional int32 workCount = 13;</code>
     *
     * <pre>
     *工作次数累计
     * </pre>
     */
    boolean hasWorkCount();
    /**
     * <code>optional int32 workCount = 13;</code>
     *
     * <pre>
     *工作次数累计
     * </pre>
     */
    int getWorkCount();
  }
  /**
   * Protobuf type {@code gboss.VKModBus}
   *
   * <pre>
   *************************************************************************************
   * 微科Modbus信息，尿素加注信息
   ************************************************************************************
   * </pre>
   */
  public static final class VKModBus extends
      com.google.protobuf.GeneratedMessage
      implements VKModBusOrBuilder {
    // Use VKModBus.newBuilder() to construct.
    private VKModBus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VKModBus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VKModBus defaultInstance;
    public static VKModBus getDefaultInstance() {
      return defaultInstance;
    }

    public VKModBus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VKModBus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              devType_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              devID_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              action_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              devPWD_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              devLock_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              devStatus_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              singleMeasure_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              singleAmount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              remainder_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              totalMeasure_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              totalAmount_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              workTime_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              workCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VKModBus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VKModBus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.class, cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.Builder.class);
    }

    public static com.google.protobuf.Parser<VKModBus> PARSER =
        new com.google.protobuf.AbstractParser<VKModBus>() {
      public VKModBus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VKModBus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VKModBus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string devType = 1;
    public static final int DEVTYPE_FIELD_NUMBER = 1;
    private java.lang.Object devType_;
    /**
     * <code>required string devType = 1;</code>
     *
     * <pre>
     *设备类型 E+B-UREA-01
     * </pre>
     */
    public boolean hasDevType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string devType = 1;</code>
     *
     * <pre>
     *设备类型 E+B-UREA-01
     * </pre>
     */
    public java.lang.String getDevType() {
      java.lang.Object ref = devType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          devType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string devType = 1;</code>
     *
     * <pre>
     *设备类型 E+B-UREA-01
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDevTypeBytes() {
      java.lang.Object ref = devType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        devType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string devID = 2;
    public static final int DEVID_FIELD_NUMBER = 2;
    private java.lang.Object devID_;
    /**
     * <code>required string devID = 2;</code>
     *
     * <pre>
     *设备ID 16位、设备唯一ID，设备固化在内部
     * </pre>
     */
    public boolean hasDevID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string devID = 2;</code>
     *
     * <pre>
     *设备ID 16位、设备唯一ID，设备固化在内部
     * </pre>
     */
    public java.lang.String getDevID() {
      java.lang.Object ref = devID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          devID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string devID = 2;</code>
     *
     * <pre>
     *设备ID 16位、设备唯一ID，设备固化在内部
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDevIDBytes() {
      java.lang.Object ref = devID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        devID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 action = 3;
    public static final int ACTION_FIELD_NUMBER = 3;
    private int action_;
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *帧类型 1：注册及注册回复;2:上线及上线回复;3：数据、状态 ;4：命令;
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *帧类型 1：注册及注册回复;2:上线及上线回复;3：数据、状态 ;4：命令;
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    // optional string devPWD = 4;
    public static final int DEVPWD_FIELD_NUMBER = 4;
    private java.lang.Object devPWD_;
    /**
     * <code>optional string devPWD = 4;</code>
     *
     * <pre>
     *密码 密码，6字节，仅限数字（0~9）
     * </pre>
     */
    public boolean hasDevPWD() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string devPWD = 4;</code>
     *
     * <pre>
     *密码 密码，6字节，仅限数字（0~9）
     * </pre>
     */
    public java.lang.String getDevPWD() {
      java.lang.Object ref = devPWD_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          devPWD_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string devPWD = 4;</code>
     *
     * <pre>
     *密码 密码，6字节，仅限数字（0~9）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDevPWDBytes() {
      java.lang.Object ref = devPWD_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        devPWD_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 devLock = 5;
    public static final int DEVLOCK_FIELD_NUMBER = 5;
    private int devLock_;
    /**
     * <code>optional int32 devLock = 5;</code>
     *
     * <pre>
     *设备锁操作 1：锁机;0：解锁
     * </pre>
     */
    public boolean hasDevLock() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 devLock = 5;</code>
     *
     * <pre>
     *设备锁操作 1：锁机;0：解锁
     * </pre>
     */
    public int getDevLock() {
      return devLock_;
    }

    // optional int32 devStatus = 6;
    public static final int DEVSTATUS_FIELD_NUMBER = 6;
    private int devStatus_;
    /**
     * <code>optional int32 devStatus = 6;</code>
     *
     * <pre>
     *设备状态 1:锁机;2：工作;3：调试
     * </pre>
     */
    public boolean hasDevStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 devStatus = 6;</code>
     *
     * <pre>
     *设备状态 1:锁机;2：工作;3：调试
     * </pre>
     */
    public int getDevStatus() {
      return devStatus_;
    }

    // optional int32 singleMeasure = 7;
    public static final int SINGLEMEASURE_FIELD_NUMBER = 7;
    private int singleMeasure_;
    /**
     * <code>optional int32 singleMeasure = 7;</code>
     *
     * <pre>
     *单次加注量
     * </pre>
     */
    public boolean hasSingleMeasure() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 singleMeasure = 7;</code>
     *
     * <pre>
     *单次加注量
     * </pre>
     */
    public int getSingleMeasure() {
      return singleMeasure_;
    }

    // optional int32 singleAmount = 8;
    public static final int SINGLEAMOUNT_FIELD_NUMBER = 8;
    private int singleAmount_;
    /**
     * <code>optional int32 singleAmount = 8;</code>
     *
     * <pre>
     *单次加注金额
     * </pre>
     */
    public boolean hasSingleAmount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 singleAmount = 8;</code>
     *
     * <pre>
     *单次加注金额
     * </pre>
     */
    public int getSingleAmount() {
      return singleAmount_;
    }

    // optional int32 remainder = 9;
    public static final int REMAINDER_FIELD_NUMBER = 9;
    private int remainder_;
    /**
     * <code>optional int32 remainder = 9;</code>
     *
     * <pre>
     *剩余量
     * </pre>
     */
    public boolean hasRemainder() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 remainder = 9;</code>
     *
     * <pre>
     *剩余量
     * </pre>
     */
    public int getRemainder() {
      return remainder_;
    }

    // optional int64 totalMeasure = 10;
    public static final int TOTALMEASURE_FIELD_NUMBER = 10;
    private long totalMeasure_;
    /**
     * <code>optional int64 totalMeasure = 10;</code>
     *
     * <pre>
     *累计加注量
     * </pre>
     */
    public boolean hasTotalMeasure() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 totalMeasure = 10;</code>
     *
     * <pre>
     *累计加注量
     * </pre>
     */
    public long getTotalMeasure() {
      return totalMeasure_;
    }

    // optional int64 totalAmount = 11;
    public static final int TOTALAMOUNT_FIELD_NUMBER = 11;
    private long totalAmount_;
    /**
     * <code>optional int64 totalAmount = 11;</code>
     *
     * <pre>
     *累计加注金额
     * </pre>
     */
    public boolean hasTotalAmount() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 totalAmount = 11;</code>
     *
     * <pre>
     *累计加注金额
     * </pre>
     */
    public long getTotalAmount() {
      return totalAmount_;
    }

    // optional int64 workTime = 12;
    public static final int WORKTIME_FIELD_NUMBER = 12;
    private long workTime_;
    /**
     * <code>optional int64 workTime = 12;</code>
     *
     * <pre>
     *工作时间累计
     * </pre>
     */
    public boolean hasWorkTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 workTime = 12;</code>
     *
     * <pre>
     *工作时间累计
     * </pre>
     */
    public long getWorkTime() {
      return workTime_;
    }

    // optional int32 workCount = 13;
    public static final int WORKCOUNT_FIELD_NUMBER = 13;
    private int workCount_;
    /**
     * <code>optional int32 workCount = 13;</code>
     *
     * <pre>
     *工作次数累计
     * </pre>
     */
    public boolean hasWorkCount() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 workCount = 13;</code>
     *
     * <pre>
     *工作次数累计
     * </pre>
     */
    public int getWorkCount() {
      return workCount_;
    }

    private void initFields() {
      devType_ = "";
      devID_ = "";
      action_ = 0;
      devPWD_ = "";
      devLock_ = 0;
      devStatus_ = 0;
      singleMeasure_ = 0;
      singleAmount_ = 0;
      remainder_ = 0;
      totalMeasure_ = 0L;
      totalAmount_ = 0L;
      workTime_ = 0L;
      workCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDevType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDevID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDevTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDevIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, action_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getDevPWDBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, devLock_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, devStatus_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, singleMeasure_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, singleAmount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, remainder_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, totalMeasure_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(11, totalAmount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(12, workTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, workCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDevTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDevIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, action_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDevPWDBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, devLock_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, devStatus_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, singleMeasure_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, singleAmount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, remainder_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, totalMeasure_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, totalAmount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, workTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, workCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.VKModBus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.VKModBus}
     *
     * <pre>
     *************************************************************************************
     * 微科Modbus信息，尿素加注信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.VKModBusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VKModBus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VKModBus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.class, cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        devType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        devID_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        devPWD_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        devLock_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        devStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        singleMeasure_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        singleAmount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        remainder_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        totalMeasure_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        totalAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        workTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        workCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_VKModBus_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.VKModBus getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.VKModBus build() {
        cc.chinagps.gateway.buff.GBossDataBuff.VKModBus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.VKModBus buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.VKModBus result = new cc.chinagps.gateway.buff.GBossDataBuff.VKModBus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.devType_ = devType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.devID_ = devID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.action_ = action_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.devPWD_ = devPWD_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.devLock_ = devLock_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.devStatus_ = devStatus_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.singleMeasure_ = singleMeasure_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.singleAmount_ = singleAmount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.remainder_ = remainder_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.totalMeasure_ = totalMeasure_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.totalAmount_ = totalAmount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.workTime_ = workTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.workCount_ = workCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.VKModBus) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.VKModBus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.VKModBus other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.getDefaultInstance()) return this;
        if (other.hasDevType()) {
          bitField0_ |= 0x00000001;
          devType_ = other.devType_;
          onChanged();
        }
        if (other.hasDevID()) {
          bitField0_ |= 0x00000002;
          devID_ = other.devID_;
          onChanged();
        }
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasDevPWD()) {
          bitField0_ |= 0x00000008;
          devPWD_ = other.devPWD_;
          onChanged();
        }
        if (other.hasDevLock()) {
          setDevLock(other.getDevLock());
        }
        if (other.hasDevStatus()) {
          setDevStatus(other.getDevStatus());
        }
        if (other.hasSingleMeasure()) {
          setSingleMeasure(other.getSingleMeasure());
        }
        if (other.hasSingleAmount()) {
          setSingleAmount(other.getSingleAmount());
        }
        if (other.hasRemainder()) {
          setRemainder(other.getRemainder());
        }
        if (other.hasTotalMeasure()) {
          setTotalMeasure(other.getTotalMeasure());
        }
        if (other.hasTotalAmount()) {
          setTotalAmount(other.getTotalAmount());
        }
        if (other.hasWorkTime()) {
          setWorkTime(other.getWorkTime());
        }
        if (other.hasWorkCount()) {
          setWorkCount(other.getWorkCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDevType()) {
          
          return false;
        }
        if (!hasDevID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.VKModBus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.VKModBus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string devType = 1;
      private java.lang.Object devType_ = "";
      /**
       * <code>required string devType = 1;</code>
       *
       * <pre>
       *设备类型 E+B-UREA-01
       * </pre>
       */
      public boolean hasDevType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string devType = 1;</code>
       *
       * <pre>
       *设备类型 E+B-UREA-01
       * </pre>
       */
      public java.lang.String getDevType() {
        java.lang.Object ref = devType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          devType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string devType = 1;</code>
       *
       * <pre>
       *设备类型 E+B-UREA-01
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDevTypeBytes() {
        java.lang.Object ref = devType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          devType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string devType = 1;</code>
       *
       * <pre>
       *设备类型 E+B-UREA-01
       * </pre>
       */
      public Builder setDevType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        devType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string devType = 1;</code>
       *
       * <pre>
       *设备类型 E+B-UREA-01
       * </pre>
       */
      public Builder clearDevType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        devType_ = getDefaultInstance().getDevType();
        onChanged();
        return this;
      }
      /**
       * <code>required string devType = 1;</code>
       *
       * <pre>
       *设备类型 E+B-UREA-01
       * </pre>
       */
      public Builder setDevTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        devType_ = value;
        onChanged();
        return this;
      }

      // required string devID = 2;
      private java.lang.Object devID_ = "";
      /**
       * <code>required string devID = 2;</code>
       *
       * <pre>
       *设备ID 16位、设备唯一ID，设备固化在内部
       * </pre>
       */
      public boolean hasDevID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string devID = 2;</code>
       *
       * <pre>
       *设备ID 16位、设备唯一ID，设备固化在内部
       * </pre>
       */
      public java.lang.String getDevID() {
        java.lang.Object ref = devID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          devID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string devID = 2;</code>
       *
       * <pre>
       *设备ID 16位、设备唯一ID，设备固化在内部
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDevIDBytes() {
        java.lang.Object ref = devID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          devID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string devID = 2;</code>
       *
       * <pre>
       *设备ID 16位、设备唯一ID，设备固化在内部
       * </pre>
       */
      public Builder setDevID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        devID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string devID = 2;</code>
       *
       * <pre>
       *设备ID 16位、设备唯一ID，设备固化在内部
       * </pre>
       */
      public Builder clearDevID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        devID_ = getDefaultInstance().getDevID();
        onChanged();
        return this;
      }
      /**
       * <code>required string devID = 2;</code>
       *
       * <pre>
       *设备ID 16位、设备唯一ID，设备固化在内部
       * </pre>
       */
      public Builder setDevIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        devID_ = value;
        onChanged();
        return this;
      }

      // optional int32 action = 3;
      private int action_ ;
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *帧类型 1：注册及注册回复;2:上线及上线回复;3：数据、状态 ;4：命令;
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *帧类型 1：注册及注册回复;2:上线及上线回复;3：数据、状态 ;4：命令;
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *帧类型 1：注册及注册回复;2:上线及上线回复;3：数据、状态 ;4：命令;
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000004;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *帧类型 1：注册及注册回复;2:上线及上线回复;3：数据、状态 ;4：命令;
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000004);
        action_ = 0;
        onChanged();
        return this;
      }

      // optional string devPWD = 4;
      private java.lang.Object devPWD_ = "";
      /**
       * <code>optional string devPWD = 4;</code>
       *
       * <pre>
       *密码 密码，6字节，仅限数字（0~9）
       * </pre>
       */
      public boolean hasDevPWD() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string devPWD = 4;</code>
       *
       * <pre>
       *密码 密码，6字节，仅限数字（0~9）
       * </pre>
       */
      public java.lang.String getDevPWD() {
        java.lang.Object ref = devPWD_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          devPWD_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string devPWD = 4;</code>
       *
       * <pre>
       *密码 密码，6字节，仅限数字（0~9）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDevPWDBytes() {
        java.lang.Object ref = devPWD_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          devPWD_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string devPWD = 4;</code>
       *
       * <pre>
       *密码 密码，6字节，仅限数字（0~9）
       * </pre>
       */
      public Builder setDevPWD(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        devPWD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string devPWD = 4;</code>
       *
       * <pre>
       *密码 密码，6字节，仅限数字（0~9）
       * </pre>
       */
      public Builder clearDevPWD() {
        bitField0_ = (bitField0_ & ~0x00000008);
        devPWD_ = getDefaultInstance().getDevPWD();
        onChanged();
        return this;
      }
      /**
       * <code>optional string devPWD = 4;</code>
       *
       * <pre>
       *密码 密码，6字节，仅限数字（0~9）
       * </pre>
       */
      public Builder setDevPWDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        devPWD_ = value;
        onChanged();
        return this;
      }

      // optional int32 devLock = 5;
      private int devLock_ ;
      /**
       * <code>optional int32 devLock = 5;</code>
       *
       * <pre>
       *设备锁操作 1：锁机;0：解锁
       * </pre>
       */
      public boolean hasDevLock() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 devLock = 5;</code>
       *
       * <pre>
       *设备锁操作 1：锁机;0：解锁
       * </pre>
       */
      public int getDevLock() {
        return devLock_;
      }
      /**
       * <code>optional int32 devLock = 5;</code>
       *
       * <pre>
       *设备锁操作 1：锁机;0：解锁
       * </pre>
       */
      public Builder setDevLock(int value) {
        bitField0_ |= 0x00000010;
        devLock_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 devLock = 5;</code>
       *
       * <pre>
       *设备锁操作 1：锁机;0：解锁
       * </pre>
       */
      public Builder clearDevLock() {
        bitField0_ = (bitField0_ & ~0x00000010);
        devLock_ = 0;
        onChanged();
        return this;
      }

      // optional int32 devStatus = 6;
      private int devStatus_ ;
      /**
       * <code>optional int32 devStatus = 6;</code>
       *
       * <pre>
       *设备状态 1:锁机;2：工作;3：调试
       * </pre>
       */
      public boolean hasDevStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 devStatus = 6;</code>
       *
       * <pre>
       *设备状态 1:锁机;2：工作;3：调试
       * </pre>
       */
      public int getDevStatus() {
        return devStatus_;
      }
      /**
       * <code>optional int32 devStatus = 6;</code>
       *
       * <pre>
       *设备状态 1:锁机;2：工作;3：调试
       * </pre>
       */
      public Builder setDevStatus(int value) {
        bitField0_ |= 0x00000020;
        devStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 devStatus = 6;</code>
       *
       * <pre>
       *设备状态 1:锁机;2：工作;3：调试
       * </pre>
       */
      public Builder clearDevStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        devStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int32 singleMeasure = 7;
      private int singleMeasure_ ;
      /**
       * <code>optional int32 singleMeasure = 7;</code>
       *
       * <pre>
       *单次加注量
       * </pre>
       */
      public boolean hasSingleMeasure() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 singleMeasure = 7;</code>
       *
       * <pre>
       *单次加注量
       * </pre>
       */
      public int getSingleMeasure() {
        return singleMeasure_;
      }
      /**
       * <code>optional int32 singleMeasure = 7;</code>
       *
       * <pre>
       *单次加注量
       * </pre>
       */
      public Builder setSingleMeasure(int value) {
        bitField0_ |= 0x00000040;
        singleMeasure_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 singleMeasure = 7;</code>
       *
       * <pre>
       *单次加注量
       * </pre>
       */
      public Builder clearSingleMeasure() {
        bitField0_ = (bitField0_ & ~0x00000040);
        singleMeasure_ = 0;
        onChanged();
        return this;
      }

      // optional int32 singleAmount = 8;
      private int singleAmount_ ;
      /**
       * <code>optional int32 singleAmount = 8;</code>
       *
       * <pre>
       *单次加注金额
       * </pre>
       */
      public boolean hasSingleAmount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 singleAmount = 8;</code>
       *
       * <pre>
       *单次加注金额
       * </pre>
       */
      public int getSingleAmount() {
        return singleAmount_;
      }
      /**
       * <code>optional int32 singleAmount = 8;</code>
       *
       * <pre>
       *单次加注金额
       * </pre>
       */
      public Builder setSingleAmount(int value) {
        bitField0_ |= 0x00000080;
        singleAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 singleAmount = 8;</code>
       *
       * <pre>
       *单次加注金额
       * </pre>
       */
      public Builder clearSingleAmount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        singleAmount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainder = 9;
      private int remainder_ ;
      /**
       * <code>optional int32 remainder = 9;</code>
       *
       * <pre>
       *剩余量
       * </pre>
       */
      public boolean hasRemainder() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 remainder = 9;</code>
       *
       * <pre>
       *剩余量
       * </pre>
       */
      public int getRemainder() {
        return remainder_;
      }
      /**
       * <code>optional int32 remainder = 9;</code>
       *
       * <pre>
       *剩余量
       * </pre>
       */
      public Builder setRemainder(int value) {
        bitField0_ |= 0x00000100;
        remainder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainder = 9;</code>
       *
       * <pre>
       *剩余量
       * </pre>
       */
      public Builder clearRemainder() {
        bitField0_ = (bitField0_ & ~0x00000100);
        remainder_ = 0;
        onChanged();
        return this;
      }

      // optional int64 totalMeasure = 10;
      private long totalMeasure_ ;
      /**
       * <code>optional int64 totalMeasure = 10;</code>
       *
       * <pre>
       *累计加注量
       * </pre>
       */
      public boolean hasTotalMeasure() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 totalMeasure = 10;</code>
       *
       * <pre>
       *累计加注量
       * </pre>
       */
      public long getTotalMeasure() {
        return totalMeasure_;
      }
      /**
       * <code>optional int64 totalMeasure = 10;</code>
       *
       * <pre>
       *累计加注量
       * </pre>
       */
      public Builder setTotalMeasure(long value) {
        bitField0_ |= 0x00000200;
        totalMeasure_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 totalMeasure = 10;</code>
       *
       * <pre>
       *累计加注量
       * </pre>
       */
      public Builder clearTotalMeasure() {
        bitField0_ = (bitField0_ & ~0x00000200);
        totalMeasure_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 totalAmount = 11;
      private long totalAmount_ ;
      /**
       * <code>optional int64 totalAmount = 11;</code>
       *
       * <pre>
       *累计加注金额
       * </pre>
       */
      public boolean hasTotalAmount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 totalAmount = 11;</code>
       *
       * <pre>
       *累计加注金额
       * </pre>
       */
      public long getTotalAmount() {
        return totalAmount_;
      }
      /**
       * <code>optional int64 totalAmount = 11;</code>
       *
       * <pre>
       *累计加注金额
       * </pre>
       */
      public Builder setTotalAmount(long value) {
        bitField0_ |= 0x00000400;
        totalAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 totalAmount = 11;</code>
       *
       * <pre>
       *累计加注金额
       * </pre>
       */
      public Builder clearTotalAmount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        totalAmount_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 workTime = 12;
      private long workTime_ ;
      /**
       * <code>optional int64 workTime = 12;</code>
       *
       * <pre>
       *工作时间累计
       * </pre>
       */
      public boolean hasWorkTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 workTime = 12;</code>
       *
       * <pre>
       *工作时间累计
       * </pre>
       */
      public long getWorkTime() {
        return workTime_;
      }
      /**
       * <code>optional int64 workTime = 12;</code>
       *
       * <pre>
       *工作时间累计
       * </pre>
       */
      public Builder setWorkTime(long value) {
        bitField0_ |= 0x00000800;
        workTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 workTime = 12;</code>
       *
       * <pre>
       *工作时间累计
       * </pre>
       */
      public Builder clearWorkTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        workTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 workCount = 13;
      private int workCount_ ;
      /**
       * <code>optional int32 workCount = 13;</code>
       *
       * <pre>
       *工作次数累计
       * </pre>
       */
      public boolean hasWorkCount() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 workCount = 13;</code>
       *
       * <pre>
       *工作次数累计
       * </pre>
       */
      public int getWorkCount() {
        return workCount_;
      }
      /**
       * <code>optional int32 workCount = 13;</code>
       *
       * <pre>
       *工作次数累计
       * </pre>
       */
      public Builder setWorkCount(int value) {
        bitField0_ |= 0x00001000;
        workCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 workCount = 13;</code>
       *
       * <pre>
       *工作次数累计
       * </pre>
       */
      public Builder clearWorkCount() {
        bitField0_ = (bitField0_ & ~0x00001000);
        workCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.VKModBus)
    }

    static {
      defaultInstance = new VKModBus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.VKModBus)
  }

  public interface KeLongInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 quickBrakeCount = 1;
    /**
     * <code>optional int32 quickBrakeCount = 1;</code>
     *
     * <pre>
     *急刹车（减速）次数
     * </pre>
     */
    boolean hasQuickBrakeCount();
    /**
     * <code>optional int32 quickBrakeCount = 1;</code>
     *
     * <pre>
     *急刹车（减速）次数
     * </pre>
     */
    int getQuickBrakeCount();

    // optional int32 quickSpeedUpCount = 2;
    /**
     * <code>optional int32 quickSpeedUpCount = 2;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    boolean hasQuickSpeedUpCount();
    /**
     * <code>optional int32 quickSpeedUpCount = 2;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    int getQuickSpeedUpCount();

    // optional int32 quickTurnCount = 3;
    /**
     * <code>optional int32 quickTurnCount = 3;</code>
     *
     * <pre>
     *急转弯次数 
     * </pre>
     */
    boolean hasQuickTurnCount();
    /**
     * <code>optional int32 quickTurnCount = 3;</code>
     *
     * <pre>
     *急转弯次数 
     * </pre>
     */
    int getQuickTurnCount();

    // optional int32 collideCount = 4;
    /**
     * <code>optional int32 collideCount = 4;</code>
     *
     * <pre>
     *碰撞次数
     * </pre>
     */
    boolean hasCollideCount();
    /**
     * <code>optional int32 collideCount = 4;</code>
     *
     * <pre>
     *碰撞次数
     * </pre>
     */
    int getCollideCount();

    // optional int32 idleAlarmProperty = 5;
    /**
     * <code>optional int32 idleAlarmProperty = 5;</code>
     *
     * <pre>
     *怠速报警属性，1-报警触发，0-报警结束，车辆非怠速时，上报解除
     * </pre>
     */
    boolean hasIdleAlarmProperty();
    /**
     * <code>optional int32 idleAlarmProperty = 5;</code>
     *
     * <pre>
     *怠速报警属性，1-报警触发，0-报警结束，车辆非怠速时，上报解除
     * </pre>
     */
    int getIdleAlarmProperty();

    // optional int32 idleTime = 6;
    /**
     * <code>optional int32 idleTime = 6;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    boolean hasIdleTime();
    /**
     * <code>optional int32 idleTime = 6;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    int getIdleTime();

    // optional int32 idleTotalOil = 7;
    /**
     * <code>optional int32 idleTotalOil = 7;</code>
     *
     * <pre>
     *怠速过程中累计耗油量，单位mL(毫升)
     * </pre>
     */
    boolean hasIdleTotalOil();
    /**
     * <code>optional int32 idleTotalOil = 7;</code>
     *
     * <pre>
     *怠速过程中累计耗油量，单位mL(毫升)
     * </pre>
     */
    int getIdleTotalOil();
  }
  /**
   * Protobuf type {@code gboss.KeLongInfo}
   *
   * <pre>
   *************************************************************************************
   * 科隆附加信息
   ************************************************************************************
   * </pre>
   */
  public static final class KeLongInfo extends
      com.google.protobuf.GeneratedMessage
      implements KeLongInfoOrBuilder {
    // Use KeLongInfo.newBuilder() to construct.
    private KeLongInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private KeLongInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final KeLongInfo defaultInstance;
    public static KeLongInfo getDefaultInstance() {
      return defaultInstance;
    }

    public KeLongInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private KeLongInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              quickBrakeCount_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              quickSpeedUpCount_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              quickTurnCount_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              collideCount_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              idleAlarmProperty_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              idleTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              idleTotalOil_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_KeLongInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_KeLongInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<KeLongInfo> PARSER =
        new com.google.protobuf.AbstractParser<KeLongInfo>() {
      public KeLongInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeLongInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<KeLongInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 quickBrakeCount = 1;
    public static final int QUICKBRAKECOUNT_FIELD_NUMBER = 1;
    private int quickBrakeCount_;
    /**
     * <code>optional int32 quickBrakeCount = 1;</code>
     *
     * <pre>
     *急刹车（减速）次数
     * </pre>
     */
    public boolean hasQuickBrakeCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 quickBrakeCount = 1;</code>
     *
     * <pre>
     *急刹车（减速）次数
     * </pre>
     */
    public int getQuickBrakeCount() {
      return quickBrakeCount_;
    }

    // optional int32 quickSpeedUpCount = 2;
    public static final int QUICKSPEEDUPCOUNT_FIELD_NUMBER = 2;
    private int quickSpeedUpCount_;
    /**
     * <code>optional int32 quickSpeedUpCount = 2;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    public boolean hasQuickSpeedUpCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 quickSpeedUpCount = 2;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    public int getQuickSpeedUpCount() {
      return quickSpeedUpCount_;
    }

    // optional int32 quickTurnCount = 3;
    public static final int QUICKTURNCOUNT_FIELD_NUMBER = 3;
    private int quickTurnCount_;
    /**
     * <code>optional int32 quickTurnCount = 3;</code>
     *
     * <pre>
     *急转弯次数 
     * </pre>
     */
    public boolean hasQuickTurnCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 quickTurnCount = 3;</code>
     *
     * <pre>
     *急转弯次数 
     * </pre>
     */
    public int getQuickTurnCount() {
      return quickTurnCount_;
    }

    // optional int32 collideCount = 4;
    public static final int COLLIDECOUNT_FIELD_NUMBER = 4;
    private int collideCount_;
    /**
     * <code>optional int32 collideCount = 4;</code>
     *
     * <pre>
     *碰撞次数
     * </pre>
     */
    public boolean hasCollideCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 collideCount = 4;</code>
     *
     * <pre>
     *碰撞次数
     * </pre>
     */
    public int getCollideCount() {
      return collideCount_;
    }

    // optional int32 idleAlarmProperty = 5;
    public static final int IDLEALARMPROPERTY_FIELD_NUMBER = 5;
    private int idleAlarmProperty_;
    /**
     * <code>optional int32 idleAlarmProperty = 5;</code>
     *
     * <pre>
     *怠速报警属性，1-报警触发，0-报警结束，车辆非怠速时，上报解除
     * </pre>
     */
    public boolean hasIdleAlarmProperty() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 idleAlarmProperty = 5;</code>
     *
     * <pre>
     *怠速报警属性，1-报警触发，0-报警结束，车辆非怠速时，上报解除
     * </pre>
     */
    public int getIdleAlarmProperty() {
      return idleAlarmProperty_;
    }

    // optional int32 idleTime = 6;
    public static final int IDLETIME_FIELD_NUMBER = 6;
    private int idleTime_;
    /**
     * <code>optional int32 idleTime = 6;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    public boolean hasIdleTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 idleTime = 6;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    public int getIdleTime() {
      return idleTime_;
    }

    // optional int32 idleTotalOil = 7;
    public static final int IDLETOTALOIL_FIELD_NUMBER = 7;
    private int idleTotalOil_;
    /**
     * <code>optional int32 idleTotalOil = 7;</code>
     *
     * <pre>
     *怠速过程中累计耗油量，单位mL(毫升)
     * </pre>
     */
    public boolean hasIdleTotalOil() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 idleTotalOil = 7;</code>
     *
     * <pre>
     *怠速过程中累计耗油量，单位mL(毫升)
     * </pre>
     */
    public int getIdleTotalOil() {
      return idleTotalOil_;
    }

    private void initFields() {
      quickBrakeCount_ = 0;
      quickSpeedUpCount_ = 0;
      quickTurnCount_ = 0;
      collideCount_ = 0;
      idleAlarmProperty_ = 0;
      idleTime_ = 0;
      idleTotalOil_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, quickBrakeCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, quickSpeedUpCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, quickTurnCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, collideCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, idleAlarmProperty_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, idleTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, idleTotalOil_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, quickBrakeCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, quickSpeedUpCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, quickTurnCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, collideCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, idleAlarmProperty_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, idleTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, idleTotalOil_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.KeLongInfo}
     *
     * <pre>
     *************************************************************************************
     * 科隆附加信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_KeLongInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_KeLongInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        quickBrakeCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        quickSpeedUpCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        quickTurnCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        collideCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        idleAlarmProperty_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        idleTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        idleTotalOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_KeLongInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.quickBrakeCount_ = quickBrakeCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.quickSpeedUpCount_ = quickSpeedUpCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.quickTurnCount_ = quickTurnCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.collideCount_ = collideCount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.idleAlarmProperty_ = idleAlarmProperty_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.idleTime_ = idleTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.idleTotalOil_ = idleTotalOil_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.getDefaultInstance()) return this;
        if (other.hasQuickBrakeCount()) {
          setQuickBrakeCount(other.getQuickBrakeCount());
        }
        if (other.hasQuickSpeedUpCount()) {
          setQuickSpeedUpCount(other.getQuickSpeedUpCount());
        }
        if (other.hasQuickTurnCount()) {
          setQuickTurnCount(other.getQuickTurnCount());
        }
        if (other.hasCollideCount()) {
          setCollideCount(other.getCollideCount());
        }
        if (other.hasIdleAlarmProperty()) {
          setIdleAlarmProperty(other.getIdleAlarmProperty());
        }
        if (other.hasIdleTime()) {
          setIdleTime(other.getIdleTime());
        }
        if (other.hasIdleTotalOil()) {
          setIdleTotalOil(other.getIdleTotalOil());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 quickBrakeCount = 1;
      private int quickBrakeCount_ ;
      /**
       * <code>optional int32 quickBrakeCount = 1;</code>
       *
       * <pre>
       *急刹车（减速）次数
       * </pre>
       */
      public boolean hasQuickBrakeCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 quickBrakeCount = 1;</code>
       *
       * <pre>
       *急刹车（减速）次数
       * </pre>
       */
      public int getQuickBrakeCount() {
        return quickBrakeCount_;
      }
      /**
       * <code>optional int32 quickBrakeCount = 1;</code>
       *
       * <pre>
       *急刹车（减速）次数
       * </pre>
       */
      public Builder setQuickBrakeCount(int value) {
        bitField0_ |= 0x00000001;
        quickBrakeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quickBrakeCount = 1;</code>
       *
       * <pre>
       *急刹车（减速）次数
       * </pre>
       */
      public Builder clearQuickBrakeCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        quickBrakeCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quickSpeedUpCount = 2;
      private int quickSpeedUpCount_ ;
      /**
       * <code>optional int32 quickSpeedUpCount = 2;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public boolean hasQuickSpeedUpCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 quickSpeedUpCount = 2;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public int getQuickSpeedUpCount() {
        return quickSpeedUpCount_;
      }
      /**
       * <code>optional int32 quickSpeedUpCount = 2;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public Builder setQuickSpeedUpCount(int value) {
        bitField0_ |= 0x00000002;
        quickSpeedUpCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quickSpeedUpCount = 2;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public Builder clearQuickSpeedUpCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quickSpeedUpCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quickTurnCount = 3;
      private int quickTurnCount_ ;
      /**
       * <code>optional int32 quickTurnCount = 3;</code>
       *
       * <pre>
       *急转弯次数 
       * </pre>
       */
      public boolean hasQuickTurnCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 quickTurnCount = 3;</code>
       *
       * <pre>
       *急转弯次数 
       * </pre>
       */
      public int getQuickTurnCount() {
        return quickTurnCount_;
      }
      /**
       * <code>optional int32 quickTurnCount = 3;</code>
       *
       * <pre>
       *急转弯次数 
       * </pre>
       */
      public Builder setQuickTurnCount(int value) {
        bitField0_ |= 0x00000004;
        quickTurnCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quickTurnCount = 3;</code>
       *
       * <pre>
       *急转弯次数 
       * </pre>
       */
      public Builder clearQuickTurnCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        quickTurnCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 collideCount = 4;
      private int collideCount_ ;
      /**
       * <code>optional int32 collideCount = 4;</code>
       *
       * <pre>
       *碰撞次数
       * </pre>
       */
      public boolean hasCollideCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 collideCount = 4;</code>
       *
       * <pre>
       *碰撞次数
       * </pre>
       */
      public int getCollideCount() {
        return collideCount_;
      }
      /**
       * <code>optional int32 collideCount = 4;</code>
       *
       * <pre>
       *碰撞次数
       * </pre>
       */
      public Builder setCollideCount(int value) {
        bitField0_ |= 0x00000008;
        collideCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 collideCount = 4;</code>
       *
       * <pre>
       *碰撞次数
       * </pre>
       */
      public Builder clearCollideCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        collideCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 idleAlarmProperty = 5;
      private int idleAlarmProperty_ ;
      /**
       * <code>optional int32 idleAlarmProperty = 5;</code>
       *
       * <pre>
       *怠速报警属性，1-报警触发，0-报警结束，车辆非怠速时，上报解除
       * </pre>
       */
      public boolean hasIdleAlarmProperty() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 idleAlarmProperty = 5;</code>
       *
       * <pre>
       *怠速报警属性，1-报警触发，0-报警结束，车辆非怠速时，上报解除
       * </pre>
       */
      public int getIdleAlarmProperty() {
        return idleAlarmProperty_;
      }
      /**
       * <code>optional int32 idleAlarmProperty = 5;</code>
       *
       * <pre>
       *怠速报警属性，1-报警触发，0-报警结束，车辆非怠速时，上报解除
       * </pre>
       */
      public Builder setIdleAlarmProperty(int value) {
        bitField0_ |= 0x00000010;
        idleAlarmProperty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 idleAlarmProperty = 5;</code>
       *
       * <pre>
       *怠速报警属性，1-报警触发，0-报警结束，车辆非怠速时，上报解除
       * </pre>
       */
      public Builder clearIdleAlarmProperty() {
        bitField0_ = (bitField0_ & ~0x00000010);
        idleAlarmProperty_ = 0;
        onChanged();
        return this;
      }

      // optional int32 idleTime = 6;
      private int idleTime_ ;
      /**
       * <code>optional int32 idleTime = 6;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public boolean hasIdleTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 idleTime = 6;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public int getIdleTime() {
        return idleTime_;
      }
      /**
       * <code>optional int32 idleTime = 6;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public Builder setIdleTime(int value) {
        bitField0_ |= 0x00000020;
        idleTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 idleTime = 6;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public Builder clearIdleTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        idleTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 idleTotalOil = 7;
      private int idleTotalOil_ ;
      /**
       * <code>optional int32 idleTotalOil = 7;</code>
       *
       * <pre>
       *怠速过程中累计耗油量，单位mL(毫升)
       * </pre>
       */
      public boolean hasIdleTotalOil() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 idleTotalOil = 7;</code>
       *
       * <pre>
       *怠速过程中累计耗油量，单位mL(毫升)
       * </pre>
       */
      public int getIdleTotalOil() {
        return idleTotalOil_;
      }
      /**
       * <code>optional int32 idleTotalOil = 7;</code>
       *
       * <pre>
       *怠速过程中累计耗油量，单位mL(毫升)
       * </pre>
       */
      public Builder setIdleTotalOil(int value) {
        bitField0_ |= 0x00000040;
        idleTotalOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 idleTotalOil = 7;</code>
       *
       * <pre>
       *怠速过程中累计耗油量，单位mL(毫升)
       * </pre>
       */
      public Builder clearIdleTotalOil() {
        bitField0_ = (bitField0_ & ~0x00000040);
        idleTotalOil_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.KeLongInfo)
    }

    static {
      defaultInstance = new KeLongInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.KeLongInfo)
  }

  public interface GpsBaseInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 gpsTime = 1;
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    boolean hasGpsTime();
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    long getGpsTime();

    // required bool loc = 2;
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    boolean hasLoc();
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    boolean getLoc();

    // required int32 lat = 3;
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    boolean hasLat();
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    int getLat();

    // required int32 lng = 4;
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    boolean hasLng();
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    int getLng();

    // required int32 speed = 5;
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    int getSpeed();

    // required int32 course = 6;
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    boolean hasCourse();
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    int getCourse();

    // repeated int32 status = 7;
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    java.util.List<java.lang.Integer> getStatusList();
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    int getStatusCount();
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    int getStatus(int index);

    // optional int32 totalDistance = 8;
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    boolean hasTotalDistance();
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    int getTotalDistance();

    // optional int32 oil = 9;
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：十分之一升）
     * </pre>
     */
    boolean hasOil();
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：十分之一升）
     * </pre>
     */
    int getOil();

    // optional int32 oilPercent = 10;
    /**
     * <code>optional int32 oilPercent = 10;</code>
     *
     * <pre>
     *油箱中油量千分比
     * </pre>
     */
    boolean hasOilPercent();
    /**
     * <code>optional int32 oilPercent = 10;</code>
     *
     * <pre>
     *油箱中油量千分比
     * </pre>
     */
    int getOilPercent();

    // optional int32 temperature1 = 11;
    /**
     * <code>optional int32 temperature1 = 11;</code>
     *
     * <pre>
     *温度1（单位：十分之一摄氏度）
     * </pre>
     */
    boolean hasTemperature1();
    /**
     * <code>optional int32 temperature1 = 11;</code>
     *
     * <pre>
     *温度1（单位：十分之一摄氏度）
     * </pre>
     */
    int getTemperature1();

    // optional int32 temperature2 = 12;
    /**
     * <code>optional int32 temperature2 = 12;</code>
     *
     * <pre>
     *温度2（单位：十分之一摄氏度）
     * </pre>
     */
    boolean hasTemperature2();
    /**
     * <code>optional int32 temperature2 = 12;</code>
     *
     * <pre>
     *温度2（单位：十分之一摄氏度）
     * </pre>
     */
    int getTemperature2();

    // repeated .gboss.MapEntry appendParams = 13;
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> 
        getAppendParamsList();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getAppendParams(int index);
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    int getAppendParamsCount();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
        getAppendParamsOrBuilderList();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
        int index);

    // optional .gboss.OBDInfo obdInfo = 14;
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
     *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
     *次低位表示是否连接：0未连接、1连接上
     *次高位表示是否故障：0无故障、1有故障, 暂时为0
     *最高位保留填0
     *终端协议中0=0,1=1,2=3
     * </pre>
     */
    boolean hasObdInfo();
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
     *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
     *次低位表示是否连接：0未连接、1连接上
     *次高位表示是否故障：0无故障、1有故障, 暂时为0
     *最高位保留填0
     *终端协议中0=0,1=1,2=3
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo getObdInfo();
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
     *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
     *次低位表示是否连接：0未连接、1连接上
     *次高位表示是否故障：0无故障、1有故障, 暂时为0
     *最高位保留填0
     *终端协议中0=0,1=1,2=3
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.OBDInfoOrBuilder getObdInfoOrBuilder();

    // repeated .gboss.BaseStationInfo baseStations = 15;
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo> 
        getBaseStationsList();
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo getBaseStations(int index);
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    int getBaseStationsCount();
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder> 
        getBaseStationsOrBuilderList();
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder getBaseStationsOrBuilder(
        int index);

    // optional .gboss.BaseStationAddress address = 16;
    /**
     * <code>optional .gboss.BaseStationAddress address = 16;</code>
     *
     * <pre>
     *基站定位信息
     * </pre>
     */
    boolean hasAddress();
    /**
     * <code>optional .gboss.BaseStationAddress address = 16;</code>
     *
     * <pre>
     *基站定位信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress getAddress();
    /**
     * <code>optional .gboss.BaseStationAddress address = 16;</code>
     *
     * <pre>
     *基站定位信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddressOrBuilder getAddressOrBuilder();

    // optional .gboss.YDWInfo ydwInfo = 17;
    /**
     * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
     *
     * <pre>
     *一动网信息
     * </pre>
     */
    boolean hasYdwInfo();
    /**
     * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
     *
     * <pre>
     *一动网信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo getYdwInfo();
    /**
     * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
     *
     * <pre>
     *一动网信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.YDWInfoOrBuilder getYdwInfoOrBuilder();

    // optional int32 signal = 18;
    /**
     * <code>optional int32 signal = 18;</code>
     *
     * <pre>
     *通讯模块信号强度(0~31, 31表示信号最好)
     * </pre>
     */
    boolean hasSignal();
    /**
     * <code>optional int32 signal = 18;</code>
     *
     * <pre>
     *通讯模块信号强度(0~31, 31表示信号最好)
     * </pre>
     */
    int getSignal();

    // optional .gboss.FaultLightStatus faultLightStatus = 19;
    /**
     * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
     *
     * <pre>
     *故障灯状态
     * </pre>
     */
    boolean hasFaultLightStatus();
    /**
     * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
     *
     * <pre>
     *故障灯状态
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus getFaultLightStatus();
    /**
     * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
     *
     * <pre>
     *故障灯状态
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatusOrBuilder getFaultLightStatusOrBuilder();

    // optional int32 height = 20;
    /**
     * <code>optional int32 height = 20;</code>
     *
     * <pre>
     *高度（当前位置海拔，单位：米）
     * </pre>
     */
    boolean hasHeight();
    /**
     * <code>optional int32 height = 20;</code>
     *
     * <pre>
     *高度（当前位置海拔，单位：米）
     * </pre>
     */
    int getHeight();

    // optional .gboss.PengaodaGpsInfo padInfo = 21;
    /**
     * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
     *
     * <pre>
     *鹏奥达gps附加信息
     * </pre>
     */
    boolean hasPadInfo();
    /**
     * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
     *
     * <pre>
     *鹏奥达gps附加信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo getPadInfo();
    /**
     * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
     *
     * <pre>
     *鹏奥达gps附加信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfoOrBuilder getPadInfoOrBuilder();

    // optional .gboss.BeiJingInfo beijingInfo = 22;
    /**
     * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
     *
     * <pre>
     *北汽附加信息
     * </pre>
     */
    boolean hasBeijingInfo();
    /**
     * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
     *
     * <pre>
     *北汽附加信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo getBeijingInfo();
    /**
     * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
     *
     * <pre>
     *北汽附加信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfoOrBuilder getBeijingInfoOrBuilder();

    // optional int32 AccTimeLen = 23;
    /**
     * <code>optional int32 AccTimeLen = 23;</code>
     *
     * <pre>
     *Acc On 或 Acc Off时长    
     * </pre>
     */
    boolean hasAccTimeLen();
    /**
     * <code>optional int32 AccTimeLen = 23;</code>
     *
     * <pre>
     *Acc On 或 Acc Off时长    
     * </pre>
     */
    int getAccTimeLen();

    // optional .gboss.BatteryVoltageInfo batteryvoltage = 24;
    /**
     * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
     *
     * <pre>
     *动力蓄电池电压信息
     * </pre>
     */
    boolean hasBatteryvoltage();
    /**
     * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
     *
     * <pre>
     *动力蓄电池电压信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo getBatteryvoltage();
    /**
     * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
     *
     * <pre>
     *动力蓄电池电压信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfoOrBuilder getBatteryvoltageOrBuilder();

    // optional .gboss.BatteryTemperatureInfo batterytemperature = 25;
    /**
     * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
     *
     * <pre>
     *动力蓄电池温度信息
     * </pre>
     */
    boolean hasBatterytemperature();
    /**
     * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
     *
     * <pre>
     *动力蓄电池温度信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo getBatterytemperature();
    /**
     * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
     *
     * <pre>
     *动力蓄电池温度信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfoOrBuilder getBatterytemperatureOrBuilder();

    // optional .gboss.BatteryExtremumInfo batteryextremum = 26;
    /**
     * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
     *
     * <pre>
     *动力蓄电池极值信息
     * </pre>
     */
    boolean hasBatteryextremum();
    /**
     * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
     *
     * <pre>
     *动力蓄电池极值信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo getBatteryextremum();
    /**
     * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
     *
     * <pre>
     *动力蓄电池极值信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfoOrBuilder getBatteryextremumOrBuilder();

    // optional .gboss.VKModBus vkmodbus = 27;
    /**
     * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
     *
     * <pre>
     *微科尿素加注信息
     * </pre>
     */
    boolean hasVkmodbus();
    /**
     * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
     *
     * <pre>
     *微科尿素加注信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.VKModBus getVkmodbus();
    /**
     * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
     *
     * <pre>
     *微科尿素加注信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.VKModBusOrBuilder getVkmodbusOrBuilder();

    // optional int32 satelliteCount = 28;
    /**
     * <code>optional int32 satelliteCount = 28;</code>
     *
     * <pre>
     *定位卫星数
     * </pre>
     */
    boolean hasSatelliteCount();
    /**
     * <code>optional int32 satelliteCount = 28;</code>
     *
     * <pre>
     *定位卫星数
     * </pre>
     */
    int getSatelliteCount();

    // optional int32 pdop = 29;
    /**
     * <code>optional int32 pdop = 29;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    boolean hasPdop();
    /**
     * <code>optional int32 pdop = 29;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    int getPdop();

    // optional int32 hdop = 30;
    /**
     * <code>optional int32 hdop = 30;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    boolean hasHdop();
    /**
     * <code>optional int32 hdop = 30;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    int getHdop();

    // optional int32 vdop = 31;
    /**
     * <code>optional int32 vdop = 31;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    boolean hasVdop();
    /**
     * <code>optional int32 vdop = 31;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    int getVdop();

    // optional .gboss.KeLongInfo keLongInfo = 32;
    /**
     * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
     *
     * <pre>
     *科隆附加信息
     * </pre>
     */
    boolean hasKeLongInfo();
    /**
     * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
     *
     * <pre>
     *科隆附加信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo getKeLongInfo();
    /**
     * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
     *
     * <pre>
     *科隆附加信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfoOrBuilder getKeLongInfoOrBuilder();

    // repeated .gboss.WifiAPInfo wifiAPInfos = 33;
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo> 
        getWifiAPInfosList();
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo getWifiAPInfos(int index);
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    int getWifiAPInfosCount();
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder> 
        getWifiAPInfosOrBuilderList();
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder getWifiAPInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gboss.GpsBaseInfo}
   *
   * <pre>
   *************************************************************************************
   * GPS基本信息
   ************************************************************************************
   * </pre>
   */
  public static final class GpsBaseInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsBaseInfoOrBuilder {
    // Use GpsBaseInfo.newBuilder() to construct.
    private GpsBaseInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsBaseInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsBaseInfo defaultInstance;
    public static GpsBaseInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsBaseInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsBaseInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gpsTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              loc_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lat_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              lng_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              speed_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              course_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                status_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              status_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                status_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                status_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              totalDistance_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              oil_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              oilPercent_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              temperature1_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              temperature2_ = input.readInt32();
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                appendParams_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry>();
                mutable_bitField0_ |= 0x00001000;
              }
              appendParams_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = obdInfo_.toBuilder();
              }
              obdInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(obdInfo_);
                obdInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                baseStations_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo>();
                mutable_bitField0_ |= 0x00004000;
              }
              baseStations_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.PARSER, extensionRegistry));
              break;
            }
            case 130: {
              cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = address_.toBuilder();
              }
              address_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(address_);
                address_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 138: {
              cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = ydwInfo_.toBuilder();
              }
              ydwInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ydwInfo_);
                ydwInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 144: {
              bitField0_ |= 0x00004000;
              signal_ = input.readInt32();
              break;
            }
            case 154: {
              cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = faultLightStatus_.toBuilder();
              }
              faultLightStatus_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(faultLightStatus_);
                faultLightStatus_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 160: {
              bitField0_ |= 0x00010000;
              height_ = input.readInt32();
              break;
            }
            case 170: {
              cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = padInfo_.toBuilder();
              }
              padInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(padInfo_);
                padInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 178: {
              cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = beijingInfo_.toBuilder();
              }
              beijingInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(beijingInfo_);
                beijingInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 184: {
              bitField0_ |= 0x00080000;
              accTimeLen_ = input.readInt32();
              break;
            }
            case 194: {
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = batteryvoltage_.toBuilder();
              }
              batteryvoltage_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(batteryvoltage_);
                batteryvoltage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 202: {
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = batterytemperature_.toBuilder();
              }
              batterytemperature_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(batterytemperature_);
                batterytemperature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
            case 210: {
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = batteryextremum_.toBuilder();
              }
              batteryextremum_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(batteryextremum_);
                batteryextremum_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
            case 218: {
              cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = vkmodbus_.toBuilder();
              }
              vkmodbus_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vkmodbus_);
                vkmodbus_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 224: {
              bitField0_ |= 0x01000000;
              satelliteCount_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x02000000;
              pdop_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x04000000;
              hdop_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x08000000;
              vdop_ = input.readInt32();
              break;
            }
            case 258: {
              cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x10000000) == 0x10000000)) {
                subBuilder = keLongInfo_.toBuilder();
              }
              keLongInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keLongInfo_);
                keLongInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x10000000;
              break;
            }
            case 266: {
              if (!((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
                wifiAPInfos_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo>();
                mutable_bitField1_ |= 0x00000001;
              }
              wifiAPInfos_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = java.util.Collections.unmodifiableList(status_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          appendParams_ = java.util.Collections.unmodifiableList(appendParams_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          baseStations_ = java.util.Collections.unmodifiableList(baseStations_);
        }
        if (((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
          wifiAPInfos_ = java.util.Collections.unmodifiableList(wifiAPInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsBaseInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsBaseInfo>() {
      public GpsBaseInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsBaseInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsBaseInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 gpsTime = 1;
    public static final int GPSTIME_FIELD_NUMBER = 1;
    private long gpsTime_;
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public long getGpsTime() {
      return gpsTime_;
    }

    // required bool loc = 2;
    public static final int LOC_FIELD_NUMBER = 2;
    private boolean loc_;
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    public boolean hasLoc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    public boolean getLoc() {
      return loc_;
    }

    // required int32 lat = 3;
    public static final int LAT_FIELD_NUMBER = 3;
    private int lat_;
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public boolean hasLat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public int getLat() {
      return lat_;
    }

    // required int32 lng = 4;
    public static final int LNG_FIELD_NUMBER = 4;
    private int lng_;
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public boolean hasLng() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public int getLng() {
      return lng_;
    }

    // required int32 speed = 5;
    public static final int SPEED_FIELD_NUMBER = 5;
    private int speed_;
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public int getSpeed() {
      return speed_;
    }

    // required int32 course = 6;
    public static final int COURSE_FIELD_NUMBER = 6;
    private int course_;
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    public boolean hasCourse() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    public int getCourse() {
      return course_;
    }

    // repeated int32 status = 7;
    public static final int STATUS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> status_;
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getStatusList() {
      return status_;
    }
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public int getStatusCount() {
      return status_.size();
    }
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public int getStatus(int index) {
      return status_.get(index);
    }

    // optional int32 totalDistance = 8;
    public static final int TOTALDISTANCE_FIELD_NUMBER = 8;
    private int totalDistance_;
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public boolean hasTotalDistance() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public int getTotalDistance() {
      return totalDistance_;
    }

    // optional int32 oil = 9;
    public static final int OIL_FIELD_NUMBER = 9;
    private int oil_;
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：十分之一升）
     * </pre>
     */
    public boolean hasOil() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：十分之一升）
     * </pre>
     */
    public int getOil() {
      return oil_;
    }

    // optional int32 oilPercent = 10;
    public static final int OILPERCENT_FIELD_NUMBER = 10;
    private int oilPercent_;
    /**
     * <code>optional int32 oilPercent = 10;</code>
     *
     * <pre>
     *油箱中油量千分比
     * </pre>
     */
    public boolean hasOilPercent() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 oilPercent = 10;</code>
     *
     * <pre>
     *油箱中油量千分比
     * </pre>
     */
    public int getOilPercent() {
      return oilPercent_;
    }

    // optional int32 temperature1 = 11;
    public static final int TEMPERATURE1_FIELD_NUMBER = 11;
    private int temperature1_;
    /**
     * <code>optional int32 temperature1 = 11;</code>
     *
     * <pre>
     *温度1（单位：十分之一摄氏度）
     * </pre>
     */
    public boolean hasTemperature1() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 temperature1 = 11;</code>
     *
     * <pre>
     *温度1（单位：十分之一摄氏度）
     * </pre>
     */
    public int getTemperature1() {
      return temperature1_;
    }

    // optional int32 temperature2 = 12;
    public static final int TEMPERATURE2_FIELD_NUMBER = 12;
    private int temperature2_;
    /**
     * <code>optional int32 temperature2 = 12;</code>
     *
     * <pre>
     *温度2（单位：十分之一摄氏度）
     * </pre>
     */
    public boolean hasTemperature2() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 temperature2 = 12;</code>
     *
     * <pre>
     *温度2（单位：十分之一摄氏度）
     * </pre>
     */
    public int getTemperature2() {
      return temperature2_;
    }

    // repeated .gboss.MapEntry appendParams = 13;
    public static final int APPENDPARAMS_FIELD_NUMBER = 13;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> appendParams_;
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> getAppendParamsList() {
      return appendParams_;
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
        getAppendParamsOrBuilderList() {
      return appendParams_;
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    public int getAppendParamsCount() {
      return appendParams_.size();
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getAppendParams(int index) {
      return appendParams_.get(index);
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个):
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
        int index) {
      return appendParams_.get(index);
    }

    // optional .gboss.OBDInfo obdInfo = 14;
    public static final int OBDINFO_FIELD_NUMBER = 14;
    private cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo obdInfo_;
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
     *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
     *次低位表示是否连接：0未连接、1连接上
     *次高位表示是否故障：0无故障、1有故障, 暂时为0
     *最高位保留填0
     *终端协议中0=0,1=1,2=3
     * </pre>
     */
    public boolean hasObdInfo() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
     *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
     *次低位表示是否连接：0未连接、1连接上
     *次高位表示是否故障：0无故障、1有故障, 暂时为0
     *最高位保留填0
     *终端协议中0=0,1=1,2=3
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo getObdInfo() {
      return obdInfo_;
    }
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
     *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
     *次低位表示是否连接：0未连接、1连接上
     *次高位表示是否故障：0无故障、1有故障, 暂时为0
     *最高位保留填0
     *终端协议中0=0,1=1,2=3
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.OBDInfoOrBuilder getObdInfoOrBuilder() {
      return obdInfo_;
    }

    // repeated .gboss.BaseStationInfo baseStations = 15;
    public static final int BASESTATIONS_FIELD_NUMBER = 15;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo> baseStations_;
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo> getBaseStationsList() {
      return baseStations_;
    }
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder> 
        getBaseStationsOrBuilderList() {
      return baseStations_;
    }
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    public int getBaseStationsCount() {
      return baseStations_.size();
    }
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo getBaseStations(int index) {
      return baseStations_.get(index);
    }
    /**
     * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
     *
     * <pre>
     *基站信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder getBaseStationsOrBuilder(
        int index) {
      return baseStations_.get(index);
    }

    // optional .gboss.BaseStationAddress address = 16;
    public static final int ADDRESS_FIELD_NUMBER = 16;
    private cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress address_;
    /**
     * <code>optional .gboss.BaseStationAddress address = 16;</code>
     *
     * <pre>
     *基站定位信息
     * </pre>
     */
    public boolean hasAddress() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .gboss.BaseStationAddress address = 16;</code>
     *
     * <pre>
     *基站定位信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress getAddress() {
      return address_;
    }
    /**
     * <code>optional .gboss.BaseStationAddress address = 16;</code>
     *
     * <pre>
     *基站定位信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddressOrBuilder getAddressOrBuilder() {
      return address_;
    }

    // optional .gboss.YDWInfo ydwInfo = 17;
    public static final int YDWINFO_FIELD_NUMBER = 17;
    private cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo ydwInfo_;
    /**
     * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
     *
     * <pre>
     *一动网信息
     * </pre>
     */
    public boolean hasYdwInfo() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
     *
     * <pre>
     *一动网信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo getYdwInfo() {
      return ydwInfo_;
    }
    /**
     * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
     *
     * <pre>
     *一动网信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.YDWInfoOrBuilder getYdwInfoOrBuilder() {
      return ydwInfo_;
    }

    // optional int32 signal = 18;
    public static final int SIGNAL_FIELD_NUMBER = 18;
    private int signal_;
    /**
     * <code>optional int32 signal = 18;</code>
     *
     * <pre>
     *通讯模块信号强度(0~31, 31表示信号最好)
     * </pre>
     */
    public boolean hasSignal() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 signal = 18;</code>
     *
     * <pre>
     *通讯模块信号强度(0~31, 31表示信号最好)
     * </pre>
     */
    public int getSignal() {
      return signal_;
    }

    // optional .gboss.FaultLightStatus faultLightStatus = 19;
    public static final int FAULTLIGHTSTATUS_FIELD_NUMBER = 19;
    private cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus faultLightStatus_;
    /**
     * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
     *
     * <pre>
     *故障灯状态
     * </pre>
     */
    public boolean hasFaultLightStatus() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
     *
     * <pre>
     *故障灯状态
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus getFaultLightStatus() {
      return faultLightStatus_;
    }
    /**
     * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
     *
     * <pre>
     *故障灯状态
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatusOrBuilder getFaultLightStatusOrBuilder() {
      return faultLightStatus_;
    }

    // optional int32 height = 20;
    public static final int HEIGHT_FIELD_NUMBER = 20;
    private int height_;
    /**
     * <code>optional int32 height = 20;</code>
     *
     * <pre>
     *高度（当前位置海拔，单位：米）
     * </pre>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 height = 20;</code>
     *
     * <pre>
     *高度（当前位置海拔，单位：米）
     * </pre>
     */
    public int getHeight() {
      return height_;
    }

    // optional .gboss.PengaodaGpsInfo padInfo = 21;
    public static final int PADINFO_FIELD_NUMBER = 21;
    private cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo padInfo_;
    /**
     * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
     *
     * <pre>
     *鹏奥达gps附加信息
     * </pre>
     */
    public boolean hasPadInfo() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
     *
     * <pre>
     *鹏奥达gps附加信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo getPadInfo() {
      return padInfo_;
    }
    /**
     * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
     *
     * <pre>
     *鹏奥达gps附加信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfoOrBuilder getPadInfoOrBuilder() {
      return padInfo_;
    }

    // optional .gboss.BeiJingInfo beijingInfo = 22;
    public static final int BEIJINGINFO_FIELD_NUMBER = 22;
    private cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo beijingInfo_;
    /**
     * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
     *
     * <pre>
     *北汽附加信息
     * </pre>
     */
    public boolean hasBeijingInfo() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
     *
     * <pre>
     *北汽附加信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo getBeijingInfo() {
      return beijingInfo_;
    }
    /**
     * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
     *
     * <pre>
     *北汽附加信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfoOrBuilder getBeijingInfoOrBuilder() {
      return beijingInfo_;
    }

    // optional int32 AccTimeLen = 23;
    public static final int ACCTIMELEN_FIELD_NUMBER = 23;
    private int accTimeLen_;
    /**
     * <code>optional int32 AccTimeLen = 23;</code>
     *
     * <pre>
     *Acc On 或 Acc Off时长    
     * </pre>
     */
    public boolean hasAccTimeLen() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 AccTimeLen = 23;</code>
     *
     * <pre>
     *Acc On 或 Acc Off时长    
     * </pre>
     */
    public int getAccTimeLen() {
      return accTimeLen_;
    }

    // optional .gboss.BatteryVoltageInfo batteryvoltage = 24;
    public static final int BATTERYVOLTAGE_FIELD_NUMBER = 24;
    private cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo batteryvoltage_;
    /**
     * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
     *
     * <pre>
     *动力蓄电池电压信息
     * </pre>
     */
    public boolean hasBatteryvoltage() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
     *
     * <pre>
     *动力蓄电池电压信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo getBatteryvoltage() {
      return batteryvoltage_;
    }
    /**
     * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
     *
     * <pre>
     *动力蓄电池电压信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfoOrBuilder getBatteryvoltageOrBuilder() {
      return batteryvoltage_;
    }

    // optional .gboss.BatteryTemperatureInfo batterytemperature = 25;
    public static final int BATTERYTEMPERATURE_FIELD_NUMBER = 25;
    private cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo batterytemperature_;
    /**
     * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
     *
     * <pre>
     *动力蓄电池温度信息
     * </pre>
     */
    public boolean hasBatterytemperature() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
     *
     * <pre>
     *动力蓄电池温度信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo getBatterytemperature() {
      return batterytemperature_;
    }
    /**
     * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
     *
     * <pre>
     *动力蓄电池温度信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfoOrBuilder getBatterytemperatureOrBuilder() {
      return batterytemperature_;
    }

    // optional .gboss.BatteryExtremumInfo batteryextremum = 26;
    public static final int BATTERYEXTREMUM_FIELD_NUMBER = 26;
    private cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo batteryextremum_;
    /**
     * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
     *
     * <pre>
     *动力蓄电池极值信息
     * </pre>
     */
    public boolean hasBatteryextremum() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
     *
     * <pre>
     *动力蓄电池极值信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo getBatteryextremum() {
      return batteryextremum_;
    }
    /**
     * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
     *
     * <pre>
     *动力蓄电池极值信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfoOrBuilder getBatteryextremumOrBuilder() {
      return batteryextremum_;
    }

    // optional .gboss.VKModBus vkmodbus = 27;
    public static final int VKMODBUS_FIELD_NUMBER = 27;
    private cc.chinagps.gateway.buff.GBossDataBuff.VKModBus vkmodbus_;
    /**
     * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
     *
     * <pre>
     *微科尿素加注信息
     * </pre>
     */
    public boolean hasVkmodbus() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
     *
     * <pre>
     *微科尿素加注信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.VKModBus getVkmodbus() {
      return vkmodbus_;
    }
    /**
     * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
     *
     * <pre>
     *微科尿素加注信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.VKModBusOrBuilder getVkmodbusOrBuilder() {
      return vkmodbus_;
    }

    // optional int32 satelliteCount = 28;
    public static final int SATELLITECOUNT_FIELD_NUMBER = 28;
    private int satelliteCount_;
    /**
     * <code>optional int32 satelliteCount = 28;</code>
     *
     * <pre>
     *定位卫星数
     * </pre>
     */
    public boolean hasSatelliteCount() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 satelliteCount = 28;</code>
     *
     * <pre>
     *定位卫星数
     * </pre>
     */
    public int getSatelliteCount() {
      return satelliteCount_;
    }

    // optional int32 pdop = 29;
    public static final int PDOP_FIELD_NUMBER = 29;
    private int pdop_;
    /**
     * <code>optional int32 pdop = 29;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    public boolean hasPdop() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 pdop = 29;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    public int getPdop() {
      return pdop_;
    }

    // optional int32 hdop = 30;
    public static final int HDOP_FIELD_NUMBER = 30;
    private int hdop_;
    /**
     * <code>optional int32 hdop = 30;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    public boolean hasHdop() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 hdop = 30;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    public int getHdop() {
      return hdop_;
    }

    // optional int32 vdop = 31;
    public static final int VDOP_FIELD_NUMBER = 31;
    private int vdop_;
    /**
     * <code>optional int32 vdop = 31;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    public boolean hasVdop() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 vdop = 31;</code>
     *
     * <pre>
     *传输数值为原始值乘以10（即放大10倍，精度0.1）
     * </pre>
     */
    public int getVdop() {
      return vdop_;
    }

    // optional .gboss.KeLongInfo keLongInfo = 32;
    public static final int KELONGINFO_FIELD_NUMBER = 32;
    private cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo keLongInfo_;
    /**
     * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
     *
     * <pre>
     *科隆附加信息
     * </pre>
     */
    public boolean hasKeLongInfo() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
     *
     * <pre>
     *科隆附加信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo getKeLongInfo() {
      return keLongInfo_;
    }
    /**
     * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
     *
     * <pre>
     *科隆附加信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfoOrBuilder getKeLongInfoOrBuilder() {
      return keLongInfo_;
    }

    // repeated .gboss.WifiAPInfo wifiAPInfos = 33;
    public static final int WIFIAPINFOS_FIELD_NUMBER = 33;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo> wifiAPInfos_;
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo> getWifiAPInfosList() {
      return wifiAPInfos_;
    }
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder> 
        getWifiAPInfosOrBuilderList() {
      return wifiAPInfos_;
    }
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    public int getWifiAPInfosCount() {
      return wifiAPInfos_.size();
    }
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo getWifiAPInfos(int index) {
      return wifiAPInfos_.get(index);
    }
    /**
     * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
     *
     * <pre>
     *wifi ap信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder getWifiAPInfosOrBuilder(
        int index) {
      return wifiAPInfos_.get(index);
    }

    private void initFields() {
      gpsTime_ = 0L;
      loc_ = false;
      lat_ = 0;
      lng_ = 0;
      speed_ = 0;
      course_ = 0;
      status_ = java.util.Collections.emptyList();
      totalDistance_ = 0;
      oil_ = 0;
      oilPercent_ = 0;
      temperature1_ = 0;
      temperature2_ = 0;
      appendParams_ = java.util.Collections.emptyList();
      obdInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
      baseStations_ = java.util.Collections.emptyList();
      address_ = cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.getDefaultInstance();
      ydwInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.getDefaultInstance();
      signal_ = 0;
      faultLightStatus_ = cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.getDefaultInstance();
      height_ = 0;
      padInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.getDefaultInstance();
      beijingInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.getDefaultInstance();
      accTimeLen_ = 0;
      batteryvoltage_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.getDefaultInstance();
      batterytemperature_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.getDefaultInstance();
      batteryextremum_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.getDefaultInstance();
      vkmodbus_ = cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.getDefaultInstance();
      satelliteCount_ = 0;
      pdop_ = 0;
      hdop_ = 0;
      vdop_ = 0;
      keLongInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.getDefaultInstance();
      wifiAPInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGpsTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLoc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLng()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCourse()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAppendParamsCount(); i++) {
        if (!getAppendParams(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasObdInfo()) {
        if (!getObdInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBaseStationsCount(); i++) {
        if (!getBaseStations(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAddress()) {
        if (!getAddress().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasYdwInfo()) {
        if (!getYdwInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBatteryvoltage()) {
        if (!getBatteryvoltage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBatterytemperature()) {
        if (!getBatterytemperature().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVkmodbus()) {
        if (!getVkmodbus().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getWifiAPInfosCount(); i++) {
        if (!getWifiAPInfos(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, loc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, lng_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, course_);
      }
      for (int i = 0; i < status_.size(); i++) {
        output.writeInt32(7, status_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, oil_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, oilPercent_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, temperature1_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, temperature2_);
      }
      for (int i = 0; i < appendParams_.size(); i++) {
        output.writeMessage(13, appendParams_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(14, obdInfo_);
      }
      for (int i = 0; i < baseStations_.size(); i++) {
        output.writeMessage(15, baseStations_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(16, address_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(17, ydwInfo_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(18, signal_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(19, faultLightStatus_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(20, height_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(21, padInfo_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(22, beijingInfo_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(23, accTimeLen_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(24, batteryvoltage_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(25, batterytemperature_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(26, batteryextremum_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(27, vkmodbus_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(28, satelliteCount_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(29, pdop_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(30, hdop_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(31, vdop_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeMessage(32, keLongInfo_);
      }
      for (int i = 0; i < wifiAPInfos_.size(); i++) {
        output.writeMessage(33, wifiAPInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, loc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, lng_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, course_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < status_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(status_.get(i));
        }
        size += dataSize;
        size += 1 * getStatusList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, oil_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, oilPercent_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, temperature1_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, temperature2_);
      }
      for (int i = 0; i < appendParams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, appendParams_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, obdInfo_);
      }
      for (int i = 0; i < baseStations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, baseStations_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, address_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, ydwInfo_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, signal_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, faultLightStatus_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, height_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, padInfo_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, beijingInfo_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, accTimeLen_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, batteryvoltage_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, batterytemperature_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, batteryextremum_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, vkmodbus_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, satelliteCount_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, pdop_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, hdop_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, vdop_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, keLongInfo_);
      }
      for (int i = 0; i < wifiAPInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, wifiAPInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsBaseInfo}
     *
     * <pre>
     *************************************************************************************
     * GPS基本信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAppendParamsFieldBuilder();
          getObdInfoFieldBuilder();
          getBaseStationsFieldBuilder();
          getAddressFieldBuilder();
          getYdwInfoFieldBuilder();
          getFaultLightStatusFieldBuilder();
          getPadInfoFieldBuilder();
          getBeijingInfoFieldBuilder();
          getBatteryvoltageFieldBuilder();
          getBatterytemperatureFieldBuilder();
          getBatteryextremumFieldBuilder();
          getVkmodbusFieldBuilder();
          getKeLongInfoFieldBuilder();
          getWifiAPInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        loc_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        lat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        lng_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        course_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        totalDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        oil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        oilPercent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        temperature1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        temperature2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (appendParamsBuilder_ == null) {
          appendParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          appendParamsBuilder_.clear();
        }
        if (obdInfoBuilder_ == null) {
          obdInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
        } else {
          obdInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (baseStationsBuilder_ == null) {
          baseStations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          baseStationsBuilder_.clear();
        }
        if (addressBuilder_ == null) {
          address_ = cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.getDefaultInstance();
        } else {
          addressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (ydwInfoBuilder_ == null) {
          ydwInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.getDefaultInstance();
        } else {
          ydwInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        signal_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        if (faultLightStatusBuilder_ == null) {
          faultLightStatus_ = cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.getDefaultInstance();
        } else {
          faultLightStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        if (padInfoBuilder_ == null) {
          padInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.getDefaultInstance();
        } else {
          padInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        if (beijingInfoBuilder_ == null) {
          beijingInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.getDefaultInstance();
        } else {
          beijingInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        accTimeLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        if (batteryvoltageBuilder_ == null) {
          batteryvoltage_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.getDefaultInstance();
        } else {
          batteryvoltageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        if (batterytemperatureBuilder_ == null) {
          batterytemperature_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.getDefaultInstance();
        } else {
          batterytemperatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        if (batteryextremumBuilder_ == null) {
          batteryextremum_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.getDefaultInstance();
        } else {
          batteryextremumBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        if (vkmodbusBuilder_ == null) {
          vkmodbus_ = cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.getDefaultInstance();
        } else {
          vkmodbusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        satelliteCount_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        pdop_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        hdop_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        vdop_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        if (keLongInfoBuilder_ == null) {
          keLongInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.getDefaultInstance();
        } else {
          keLongInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        if (wifiAPInfosBuilder_ == null) {
          wifiAPInfos_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000001);
        } else {
          wifiAPInfosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.loc_ = loc_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lat_ = lat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lng_ = lng_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.course_ = course_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = java.util.Collections.unmodifiableList(status_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalDistance_ = totalDistance_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.oil_ = oil_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.oilPercent_ = oilPercent_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.temperature1_ = temperature1_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.temperature2_ = temperature2_;
        if (appendParamsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            appendParams_ = java.util.Collections.unmodifiableList(appendParams_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.appendParams_ = appendParams_;
        } else {
          result.appendParams_ = appendParamsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (obdInfoBuilder_ == null) {
          result.obdInfo_ = obdInfo_;
        } else {
          result.obdInfo_ = obdInfoBuilder_.build();
        }
        if (baseStationsBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            baseStations_ = java.util.Collections.unmodifiableList(baseStations_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.baseStations_ = baseStations_;
        } else {
          result.baseStations_ = baseStationsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (addressBuilder_ == null) {
          result.address_ = address_;
        } else {
          result.address_ = addressBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (ydwInfoBuilder_ == null) {
          result.ydwInfo_ = ydwInfo_;
        } else {
          result.ydwInfo_ = ydwInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.signal_ = signal_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (faultLightStatusBuilder_ == null) {
          result.faultLightStatus_ = faultLightStatus_;
        } else {
          result.faultLightStatus_ = faultLightStatusBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (padInfoBuilder_ == null) {
          result.padInfo_ = padInfo_;
        } else {
          result.padInfo_ = padInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (beijingInfoBuilder_ == null) {
          result.beijingInfo_ = beijingInfo_;
        } else {
          result.beijingInfo_ = beijingInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.accTimeLen_ = accTimeLen_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (batteryvoltageBuilder_ == null) {
          result.batteryvoltage_ = batteryvoltage_;
        } else {
          result.batteryvoltage_ = batteryvoltageBuilder_.build();
        }
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (batterytemperatureBuilder_ == null) {
          result.batterytemperature_ = batterytemperature_;
        } else {
          result.batterytemperature_ = batterytemperatureBuilder_.build();
        }
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (batteryextremumBuilder_ == null) {
          result.batteryextremum_ = batteryextremum_;
        } else {
          result.batteryextremum_ = batteryextremumBuilder_.build();
        }
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (vkmodbusBuilder_ == null) {
          result.vkmodbus_ = vkmodbus_;
        } else {
          result.vkmodbus_ = vkmodbusBuilder_.build();
        }
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.satelliteCount_ = satelliteCount_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.pdop_ = pdop_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.hdop_ = hdop_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.vdop_ = vdop_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x10000000;
        }
        if (keLongInfoBuilder_ == null) {
          result.keLongInfo_ = keLongInfo_;
        } else {
          result.keLongInfo_ = keLongInfoBuilder_.build();
        }
        if (wifiAPInfosBuilder_ == null) {
          if (((bitField1_ & 0x00000001) == 0x00000001)) {
            wifiAPInfos_ = java.util.Collections.unmodifiableList(wifiAPInfos_);
            bitField1_ = (bitField1_ & ~0x00000001);
          }
          result.wifiAPInfos_ = wifiAPInfos_;
        } else {
          result.wifiAPInfos_ = wifiAPInfosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) return this;
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasLoc()) {
          setLoc(other.getLoc());
        }
        if (other.hasLat()) {
          setLat(other.getLat());
        }
        if (other.hasLng()) {
          setLng(other.getLng());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasCourse()) {
          setCourse(other.getCourse());
        }
        if (!other.status_.isEmpty()) {
          if (status_.isEmpty()) {
            status_ = other.status_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureStatusIsMutable();
            status_.addAll(other.status_);
          }
          onChanged();
        }
        if (other.hasTotalDistance()) {
          setTotalDistance(other.getTotalDistance());
        }
        if (other.hasOil()) {
          setOil(other.getOil());
        }
        if (other.hasOilPercent()) {
          setOilPercent(other.getOilPercent());
        }
        if (other.hasTemperature1()) {
          setTemperature1(other.getTemperature1());
        }
        if (other.hasTemperature2()) {
          setTemperature2(other.getTemperature2());
        }
        if (appendParamsBuilder_ == null) {
          if (!other.appendParams_.isEmpty()) {
            if (appendParams_.isEmpty()) {
              appendParams_ = other.appendParams_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureAppendParamsIsMutable();
              appendParams_.addAll(other.appendParams_);
            }
            onChanged();
          }
        } else {
          if (!other.appendParams_.isEmpty()) {
            if (appendParamsBuilder_.isEmpty()) {
              appendParamsBuilder_.dispose();
              appendParamsBuilder_ = null;
              appendParams_ = other.appendParams_;
              bitField0_ = (bitField0_ & ~0x00001000);
              appendParamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAppendParamsFieldBuilder() : null;
            } else {
              appendParamsBuilder_.addAllMessages(other.appendParams_);
            }
          }
        }
        if (other.hasObdInfo()) {
          mergeObdInfo(other.getObdInfo());
        }
        if (baseStationsBuilder_ == null) {
          if (!other.baseStations_.isEmpty()) {
            if (baseStations_.isEmpty()) {
              baseStations_ = other.baseStations_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureBaseStationsIsMutable();
              baseStations_.addAll(other.baseStations_);
            }
            onChanged();
          }
        } else {
          if (!other.baseStations_.isEmpty()) {
            if (baseStationsBuilder_.isEmpty()) {
              baseStationsBuilder_.dispose();
              baseStationsBuilder_ = null;
              baseStations_ = other.baseStations_;
              bitField0_ = (bitField0_ & ~0x00004000);
              baseStationsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBaseStationsFieldBuilder() : null;
            } else {
              baseStationsBuilder_.addAllMessages(other.baseStations_);
            }
          }
        }
        if (other.hasAddress()) {
          mergeAddress(other.getAddress());
        }
        if (other.hasYdwInfo()) {
          mergeYdwInfo(other.getYdwInfo());
        }
        if (other.hasSignal()) {
          setSignal(other.getSignal());
        }
        if (other.hasFaultLightStatus()) {
          mergeFaultLightStatus(other.getFaultLightStatus());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasPadInfo()) {
          mergePadInfo(other.getPadInfo());
        }
        if (other.hasBeijingInfo()) {
          mergeBeijingInfo(other.getBeijingInfo());
        }
        if (other.hasAccTimeLen()) {
          setAccTimeLen(other.getAccTimeLen());
        }
        if (other.hasBatteryvoltage()) {
          mergeBatteryvoltage(other.getBatteryvoltage());
        }
        if (other.hasBatterytemperature()) {
          mergeBatterytemperature(other.getBatterytemperature());
        }
        if (other.hasBatteryextremum()) {
          mergeBatteryextremum(other.getBatteryextremum());
        }
        if (other.hasVkmodbus()) {
          mergeVkmodbus(other.getVkmodbus());
        }
        if (other.hasSatelliteCount()) {
          setSatelliteCount(other.getSatelliteCount());
        }
        if (other.hasPdop()) {
          setPdop(other.getPdop());
        }
        if (other.hasHdop()) {
          setHdop(other.getHdop());
        }
        if (other.hasVdop()) {
          setVdop(other.getVdop());
        }
        if (other.hasKeLongInfo()) {
          mergeKeLongInfo(other.getKeLongInfo());
        }
        if (wifiAPInfosBuilder_ == null) {
          if (!other.wifiAPInfos_.isEmpty()) {
            if (wifiAPInfos_.isEmpty()) {
              wifiAPInfos_ = other.wifiAPInfos_;
              bitField1_ = (bitField1_ & ~0x00000001);
            } else {
              ensureWifiAPInfosIsMutable();
              wifiAPInfos_.addAll(other.wifiAPInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.wifiAPInfos_.isEmpty()) {
            if (wifiAPInfosBuilder_.isEmpty()) {
              wifiAPInfosBuilder_.dispose();
              wifiAPInfosBuilder_ = null;
              wifiAPInfos_ = other.wifiAPInfos_;
              bitField1_ = (bitField1_ & ~0x00000001);
              wifiAPInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWifiAPInfosFieldBuilder() : null;
            } else {
              wifiAPInfosBuilder_.addAllMessages(other.wifiAPInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGpsTime()) {
          
          return false;
        }
        if (!hasLoc()) {
          
          return false;
        }
        if (!hasLat()) {
          
          return false;
        }
        if (!hasLng()) {
          
          return false;
        }
        if (!hasSpeed()) {
          
          return false;
        }
        if (!hasCourse()) {
          
          return false;
        }
        for (int i = 0; i < getAppendParamsCount(); i++) {
          if (!getAppendParams(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasObdInfo()) {
          if (!getObdInfo().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBaseStationsCount(); i++) {
          if (!getBaseStations(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasAddress()) {
          if (!getAddress().isInitialized()) {
            
            return false;
          }
        }
        if (hasYdwInfo()) {
          if (!getYdwInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasBatteryvoltage()) {
          if (!getBatteryvoltage().isInitialized()) {
            
            return false;
          }
        }
        if (hasBatterytemperature()) {
          if (!getBatterytemperature().isInitialized()) {
            
            return false;
          }
        }
        if (hasVkmodbus()) {
          if (!getVkmodbus().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getWifiAPInfosCount(); i++) {
          if (!getWifiAPInfos(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // required int64 gpsTime = 1;
      private long gpsTime_ ;
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public long getGpsTime() {
        return gpsTime_;
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00000001;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的毫秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }

      // required bool loc = 2;
      private boolean loc_ ;
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public boolean hasLoc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public boolean getLoc() {
        return loc_;
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public Builder setLoc(boolean value) {
        bitField0_ |= 0x00000002;
        loc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public Builder clearLoc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        loc_ = false;
        onChanged();
        return this;
      }

      // required int32 lat = 3;
      private int lat_ ;
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public boolean hasLat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public int getLat() {
        return lat_;
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder setLat(int value) {
        bitField0_ |= 0x00000004;
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder clearLat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lat_ = 0;
        onChanged();
        return this;
      }

      // required int32 lng = 4;
      private int lng_ ;
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public boolean hasLng() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public int getLng() {
        return lng_;
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder setLng(int value) {
        bitField0_ |= 0x00000008;
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder clearLng() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lng_ = 0;
        onChanged();
        return this;
      }

      // required int32 speed = 5;
      private int speed_ ;
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000010;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0;
        onChanged();
        return this;
      }

      // required int32 course = 6;
      private int course_ ;
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public boolean hasCourse() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public int getCourse() {
        return course_;
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public Builder setCourse(int value) {
        bitField0_ |= 0x00000020;
        course_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public Builder clearCourse() {
        bitField0_ = (bitField0_ & ~0x00000020);
        course_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 status = 7;
      private java.util.List<java.lang.Integer> status_ = java.util.Collections.emptyList();
      private void ensureStatusIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = new java.util.ArrayList<java.lang.Integer>(status_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getStatusList() {
        return java.util.Collections.unmodifiableList(status_);
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public int getStatusCount() {
        return status_.size();
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public int getStatus(int index) {
        return status_.get(index);
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder setStatus(
          int index, int value) {
        ensureStatusIsMutable();
        status_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder addStatus(int value) {
        ensureStatusIsMutable();
        status_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder addAllStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStatusIsMutable();
        super.addAll(values, status_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder clearStatus() {
        status_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 totalDistance = 8;
      private int totalDistance_ ;
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public boolean hasTotalDistance() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public int getTotalDistance() {
        return totalDistance_;
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder setTotalDistance(int value) {
        bitField0_ |= 0x00000080;
        totalDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder clearTotalDistance() {
        bitField0_ = (bitField0_ & ~0x00000080);
        totalDistance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 oil = 9;
      private int oil_ ;
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：十分之一升）
       * </pre>
       */
      public boolean hasOil() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：十分之一升）
       * </pre>
       */
      public int getOil() {
        return oil_;
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：十分之一升）
       * </pre>
       */
      public Builder setOil(int value) {
        bitField0_ |= 0x00000100;
        oil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：十分之一升）
       * </pre>
       */
      public Builder clearOil() {
        bitField0_ = (bitField0_ & ~0x00000100);
        oil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 oilPercent = 10;
      private int oilPercent_ ;
      /**
       * <code>optional int32 oilPercent = 10;</code>
       *
       * <pre>
       *油箱中油量千分比
       * </pre>
       */
      public boolean hasOilPercent() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 oilPercent = 10;</code>
       *
       * <pre>
       *油箱中油量千分比
       * </pre>
       */
      public int getOilPercent() {
        return oilPercent_;
      }
      /**
       * <code>optional int32 oilPercent = 10;</code>
       *
       * <pre>
       *油箱中油量千分比
       * </pre>
       */
      public Builder setOilPercent(int value) {
        bitField0_ |= 0x00000200;
        oilPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 oilPercent = 10;</code>
       *
       * <pre>
       *油箱中油量千分比
       * </pre>
       */
      public Builder clearOilPercent() {
        bitField0_ = (bitField0_ & ~0x00000200);
        oilPercent_ = 0;
        onChanged();
        return this;
      }

      // optional int32 temperature1 = 11;
      private int temperature1_ ;
      /**
       * <code>optional int32 temperature1 = 11;</code>
       *
       * <pre>
       *温度1（单位：十分之一摄氏度）
       * </pre>
       */
      public boolean hasTemperature1() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 temperature1 = 11;</code>
       *
       * <pre>
       *温度1（单位：十分之一摄氏度）
       * </pre>
       */
      public int getTemperature1() {
        return temperature1_;
      }
      /**
       * <code>optional int32 temperature1 = 11;</code>
       *
       * <pre>
       *温度1（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder setTemperature1(int value) {
        bitField0_ |= 0x00000400;
        temperature1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 temperature1 = 11;</code>
       *
       * <pre>
       *温度1（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder clearTemperature1() {
        bitField0_ = (bitField0_ & ~0x00000400);
        temperature1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 temperature2 = 12;
      private int temperature2_ ;
      /**
       * <code>optional int32 temperature2 = 12;</code>
       *
       * <pre>
       *温度2（单位：十分之一摄氏度）
       * </pre>
       */
      public boolean hasTemperature2() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 temperature2 = 12;</code>
       *
       * <pre>
       *温度2（单位：十分之一摄氏度）
       * </pre>
       */
      public int getTemperature2() {
        return temperature2_;
      }
      /**
       * <code>optional int32 temperature2 = 12;</code>
       *
       * <pre>
       *温度2（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder setTemperature2(int value) {
        bitField0_ |= 0x00000800;
        temperature2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 temperature2 = 12;</code>
       *
       * <pre>
       *温度2（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder clearTemperature2() {
        bitField0_ = (bitField0_ & ~0x00000800);
        temperature2_ = 0;
        onChanged();
        return this;
      }

      // repeated .gboss.MapEntry appendParams = 13;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> appendParams_ =
        java.util.Collections.emptyList();
      private void ensureAppendParamsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          appendParams_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry>(appendParams_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.MapEntry, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> appendParamsBuilder_;

      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> getAppendParamsList() {
        if (appendParamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(appendParams_);
        } else {
          return appendParamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public int getAppendParamsCount() {
        if (appendParamsBuilder_ == null) {
          return appendParams_.size();
        } else {
          return appendParamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getAppendParams(int index) {
        if (appendParamsBuilder_ == null) {
          return appendParams_.get(index);
        } else {
          return appendParamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public Builder setAppendParams(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.set(index, value);
          onChanged();
        } else {
          appendParamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public Builder setAppendParams(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.set(index, builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public Builder addAppendParams(cc.chinagps.gateway.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.add(value);
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public Builder addAppendParams(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.add(index, value);
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public Builder addAppendParams(
          cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.add(builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public Builder addAppendParams(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.add(index, builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public Builder addAllAppendParams(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> values) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          super.addAll(values, appendParams_);
          onChanged();
        } else {
          appendParamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public Builder clearAppendParams() {
        if (appendParamsBuilder_ == null) {
          appendParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          appendParamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public Builder removeAppendParams(int index) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.remove(index);
          onChanged();
        } else {
          appendParamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder getAppendParamsBuilder(
          int index) {
        return getAppendParamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
          int index) {
        if (appendParamsBuilder_ == null) {
          return appendParams_.get(index);  } else {
          return appendParamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
           getAppendParamsOrBuilderList() {
        if (appendParamsBuilder_ != null) {
          return appendParamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(appendParams_);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder addAppendParamsBuilder() {
        return getAppendParamsFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder addAppendParamsBuilder(
          int index) {
        return getAppendParamsFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个):
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder> 
           getAppendParamsBuilderList() {
        return getAppendParamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.MapEntry, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
          getAppendParamsFieldBuilder() {
        if (appendParamsBuilder_ == null) {
          appendParamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.MapEntry, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder>(
                  appendParams_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          appendParams_ = null;
        }
        return appendParamsBuilder_;
      }

      // optional .gboss.OBDInfo obdInfo = 14;
      private cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo obdInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo, cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.OBDInfoOrBuilder> obdInfoBuilder_;
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
       *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
       *次低位表示是否连接：0未连接、1连接上
       *次高位表示是否故障：0无故障、1有故障, 暂时为0
       *最高位保留填0
       *终端协议中0=0,1=1,2=3
       * </pre>
       */
      public boolean hasObdInfo() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
       *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
       *次低位表示是否连接：0未连接、1连接上
       *次高位表示是否故障：0无故障、1有故障, 暂时为0
       *最高位保留填0
       *终端协议中0=0,1=1,2=3
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo getObdInfo() {
        if (obdInfoBuilder_ == null) {
          return obdInfo_;
        } else {
          return obdInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
       *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
       *次低位表示是否连接：0未连接、1连接上
       *次高位表示是否故障：0无故障、1有故障, 暂时为0
       *最高位保留填0
       *终端协议中0=0,1=1,2=3
       * </pre>
       */
      public Builder setObdInfo(cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo value) {
        if (obdInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          obdInfo_ = value;
          onChanged();
        } else {
          obdInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
       *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
       *次低位表示是否连接：0未连接、1连接上
       *次高位表示是否故障：0无故障、1有故障, 暂时为0
       *最高位保留填0
       *终端协议中0=0,1=1,2=3
       * </pre>
       */
      public Builder setObdInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.Builder builderForValue) {
        if (obdInfoBuilder_ == null) {
          obdInfo_ = builderForValue.build();
          onChanged();
        } else {
          obdInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
       *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
       *次低位表示是否连接：0未连接、1连接上
       *次高位表示是否故障：0无故障、1有故障, 暂时为0
       *最高位保留填0
       *终端协议中0=0,1=1,2=3
       * </pre>
       */
      public Builder mergeObdInfo(cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo value) {
        if (obdInfoBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              obdInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.getDefaultInstance()) {
            obdInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.newBuilder(obdInfo_).mergeFrom(value).buildPartial();
          } else {
            obdInfo_ = value;
          }
          onChanged();
        } else {
          obdInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
       *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
       *次低位表示是否连接：0未连接、1连接上
       *次高位表示是否故障：0无故障、1有故障, 暂时为0
       *最高位保留填0
       *终端协议中0=0,1=1,2=3
       * </pre>
       */
      public Builder clearObdInfo() {
        if (obdInfoBuilder_ == null) {
          obdInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
          onChanged();
        } else {
          obdInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
       *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
       *次低位表示是否连接：0未连接、1连接上
       *次高位表示是否故障：0无故障、1有故障, 暂时为0
       *最高位保留填0
       *终端协议中0=0,1=1,2=3
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.Builder getObdInfoBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getObdInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
       *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
       *次低位表示是否连接：0未连接、1连接上
       *次高位表示是否故障：0无故障、1有故障, 暂时为0
       *最高位保留填0
       *终端协议中0=0,1=1,2=3
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.OBDInfoOrBuilder getObdInfoOrBuilder() {
        if (obdInfoBuilder_ != null) {
          return obdInfoBuilder_.getMessageOrBuilder();
        } else {
          return obdInfo_;
        }
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *(1)子母机中，母机报告子机状态，key:childunit，value:一个字符代表一个子机状态(值范围0-F)，子机编号不要，按顺序排列:
       *最低位表示是否存在：0不存在、1存在，如果不存在，则下面三位都是0
       *次低位表示是否连接：0未连接、1连接上
       *次高位表示是否故障：0无故障、1有故障, 暂时为0
       *最高位保留填0
       *终端协议中0=0,1=1,2=3
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo, cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.OBDInfoOrBuilder> 
          getObdInfoFieldBuilder() {
        if (obdInfoBuilder_ == null) {
          obdInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo, cc.chinagps.gateway.buff.GBossDataBuff.OBDInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.OBDInfoOrBuilder>(
                  obdInfo_,
                  getParentForChildren(),
                  isClean());
          obdInfo_ = null;
        }
        return obdInfoBuilder_;
      }

      // repeated .gboss.BaseStationInfo baseStations = 15;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo> baseStations_ =
        java.util.Collections.emptyList();
      private void ensureBaseStationsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          baseStations_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo>(baseStations_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder> baseStationsBuilder_;

      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo> getBaseStationsList() {
        if (baseStationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(baseStations_);
        } else {
          return baseStationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public int getBaseStationsCount() {
        if (baseStationsBuilder_ == null) {
          return baseStations_.size();
        } else {
          return baseStationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo getBaseStations(int index) {
        if (baseStationsBuilder_ == null) {
          return baseStations_.get(index);
        } else {
          return baseStationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public Builder setBaseStations(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo value) {
        if (baseStationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseStationsIsMutable();
          baseStations_.set(index, value);
          onChanged();
        } else {
          baseStationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public Builder setBaseStations(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder builderForValue) {
        if (baseStationsBuilder_ == null) {
          ensureBaseStationsIsMutable();
          baseStations_.set(index, builderForValue.build());
          onChanged();
        } else {
          baseStationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public Builder addBaseStations(cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo value) {
        if (baseStationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseStationsIsMutable();
          baseStations_.add(value);
          onChanged();
        } else {
          baseStationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public Builder addBaseStations(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo value) {
        if (baseStationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseStationsIsMutable();
          baseStations_.add(index, value);
          onChanged();
        } else {
          baseStationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public Builder addBaseStations(
          cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder builderForValue) {
        if (baseStationsBuilder_ == null) {
          ensureBaseStationsIsMutable();
          baseStations_.add(builderForValue.build());
          onChanged();
        } else {
          baseStationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public Builder addBaseStations(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder builderForValue) {
        if (baseStationsBuilder_ == null) {
          ensureBaseStationsIsMutable();
          baseStations_.add(index, builderForValue.build());
          onChanged();
        } else {
          baseStationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public Builder addAllBaseStations(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo> values) {
        if (baseStationsBuilder_ == null) {
          ensureBaseStationsIsMutable();
          super.addAll(values, baseStations_);
          onChanged();
        } else {
          baseStationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public Builder clearBaseStations() {
        if (baseStationsBuilder_ == null) {
          baseStations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          baseStationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public Builder removeBaseStations(int index) {
        if (baseStationsBuilder_ == null) {
          ensureBaseStationsIsMutable();
          baseStations_.remove(index);
          onChanged();
        } else {
          baseStationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder getBaseStationsBuilder(
          int index) {
        return getBaseStationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder getBaseStationsOrBuilder(
          int index) {
        if (baseStationsBuilder_ == null) {
          return baseStations_.get(index);  } else {
          return baseStationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder> 
           getBaseStationsOrBuilderList() {
        if (baseStationsBuilder_ != null) {
          return baseStationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(baseStations_);
        }
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder addBaseStationsBuilder() {
        return getBaseStationsFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder addBaseStationsBuilder(
          int index) {
        return getBaseStationsFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.BaseStationInfo baseStations = 15;</code>
       *
       * <pre>
       *基站信息
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder> 
           getBaseStationsBuilderList() {
        return getBaseStationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder> 
          getBaseStationsFieldBuilder() {
        if (baseStationsBuilder_ == null) {
          baseStationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationInfoOrBuilder>(
                  baseStations_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          baseStations_ = null;
        }
        return baseStationsBuilder_;
      }

      // optional .gboss.BaseStationAddress address = 16;
      private cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress address_ = cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddressOrBuilder> addressBuilder_;
      /**
       * <code>optional .gboss.BaseStationAddress address = 16;</code>
       *
       * <pre>
       *基站定位信息
       * </pre>
       */
      public boolean hasAddress() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .gboss.BaseStationAddress address = 16;</code>
       *
       * <pre>
       *基站定位信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress getAddress() {
        if (addressBuilder_ == null) {
          return address_;
        } else {
          return addressBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.BaseStationAddress address = 16;</code>
       *
       * <pre>
       *基站定位信息
       * </pre>
       */
      public Builder setAddress(cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress value) {
        if (addressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          address_ = value;
          onChanged();
        } else {
          addressBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .gboss.BaseStationAddress address = 16;</code>
       *
       * <pre>
       *基站定位信息
       * </pre>
       */
      public Builder setAddress(
          cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.Builder builderForValue) {
        if (addressBuilder_ == null) {
          address_ = builderForValue.build();
          onChanged();
        } else {
          addressBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .gboss.BaseStationAddress address = 16;</code>
       *
       * <pre>
       *基站定位信息
       * </pre>
       */
      public Builder mergeAddress(cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress value) {
        if (addressBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              address_ != cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.getDefaultInstance()) {
            address_ =
              cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.newBuilder(address_).mergeFrom(value).buildPartial();
          } else {
            address_ = value;
          }
          onChanged();
        } else {
          addressBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .gboss.BaseStationAddress address = 16;</code>
       *
       * <pre>
       *基站定位信息
       * </pre>
       */
      public Builder clearAddress() {
        if (addressBuilder_ == null) {
          address_ = cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.getDefaultInstance();
          onChanged();
        } else {
          addressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .gboss.BaseStationAddress address = 16;</code>
       *
       * <pre>
       *基站定位信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.Builder getAddressBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getAddressFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.BaseStationAddress address = 16;</code>
       *
       * <pre>
       *基站定位信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddressOrBuilder getAddressOrBuilder() {
        if (addressBuilder_ != null) {
          return addressBuilder_.getMessageOrBuilder();
        } else {
          return address_;
        }
      }
      /**
       * <code>optional .gboss.BaseStationAddress address = 16;</code>
       *
       * <pre>
       *基站定位信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddressOrBuilder> 
          getAddressFieldBuilder() {
        if (addressBuilder_ == null) {
          addressBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddress.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BaseStationAddressOrBuilder>(
                  address_,
                  getParentForChildren(),
                  isClean());
          address_ = null;
        }
        return addressBuilder_;
      }

      // optional .gboss.YDWInfo ydwInfo = 17;
      private cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo ydwInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo, cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.YDWInfoOrBuilder> ydwInfoBuilder_;
      /**
       * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
       *
       * <pre>
       *一动网信息
       * </pre>
       */
      public boolean hasYdwInfo() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
       *
       * <pre>
       *一动网信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo getYdwInfo() {
        if (ydwInfoBuilder_ == null) {
          return ydwInfo_;
        } else {
          return ydwInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
       *
       * <pre>
       *一动网信息
       * </pre>
       */
      public Builder setYdwInfo(cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo value) {
        if (ydwInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ydwInfo_ = value;
          onChanged();
        } else {
          ydwInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
       *
       * <pre>
       *一动网信息
       * </pre>
       */
      public Builder setYdwInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.Builder builderForValue) {
        if (ydwInfoBuilder_ == null) {
          ydwInfo_ = builderForValue.build();
          onChanged();
        } else {
          ydwInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
       *
       * <pre>
       *一动网信息
       * </pre>
       */
      public Builder mergeYdwInfo(cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo value) {
        if (ydwInfoBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              ydwInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.getDefaultInstance()) {
            ydwInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.newBuilder(ydwInfo_).mergeFrom(value).buildPartial();
          } else {
            ydwInfo_ = value;
          }
          onChanged();
        } else {
          ydwInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
       *
       * <pre>
       *一动网信息
       * </pre>
       */
      public Builder clearYdwInfo() {
        if (ydwInfoBuilder_ == null) {
          ydwInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.getDefaultInstance();
          onChanged();
        } else {
          ydwInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
       *
       * <pre>
       *一动网信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.Builder getYdwInfoBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getYdwInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
       *
       * <pre>
       *一动网信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.YDWInfoOrBuilder getYdwInfoOrBuilder() {
        if (ydwInfoBuilder_ != null) {
          return ydwInfoBuilder_.getMessageOrBuilder();
        } else {
          return ydwInfo_;
        }
      }
      /**
       * <code>optional .gboss.YDWInfo ydwInfo = 17;</code>
       *
       * <pre>
       *一动网信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo, cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.YDWInfoOrBuilder> 
          getYdwInfoFieldBuilder() {
        if (ydwInfoBuilder_ == null) {
          ydwInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo, cc.chinagps.gateway.buff.GBossDataBuff.YDWInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.YDWInfoOrBuilder>(
                  ydwInfo_,
                  getParentForChildren(),
                  isClean());
          ydwInfo_ = null;
        }
        return ydwInfoBuilder_;
      }

      // optional int32 signal = 18;
      private int signal_ ;
      /**
       * <code>optional int32 signal = 18;</code>
       *
       * <pre>
       *通讯模块信号强度(0~31, 31表示信号最好)
       * </pre>
       */
      public boolean hasSignal() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 signal = 18;</code>
       *
       * <pre>
       *通讯模块信号强度(0~31, 31表示信号最好)
       * </pre>
       */
      public int getSignal() {
        return signal_;
      }
      /**
       * <code>optional int32 signal = 18;</code>
       *
       * <pre>
       *通讯模块信号强度(0~31, 31表示信号最好)
       * </pre>
       */
      public Builder setSignal(int value) {
        bitField0_ |= 0x00020000;
        signal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 signal = 18;</code>
       *
       * <pre>
       *通讯模块信号强度(0~31, 31表示信号最好)
       * </pre>
       */
      public Builder clearSignal() {
        bitField0_ = (bitField0_ & ~0x00020000);
        signal_ = 0;
        onChanged();
        return this;
      }

      // optional .gboss.FaultLightStatus faultLightStatus = 19;
      private cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus faultLightStatus_ = cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus, cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.Builder, cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatusOrBuilder> faultLightStatusBuilder_;
      /**
       * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
       *
       * <pre>
       *故障灯状态
       * </pre>
       */
      public boolean hasFaultLightStatus() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
       *
       * <pre>
       *故障灯状态
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus getFaultLightStatus() {
        if (faultLightStatusBuilder_ == null) {
          return faultLightStatus_;
        } else {
          return faultLightStatusBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
       *
       * <pre>
       *故障灯状态
       * </pre>
       */
      public Builder setFaultLightStatus(cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus value) {
        if (faultLightStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          faultLightStatus_ = value;
          onChanged();
        } else {
          faultLightStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
       *
       * <pre>
       *故障灯状态
       * </pre>
       */
      public Builder setFaultLightStatus(
          cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.Builder builderForValue) {
        if (faultLightStatusBuilder_ == null) {
          faultLightStatus_ = builderForValue.build();
          onChanged();
        } else {
          faultLightStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
       *
       * <pre>
       *故障灯状态
       * </pre>
       */
      public Builder mergeFaultLightStatus(cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus value) {
        if (faultLightStatusBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              faultLightStatus_ != cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.getDefaultInstance()) {
            faultLightStatus_ =
              cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.newBuilder(faultLightStatus_).mergeFrom(value).buildPartial();
          } else {
            faultLightStatus_ = value;
          }
          onChanged();
        } else {
          faultLightStatusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
       *
       * <pre>
       *故障灯状态
       * </pre>
       */
      public Builder clearFaultLightStatus() {
        if (faultLightStatusBuilder_ == null) {
          faultLightStatus_ = cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.getDefaultInstance();
          onChanged();
        } else {
          faultLightStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
       *
       * <pre>
       *故障灯状态
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.Builder getFaultLightStatusBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getFaultLightStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
       *
       * <pre>
       *故障灯状态
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatusOrBuilder getFaultLightStatusOrBuilder() {
        if (faultLightStatusBuilder_ != null) {
          return faultLightStatusBuilder_.getMessageOrBuilder();
        } else {
          return faultLightStatus_;
        }
      }
      /**
       * <code>optional .gboss.FaultLightStatus faultLightStatus = 19;</code>
       *
       * <pre>
       *故障灯状态
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus, cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.Builder, cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatusOrBuilder> 
          getFaultLightStatusFieldBuilder() {
        if (faultLightStatusBuilder_ == null) {
          faultLightStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus, cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatus.Builder, cc.chinagps.gateway.buff.GBossDataBuff.FaultLightStatusOrBuilder>(
                  faultLightStatus_,
                  getParentForChildren(),
                  isClean());
          faultLightStatus_ = null;
        }
        return faultLightStatusBuilder_;
      }

      // optional int32 height = 20;
      private int height_ ;
      /**
       * <code>optional int32 height = 20;</code>
       *
       * <pre>
       *高度（当前位置海拔，单位：米）
       * </pre>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 height = 20;</code>
       *
       * <pre>
       *高度（当前位置海拔，单位：米）
       * </pre>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional int32 height = 20;</code>
       *
       * <pre>
       *高度（当前位置海拔，单位：米）
       * </pre>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00080000;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 height = 20;</code>
       *
       * <pre>
       *高度（当前位置海拔，单位：米）
       * </pre>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00080000);
        height_ = 0;
        onChanged();
        return this;
      }

      // optional .gboss.PengaodaGpsInfo padInfo = 21;
      private cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo padInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfoOrBuilder> padInfoBuilder_;
      /**
       * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
       *
       * <pre>
       *鹏奥达gps附加信息
       * </pre>
       */
      public boolean hasPadInfo() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
       *
       * <pre>
       *鹏奥达gps附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo getPadInfo() {
        if (padInfoBuilder_ == null) {
          return padInfo_;
        } else {
          return padInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
       *
       * <pre>
       *鹏奥达gps附加信息
       * </pre>
       */
      public Builder setPadInfo(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo value) {
        if (padInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          padInfo_ = value;
          onChanged();
        } else {
          padInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
       *
       * <pre>
       *鹏奥达gps附加信息
       * </pre>
       */
      public Builder setPadInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.Builder builderForValue) {
        if (padInfoBuilder_ == null) {
          padInfo_ = builderForValue.build();
          onChanged();
        } else {
          padInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
       *
       * <pre>
       *鹏奥达gps附加信息
       * </pre>
       */
      public Builder mergePadInfo(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo value) {
        if (padInfoBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              padInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.getDefaultInstance()) {
            padInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.newBuilder(padInfo_).mergeFrom(value).buildPartial();
          } else {
            padInfo_ = value;
          }
          onChanged();
        } else {
          padInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
       *
       * <pre>
       *鹏奥达gps附加信息
       * </pre>
       */
      public Builder clearPadInfo() {
        if (padInfoBuilder_ == null) {
          padInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.getDefaultInstance();
          onChanged();
        } else {
          padInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
       *
       * <pre>
       *鹏奥达gps附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.Builder getPadInfoBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getPadInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
       *
       * <pre>
       *鹏奥达gps附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfoOrBuilder getPadInfoOrBuilder() {
        if (padInfoBuilder_ != null) {
          return padInfoBuilder_.getMessageOrBuilder();
        } else {
          return padInfo_;
        }
      }
      /**
       * <code>optional .gboss.PengaodaGpsInfo padInfo = 21;</code>
       *
       * <pre>
       *鹏奥达gps附加信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfoOrBuilder> 
          getPadInfoFieldBuilder() {
        if (padInfoBuilder_ == null) {
          padInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaGpsInfoOrBuilder>(
                  padInfo_,
                  getParentForChildren(),
                  isClean());
          padInfo_ = null;
        }
        return padInfoBuilder_;
      }

      // optional .gboss.BeiJingInfo beijingInfo = 22;
      private cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo beijingInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo, cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfoOrBuilder> beijingInfoBuilder_;
      /**
       * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
       *
       * <pre>
       *北汽附加信息
       * </pre>
       */
      public boolean hasBeijingInfo() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
       *
       * <pre>
       *北汽附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo getBeijingInfo() {
        if (beijingInfoBuilder_ == null) {
          return beijingInfo_;
        } else {
          return beijingInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
       *
       * <pre>
       *北汽附加信息
       * </pre>
       */
      public Builder setBeijingInfo(cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo value) {
        if (beijingInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          beijingInfo_ = value;
          onChanged();
        } else {
          beijingInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
       *
       * <pre>
       *北汽附加信息
       * </pre>
       */
      public Builder setBeijingInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.Builder builderForValue) {
        if (beijingInfoBuilder_ == null) {
          beijingInfo_ = builderForValue.build();
          onChanged();
        } else {
          beijingInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
       *
       * <pre>
       *北汽附加信息
       * </pre>
       */
      public Builder mergeBeijingInfo(cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo value) {
        if (beijingInfoBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              beijingInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.getDefaultInstance()) {
            beijingInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.newBuilder(beijingInfo_).mergeFrom(value).buildPartial();
          } else {
            beijingInfo_ = value;
          }
          onChanged();
        } else {
          beijingInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
       *
       * <pre>
       *北汽附加信息
       * </pre>
       */
      public Builder clearBeijingInfo() {
        if (beijingInfoBuilder_ == null) {
          beijingInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.getDefaultInstance();
          onChanged();
        } else {
          beijingInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
       *
       * <pre>
       *北汽附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.Builder getBeijingInfoBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getBeijingInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
       *
       * <pre>
       *北汽附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfoOrBuilder getBeijingInfoOrBuilder() {
        if (beijingInfoBuilder_ != null) {
          return beijingInfoBuilder_.getMessageOrBuilder();
        } else {
          return beijingInfo_;
        }
      }
      /**
       * <code>optional .gboss.BeiJingInfo beijingInfo = 22;</code>
       *
       * <pre>
       *北汽附加信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo, cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfoOrBuilder> 
          getBeijingInfoFieldBuilder() {
        if (beijingInfoBuilder_ == null) {
          beijingInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo, cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BeiJingInfoOrBuilder>(
                  beijingInfo_,
                  getParentForChildren(),
                  isClean());
          beijingInfo_ = null;
        }
        return beijingInfoBuilder_;
      }

      // optional int32 AccTimeLen = 23;
      private int accTimeLen_ ;
      /**
       * <code>optional int32 AccTimeLen = 23;</code>
       *
       * <pre>
       *Acc On 或 Acc Off时长    
       * </pre>
       */
      public boolean hasAccTimeLen() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 AccTimeLen = 23;</code>
       *
       * <pre>
       *Acc On 或 Acc Off时长    
       * </pre>
       */
      public int getAccTimeLen() {
        return accTimeLen_;
      }
      /**
       * <code>optional int32 AccTimeLen = 23;</code>
       *
       * <pre>
       *Acc On 或 Acc Off时长    
       * </pre>
       */
      public Builder setAccTimeLen(int value) {
        bitField0_ |= 0x00400000;
        accTimeLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 AccTimeLen = 23;</code>
       *
       * <pre>
       *Acc On 或 Acc Off时长    
       * </pre>
       */
      public Builder clearAccTimeLen() {
        bitField0_ = (bitField0_ & ~0x00400000);
        accTimeLen_ = 0;
        onChanged();
        return this;
      }

      // optional .gboss.BatteryVoltageInfo batteryvoltage = 24;
      private cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo batteryvoltage_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfoOrBuilder> batteryvoltageBuilder_;
      /**
       * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
       *
       * <pre>
       *动力蓄电池电压信息
       * </pre>
       */
      public boolean hasBatteryvoltage() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
       *
       * <pre>
       *动力蓄电池电压信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo getBatteryvoltage() {
        if (batteryvoltageBuilder_ == null) {
          return batteryvoltage_;
        } else {
          return batteryvoltageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
       *
       * <pre>
       *动力蓄电池电压信息
       * </pre>
       */
      public Builder setBatteryvoltage(cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo value) {
        if (batteryvoltageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          batteryvoltage_ = value;
          onChanged();
        } else {
          batteryvoltageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
       *
       * <pre>
       *动力蓄电池电压信息
       * </pre>
       */
      public Builder setBatteryvoltage(
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.Builder builderForValue) {
        if (batteryvoltageBuilder_ == null) {
          batteryvoltage_ = builderForValue.build();
          onChanged();
        } else {
          batteryvoltageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
       *
       * <pre>
       *动力蓄电池电压信息
       * </pre>
       */
      public Builder mergeBatteryvoltage(cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo value) {
        if (batteryvoltageBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000) &&
              batteryvoltage_ != cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.getDefaultInstance()) {
            batteryvoltage_ =
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.newBuilder(batteryvoltage_).mergeFrom(value).buildPartial();
          } else {
            batteryvoltage_ = value;
          }
          onChanged();
        } else {
          batteryvoltageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
       *
       * <pre>
       *动力蓄电池电压信息
       * </pre>
       */
      public Builder clearBatteryvoltage() {
        if (batteryvoltageBuilder_ == null) {
          batteryvoltage_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.getDefaultInstance();
          onChanged();
        } else {
          batteryvoltageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
       *
       * <pre>
       *动力蓄电池电压信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.Builder getBatteryvoltageBuilder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getBatteryvoltageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
       *
       * <pre>
       *动力蓄电池电压信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfoOrBuilder getBatteryvoltageOrBuilder() {
        if (batteryvoltageBuilder_ != null) {
          return batteryvoltageBuilder_.getMessageOrBuilder();
        } else {
          return batteryvoltage_;
        }
      }
      /**
       * <code>optional .gboss.BatteryVoltageInfo batteryvoltage = 24;</code>
       *
       * <pre>
       *动力蓄电池电压信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfoOrBuilder> 
          getBatteryvoltageFieldBuilder() {
        if (batteryvoltageBuilder_ == null) {
          batteryvoltageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryVoltageInfoOrBuilder>(
                  batteryvoltage_,
                  getParentForChildren(),
                  isClean());
          batteryvoltage_ = null;
        }
        return batteryvoltageBuilder_;
      }

      // optional .gboss.BatteryTemperatureInfo batterytemperature = 25;
      private cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo batterytemperature_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfoOrBuilder> batterytemperatureBuilder_;
      /**
       * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
       *
       * <pre>
       *动力蓄电池温度信息
       * </pre>
       */
      public boolean hasBatterytemperature() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
       *
       * <pre>
       *动力蓄电池温度信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo getBatterytemperature() {
        if (batterytemperatureBuilder_ == null) {
          return batterytemperature_;
        } else {
          return batterytemperatureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
       *
       * <pre>
       *动力蓄电池温度信息
       * </pre>
       */
      public Builder setBatterytemperature(cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo value) {
        if (batterytemperatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          batterytemperature_ = value;
          onChanged();
        } else {
          batterytemperatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
       *
       * <pre>
       *动力蓄电池温度信息
       * </pre>
       */
      public Builder setBatterytemperature(
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.Builder builderForValue) {
        if (batterytemperatureBuilder_ == null) {
          batterytemperature_ = builderForValue.build();
          onChanged();
        } else {
          batterytemperatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
       *
       * <pre>
       *动力蓄电池温度信息
       * </pre>
       */
      public Builder mergeBatterytemperature(cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo value) {
        if (batterytemperatureBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              batterytemperature_ != cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.getDefaultInstance()) {
            batterytemperature_ =
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.newBuilder(batterytemperature_).mergeFrom(value).buildPartial();
          } else {
            batterytemperature_ = value;
          }
          onChanged();
        } else {
          batterytemperatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
       *
       * <pre>
       *动力蓄电池温度信息
       * </pre>
       */
      public Builder clearBatterytemperature() {
        if (batterytemperatureBuilder_ == null) {
          batterytemperature_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.getDefaultInstance();
          onChanged();
        } else {
          batterytemperatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
       *
       * <pre>
       *动力蓄电池温度信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.Builder getBatterytemperatureBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getBatterytemperatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
       *
       * <pre>
       *动力蓄电池温度信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfoOrBuilder getBatterytemperatureOrBuilder() {
        if (batterytemperatureBuilder_ != null) {
          return batterytemperatureBuilder_.getMessageOrBuilder();
        } else {
          return batterytemperature_;
        }
      }
      /**
       * <code>optional .gboss.BatteryTemperatureInfo batterytemperature = 25;</code>
       *
       * <pre>
       *动力蓄电池温度信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfoOrBuilder> 
          getBatterytemperatureFieldBuilder() {
        if (batterytemperatureBuilder_ == null) {
          batterytemperatureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryTemperatureInfoOrBuilder>(
                  batterytemperature_,
                  getParentForChildren(),
                  isClean());
          batterytemperature_ = null;
        }
        return batterytemperatureBuilder_;
      }

      // optional .gboss.BatteryExtremumInfo batteryextremum = 26;
      private cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo batteryextremum_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfoOrBuilder> batteryextremumBuilder_;
      /**
       * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
       *
       * <pre>
       *动力蓄电池极值信息
       * </pre>
       */
      public boolean hasBatteryextremum() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
       *
       * <pre>
       *动力蓄电池极值信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo getBatteryextremum() {
        if (batteryextremumBuilder_ == null) {
          return batteryextremum_;
        } else {
          return batteryextremumBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
       *
       * <pre>
       *动力蓄电池极值信息
       * </pre>
       */
      public Builder setBatteryextremum(cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo value) {
        if (batteryextremumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          batteryextremum_ = value;
          onChanged();
        } else {
          batteryextremumBuilder_.setMessage(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
       *
       * <pre>
       *动力蓄电池极值信息
       * </pre>
       */
      public Builder setBatteryextremum(
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.Builder builderForValue) {
        if (batteryextremumBuilder_ == null) {
          batteryextremum_ = builderForValue.build();
          onChanged();
        } else {
          batteryextremumBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
       *
       * <pre>
       *动力蓄电池极值信息
       * </pre>
       */
      public Builder mergeBatteryextremum(cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo value) {
        if (batteryextremumBuilder_ == null) {
          if (((bitField0_ & 0x02000000) == 0x02000000) &&
              batteryextremum_ != cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.getDefaultInstance()) {
            batteryextremum_ =
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.newBuilder(batteryextremum_).mergeFrom(value).buildPartial();
          } else {
            batteryextremum_ = value;
          }
          onChanged();
        } else {
          batteryextremumBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
       *
       * <pre>
       *动力蓄电池极值信息
       * </pre>
       */
      public Builder clearBatteryextremum() {
        if (batteryextremumBuilder_ == null) {
          batteryextremum_ = cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.getDefaultInstance();
          onChanged();
        } else {
          batteryextremumBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
       *
       * <pre>
       *动力蓄电池极值信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.Builder getBatteryextremumBuilder() {
        bitField0_ |= 0x02000000;
        onChanged();
        return getBatteryextremumFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
       *
       * <pre>
       *动力蓄电池极值信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfoOrBuilder getBatteryextremumOrBuilder() {
        if (batteryextremumBuilder_ != null) {
          return batteryextremumBuilder_.getMessageOrBuilder();
        } else {
          return batteryextremum_;
        }
      }
      /**
       * <code>optional .gboss.BatteryExtremumInfo batteryextremum = 26;</code>
       *
       * <pre>
       *动力蓄电池极值信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfoOrBuilder> 
          getBatteryextremumFieldBuilder() {
        if (batteryextremumBuilder_ == null) {
          batteryextremumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo, cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.BatteryExtremumInfoOrBuilder>(
                  batteryextremum_,
                  getParentForChildren(),
                  isClean());
          batteryextremum_ = null;
        }
        return batteryextremumBuilder_;
      }

      // optional .gboss.VKModBus vkmodbus = 27;
      private cc.chinagps.gateway.buff.GBossDataBuff.VKModBus vkmodbus_ = cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.VKModBus, cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.Builder, cc.chinagps.gateway.buff.GBossDataBuff.VKModBusOrBuilder> vkmodbusBuilder_;
      /**
       * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
       *
       * <pre>
       *微科尿素加注信息
       * </pre>
       */
      public boolean hasVkmodbus() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
       *
       * <pre>
       *微科尿素加注信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.VKModBus getVkmodbus() {
        if (vkmodbusBuilder_ == null) {
          return vkmodbus_;
        } else {
          return vkmodbusBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
       *
       * <pre>
       *微科尿素加注信息
       * </pre>
       */
      public Builder setVkmodbus(cc.chinagps.gateway.buff.GBossDataBuff.VKModBus value) {
        if (vkmodbusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vkmodbus_ = value;
          onChanged();
        } else {
          vkmodbusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
       *
       * <pre>
       *微科尿素加注信息
       * </pre>
       */
      public Builder setVkmodbus(
          cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.Builder builderForValue) {
        if (vkmodbusBuilder_ == null) {
          vkmodbus_ = builderForValue.build();
          onChanged();
        } else {
          vkmodbusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
       *
       * <pre>
       *微科尿素加注信息
       * </pre>
       */
      public Builder mergeVkmodbus(cc.chinagps.gateway.buff.GBossDataBuff.VKModBus value) {
        if (vkmodbusBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000) &&
              vkmodbus_ != cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.getDefaultInstance()) {
            vkmodbus_ =
              cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.newBuilder(vkmodbus_).mergeFrom(value).buildPartial();
          } else {
            vkmodbus_ = value;
          }
          onChanged();
        } else {
          vkmodbusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
       *
       * <pre>
       *微科尿素加注信息
       * </pre>
       */
      public Builder clearVkmodbus() {
        if (vkmodbusBuilder_ == null) {
          vkmodbus_ = cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.getDefaultInstance();
          onChanged();
        } else {
          vkmodbusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
       *
       * <pre>
       *微科尿素加注信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.Builder getVkmodbusBuilder() {
        bitField0_ |= 0x04000000;
        onChanged();
        return getVkmodbusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
       *
       * <pre>
       *微科尿素加注信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.VKModBusOrBuilder getVkmodbusOrBuilder() {
        if (vkmodbusBuilder_ != null) {
          return vkmodbusBuilder_.getMessageOrBuilder();
        } else {
          return vkmodbus_;
        }
      }
      /**
       * <code>optional .gboss.VKModBus vkmodbus = 27;</code>
       *
       * <pre>
       *微科尿素加注信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.VKModBus, cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.Builder, cc.chinagps.gateway.buff.GBossDataBuff.VKModBusOrBuilder> 
          getVkmodbusFieldBuilder() {
        if (vkmodbusBuilder_ == null) {
          vkmodbusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.VKModBus, cc.chinagps.gateway.buff.GBossDataBuff.VKModBus.Builder, cc.chinagps.gateway.buff.GBossDataBuff.VKModBusOrBuilder>(
                  vkmodbus_,
                  getParentForChildren(),
                  isClean());
          vkmodbus_ = null;
        }
        return vkmodbusBuilder_;
      }

      // optional int32 satelliteCount = 28;
      private int satelliteCount_ ;
      /**
       * <code>optional int32 satelliteCount = 28;</code>
       *
       * <pre>
       *定位卫星数
       * </pre>
       */
      public boolean hasSatelliteCount() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 satelliteCount = 28;</code>
       *
       * <pre>
       *定位卫星数
       * </pre>
       */
      public int getSatelliteCount() {
        return satelliteCount_;
      }
      /**
       * <code>optional int32 satelliteCount = 28;</code>
       *
       * <pre>
       *定位卫星数
       * </pre>
       */
      public Builder setSatelliteCount(int value) {
        bitField0_ |= 0x08000000;
        satelliteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 satelliteCount = 28;</code>
       *
       * <pre>
       *定位卫星数
       * </pre>
       */
      public Builder clearSatelliteCount() {
        bitField0_ = (bitField0_ & ~0x08000000);
        satelliteCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pdop = 29;
      private int pdop_ ;
      /**
       * <code>optional int32 pdop = 29;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public boolean hasPdop() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 pdop = 29;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public int getPdop() {
        return pdop_;
      }
      /**
       * <code>optional int32 pdop = 29;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public Builder setPdop(int value) {
        bitField0_ |= 0x10000000;
        pdop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pdop = 29;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public Builder clearPdop() {
        bitField0_ = (bitField0_ & ~0x10000000);
        pdop_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hdop = 30;
      private int hdop_ ;
      /**
       * <code>optional int32 hdop = 30;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public boolean hasHdop() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 hdop = 30;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public int getHdop() {
        return hdop_;
      }
      /**
       * <code>optional int32 hdop = 30;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public Builder setHdop(int value) {
        bitField0_ |= 0x20000000;
        hdop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hdop = 30;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public Builder clearHdop() {
        bitField0_ = (bitField0_ & ~0x20000000);
        hdop_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vdop = 31;
      private int vdop_ ;
      /**
       * <code>optional int32 vdop = 31;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public boolean hasVdop() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 vdop = 31;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public int getVdop() {
        return vdop_;
      }
      /**
       * <code>optional int32 vdop = 31;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public Builder setVdop(int value) {
        bitField0_ |= 0x40000000;
        vdop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vdop = 31;</code>
       *
       * <pre>
       *传输数值为原始值乘以10（即放大10倍，精度0.1）
       * </pre>
       */
      public Builder clearVdop() {
        bitField0_ = (bitField0_ & ~0x40000000);
        vdop_ = 0;
        onChanged();
        return this;
      }

      // optional .gboss.KeLongInfo keLongInfo = 32;
      private cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo keLongInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo, cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfoOrBuilder> keLongInfoBuilder_;
      /**
       * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
       *
       * <pre>
       *科隆附加信息
       * </pre>
       */
      public boolean hasKeLongInfo() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
       *
       * <pre>
       *科隆附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo getKeLongInfo() {
        if (keLongInfoBuilder_ == null) {
          return keLongInfo_;
        } else {
          return keLongInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
       *
       * <pre>
       *科隆附加信息
       * </pre>
       */
      public Builder setKeLongInfo(cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo value) {
        if (keLongInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keLongInfo_ = value;
          onChanged();
        } else {
          keLongInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
       *
       * <pre>
       *科隆附加信息
       * </pre>
       */
      public Builder setKeLongInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.Builder builderForValue) {
        if (keLongInfoBuilder_ == null) {
          keLongInfo_ = builderForValue.build();
          onChanged();
        } else {
          keLongInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
       *
       * <pre>
       *科隆附加信息
       * </pre>
       */
      public Builder mergeKeLongInfo(cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo value) {
        if (keLongInfoBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000) &&
              keLongInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.getDefaultInstance()) {
            keLongInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.newBuilder(keLongInfo_).mergeFrom(value).buildPartial();
          } else {
            keLongInfo_ = value;
          }
          onChanged();
        } else {
          keLongInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
       *
       * <pre>
       *科隆附加信息
       * </pre>
       */
      public Builder clearKeLongInfo() {
        if (keLongInfoBuilder_ == null) {
          keLongInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.getDefaultInstance();
          onChanged();
        } else {
          keLongInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
       *
       * <pre>
       *科隆附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.Builder getKeLongInfoBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getKeLongInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
       *
       * <pre>
       *科隆附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfoOrBuilder getKeLongInfoOrBuilder() {
        if (keLongInfoBuilder_ != null) {
          return keLongInfoBuilder_.getMessageOrBuilder();
        } else {
          return keLongInfo_;
        }
      }
      /**
       * <code>optional .gboss.KeLongInfo keLongInfo = 32;</code>
       *
       * <pre>
       *科隆附加信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo, cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfoOrBuilder> 
          getKeLongInfoFieldBuilder() {
        if (keLongInfoBuilder_ == null) {
          keLongInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo, cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.KeLongInfoOrBuilder>(
                  keLongInfo_,
                  getParentForChildren(),
                  isClean());
          keLongInfo_ = null;
        }
        return keLongInfoBuilder_;
      }

      // repeated .gboss.WifiAPInfo wifiAPInfos = 33;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo> wifiAPInfos_ =
        java.util.Collections.emptyList();
      private void ensureWifiAPInfosIsMutable() {
        if (!((bitField1_ & 0x00000001) == 0x00000001)) {
          wifiAPInfos_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo>(wifiAPInfos_);
          bitField1_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder> wifiAPInfosBuilder_;

      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo> getWifiAPInfosList() {
        if (wifiAPInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wifiAPInfos_);
        } else {
          return wifiAPInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public int getWifiAPInfosCount() {
        if (wifiAPInfosBuilder_ == null) {
          return wifiAPInfos_.size();
        } else {
          return wifiAPInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo getWifiAPInfos(int index) {
        if (wifiAPInfosBuilder_ == null) {
          return wifiAPInfos_.get(index);
        } else {
          return wifiAPInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public Builder setWifiAPInfos(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo value) {
        if (wifiAPInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifiAPInfosIsMutable();
          wifiAPInfos_.set(index, value);
          onChanged();
        } else {
          wifiAPInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public Builder setWifiAPInfos(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder builderForValue) {
        if (wifiAPInfosBuilder_ == null) {
          ensureWifiAPInfosIsMutable();
          wifiAPInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          wifiAPInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public Builder addWifiAPInfos(cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo value) {
        if (wifiAPInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifiAPInfosIsMutable();
          wifiAPInfos_.add(value);
          onChanged();
        } else {
          wifiAPInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public Builder addWifiAPInfos(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo value) {
        if (wifiAPInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifiAPInfosIsMutable();
          wifiAPInfos_.add(index, value);
          onChanged();
        } else {
          wifiAPInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public Builder addWifiAPInfos(
          cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder builderForValue) {
        if (wifiAPInfosBuilder_ == null) {
          ensureWifiAPInfosIsMutable();
          wifiAPInfos_.add(builderForValue.build());
          onChanged();
        } else {
          wifiAPInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public Builder addWifiAPInfos(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder builderForValue) {
        if (wifiAPInfosBuilder_ == null) {
          ensureWifiAPInfosIsMutable();
          wifiAPInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          wifiAPInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public Builder addAllWifiAPInfos(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo> values) {
        if (wifiAPInfosBuilder_ == null) {
          ensureWifiAPInfosIsMutable();
          super.addAll(values, wifiAPInfos_);
          onChanged();
        } else {
          wifiAPInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public Builder clearWifiAPInfos() {
        if (wifiAPInfosBuilder_ == null) {
          wifiAPInfos_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000001);
          onChanged();
        } else {
          wifiAPInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public Builder removeWifiAPInfos(int index) {
        if (wifiAPInfosBuilder_ == null) {
          ensureWifiAPInfosIsMutable();
          wifiAPInfos_.remove(index);
          onChanged();
        } else {
          wifiAPInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder getWifiAPInfosBuilder(
          int index) {
        return getWifiAPInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder getWifiAPInfosOrBuilder(
          int index) {
        if (wifiAPInfosBuilder_ == null) {
          return wifiAPInfos_.get(index);  } else {
          return wifiAPInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder> 
           getWifiAPInfosOrBuilderList() {
        if (wifiAPInfosBuilder_ != null) {
          return wifiAPInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wifiAPInfos_);
        }
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder addWifiAPInfosBuilder() {
        return getWifiAPInfosFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder addWifiAPInfosBuilder(
          int index) {
        return getWifiAPInfosFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.WifiAPInfo wifiAPInfos = 33;</code>
       *
       * <pre>
       *wifi ap信息
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder> 
           getWifiAPInfosBuilderList() {
        return getWifiAPInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder> 
          getWifiAPInfosFieldBuilder() {
        if (wifiAPInfosBuilder_ == null) {
          wifiAPInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.WifiAPInfoOrBuilder>(
                  wifiAPInfos_,
                  ((bitField1_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          wifiAPInfos_ = null;
        }
        return wifiAPInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsBaseInfo)
    }

    static {
      defaultInstance = new GpsBaseInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsBaseInfo)
  }

  public interface GpsRoadInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 level = 2;
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     *道路等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     *道路等级
     * </pre>
     */
    int getLevel();

    // required int32 distance = 3;
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到道路的距离
     * </pre>
     */
    boolean hasDistance();
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到道路的距离
     * </pre>
     */
    int getDistance();

    // optional int32 id = 4;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *道路编号
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *道路编号
     * </pre>
     */
    int getId();

    // optional int32 latOnRoad = 5;
    /**
     * <code>optional int32 latOnRoad = 5;</code>
     *
     * <pre>
     *匹配路上纬度(单位：百万分之一度）
     * </pre>
     */
    boolean hasLatOnRoad();
    /**
     * <code>optional int32 latOnRoad = 5;</code>
     *
     * <pre>
     *匹配路上纬度(单位：百万分之一度）
     * </pre>
     */
    int getLatOnRoad();

    // optional int32 lngOnRoad = 6;
    /**
     * <code>optional int32 lngOnRoad = 6;</code>
     *
     * <pre>
     *匹配路上经度(单位：百万分之一度）
     * </pre>
     */
    boolean hasLngOnRoad();
    /**
     * <code>optional int32 lngOnRoad = 6;</code>
     *
     * <pre>
     *匹配路上经度(单位：百万分之一度）
     * </pre>
     */
    int getLngOnRoad();
  }
  /**
   * Protobuf type {@code gboss.GpsRoadInfo}
   *
   * <pre>
   *
   * GPS道路信息
   * </pre>
   */
  public static final class GpsRoadInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsRoadInfoOrBuilder {
    // Use GpsRoadInfo.newBuilder() to construct.
    private GpsRoadInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsRoadInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsRoadInfo defaultInstance;
    public static GpsRoadInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsRoadInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsRoadInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              level_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              distance_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              id_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              latOnRoad_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              lngOnRoad_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsRoadInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsRoadInfo>() {
      public GpsRoadInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsRoadInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsRoadInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 level = 2;
    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     *道路等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     *道路等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // required int32 distance = 3;
    public static final int DISTANCE_FIELD_NUMBER = 3;
    private int distance_;
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到道路的距离
     * </pre>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到道路的距离
     * </pre>
     */
    public int getDistance() {
      return distance_;
    }

    // optional int32 id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private int id_;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *道路编号
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *道路编号
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional int32 latOnRoad = 5;
    public static final int LATONROAD_FIELD_NUMBER = 5;
    private int latOnRoad_;
    /**
     * <code>optional int32 latOnRoad = 5;</code>
     *
     * <pre>
     *匹配路上纬度(单位：百万分之一度）
     * </pre>
     */
    public boolean hasLatOnRoad() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 latOnRoad = 5;</code>
     *
     * <pre>
     *匹配路上纬度(单位：百万分之一度）
     * </pre>
     */
    public int getLatOnRoad() {
      return latOnRoad_;
    }

    // optional int32 lngOnRoad = 6;
    public static final int LNGONROAD_FIELD_NUMBER = 6;
    private int lngOnRoad_;
    /**
     * <code>optional int32 lngOnRoad = 6;</code>
     *
     * <pre>
     *匹配路上经度(单位：百万分之一度）
     * </pre>
     */
    public boolean hasLngOnRoad() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 lngOnRoad = 6;</code>
     *
     * <pre>
     *匹配路上经度(单位：百万分之一度）
     * </pre>
     */
    public int getLngOnRoad() {
      return lngOnRoad_;
    }

    private void initFields() {
      name_ = "";
      level_ = 0;
      distance_ = 0;
      id_ = 0;
      latOnRoad_ = 0;
      lngOnRoad_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, id_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, latOnRoad_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, lngOnRoad_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, id_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, latOnRoad_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, lngOnRoad_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsRoadInfo}
     *
     * <pre>
     *
     * GPS道路信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        latOnRoad_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lngOnRoad_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.distance_ = distance_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.latOnRoad_ = latOnRoad_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lngOnRoad_ = lngOnRoad_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLatOnRoad()) {
          setLatOnRoad(other.getLatOnRoad());
        }
        if (other.hasLngOnRoad()) {
          setLngOnRoad(other.getLngOnRoad());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasDistance()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 level = 2;
      private int level_ ;
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       *道路等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       *道路等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       *道路等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000002;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       *道路等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        onChanged();
        return this;
      }

      // required int32 distance = 3;
      private int distance_ ;
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到道路的距离
       * </pre>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到道路的距离
       * </pre>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到道路的距离
       * </pre>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000004;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到道路的距离
       * </pre>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 id = 4;
      private int id_ ;
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *道路编号
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *道路编号
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *道路编号
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000008;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *道路编号
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 latOnRoad = 5;
      private int latOnRoad_ ;
      /**
       * <code>optional int32 latOnRoad = 5;</code>
       *
       * <pre>
       *匹配路上纬度(单位：百万分之一度）
       * </pre>
       */
      public boolean hasLatOnRoad() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 latOnRoad = 5;</code>
       *
       * <pre>
       *匹配路上纬度(单位：百万分之一度）
       * </pre>
       */
      public int getLatOnRoad() {
        return latOnRoad_;
      }
      /**
       * <code>optional int32 latOnRoad = 5;</code>
       *
       * <pre>
       *匹配路上纬度(单位：百万分之一度）
       * </pre>
       */
      public Builder setLatOnRoad(int value) {
        bitField0_ |= 0x00000010;
        latOnRoad_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 latOnRoad = 5;</code>
       *
       * <pre>
       *匹配路上纬度(单位：百万分之一度）
       * </pre>
       */
      public Builder clearLatOnRoad() {
        bitField0_ = (bitField0_ & ~0x00000010);
        latOnRoad_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lngOnRoad = 6;
      private int lngOnRoad_ ;
      /**
       * <code>optional int32 lngOnRoad = 6;</code>
       *
       * <pre>
       *匹配路上经度(单位：百万分之一度）
       * </pre>
       */
      public boolean hasLngOnRoad() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 lngOnRoad = 6;</code>
       *
       * <pre>
       *匹配路上经度(单位：百万分之一度）
       * </pre>
       */
      public int getLngOnRoad() {
        return lngOnRoad_;
      }
      /**
       * <code>optional int32 lngOnRoad = 6;</code>
       *
       * <pre>
       *匹配路上经度(单位：百万分之一度）
       * </pre>
       */
      public Builder setLngOnRoad(int value) {
        bitField0_ |= 0x00000020;
        lngOnRoad_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lngOnRoad = 6;</code>
       *
       * <pre>
       *匹配路上经度(单位：百万分之一度）
       * </pre>
       */
      public Builder clearLngOnRoad() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lngOnRoad_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsRoadInfo)
    }

    static {
      defaultInstance = new GpsRoadInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsRoadInfo)
  }

  public interface GpsPointInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *参考点类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *参考点类型
     * </pre>
     */
    int getType();

    // required int32 distance = 3;
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到参考点的距离
     * </pre>
     */
    boolean hasDistance();
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到参考点的距离
     * </pre>
     */
    int getDistance();

    // optional int32 id = 4;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *参考点编号
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *参考点编号
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code gboss.GpsPointInfo}
   *
   * <pre>
   *
   * GPS参考点信息
   * </pre>
   */
  public static final class GpsPointInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsPointInfoOrBuilder {
    // Use GpsPointInfo.newBuilder() to construct.
    private GpsPointInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsPointInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsPointInfo defaultInstance;
    public static GpsPointInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsPointInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsPointInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              distance_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsPointInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsPointInfo>() {
      public GpsPointInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsPointInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsPointInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *参考点类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *参考点类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 distance = 3;
    public static final int DISTANCE_FIELD_NUMBER = 3;
    private int distance_;
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到参考点的距离
     * </pre>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到参考点的距离
     * </pre>
     */
    public int getDistance() {
      return distance_;
    }

    // optional int32 id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private int id_;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *参考点编号
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *参考点编号
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      name_ = "";
      type_ = 0;
      distance_ = 0;
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsPointInfo}
     *
     * <pre>
     *
     * GPS参考点信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.distance_ = distance_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasDistance()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *参考点类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *参考点类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *参考点类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *参考点类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 distance = 3;
      private int distance_ ;
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到参考点的距离
       * </pre>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到参考点的距离
       * </pre>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到参考点的距离
       * </pre>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000004;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到参考点的距离
       * </pre>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 id = 4;
      private int id_ ;
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *参考点编号
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *参考点编号
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *参考点编号
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000008;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *参考点编号
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsPointInfo)
    }

    static {
      defaultInstance = new GpsPointInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsPointInfo)
  }

  public interface GpsReferPositionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string province = 1;
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    boolean hasProvince();
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    java.lang.String getProvince();
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    com.google.protobuf.ByteString
        getProvinceBytes();

    // required string city = 2;
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    boolean hasCity();
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    java.lang.String getCity();
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    com.google.protobuf.ByteString
        getCityBytes();

    // required string county = 3;
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    boolean hasCounty();
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    java.lang.String getCounty();
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    com.google.protobuf.ByteString
        getCountyBytes();

    // repeated .gboss.GpsRoadInfo roads = 4;
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo> 
        getRoadsList();
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo getRoads(int index);
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    int getRoadsCount();
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder> 
        getRoadsOrBuilderList();
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder getRoadsOrBuilder(
        int index);

    // repeated .gboss.GpsPointInfo points = 5;
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo> 
        getPointsList();
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo getPoints(int index);
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    int getPointsCount();
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder> 
        getPointsOrBuilderList();
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder getPointsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gboss.GpsReferPosition}
   *
   * <pre>
   *
   * GPS参考位置信息
   * </pre>
   */
  public static final class GpsReferPosition extends
      com.google.protobuf.GeneratedMessage
      implements GpsReferPositionOrBuilder {
    // Use GpsReferPosition.newBuilder() to construct.
    private GpsReferPosition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsReferPosition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsReferPosition defaultInstance;
    public static GpsReferPosition getDefaultInstance() {
      return defaultInstance;
    }

    public GpsReferPosition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsReferPosition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              province_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              city_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              county_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                roads_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              roads_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                points_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              points_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          roads_ = java.util.Collections.unmodifiableList(roads_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsReferPosition> PARSER =
        new com.google.protobuf.AbstractParser<GpsReferPosition>() {
      public GpsReferPosition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsReferPosition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsReferPosition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string province = 1;
    public static final int PROVINCE_FIELD_NUMBER = 1;
    private java.lang.Object province_;
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    public boolean hasProvince() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    public java.lang.String getProvince() {
      java.lang.Object ref = province_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          province_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    public com.google.protobuf.ByteString
        getProvinceBytes() {
      java.lang.Object ref = province_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        province_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string city = 2;
    public static final int CITY_FIELD_NUMBER = 2;
    private java.lang.Object city_;
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    public boolean hasCity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    public java.lang.String getCity() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          city_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCityBytes() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        city_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string county = 3;
    public static final int COUNTY_FIELD_NUMBER = 3;
    private java.lang.Object county_;
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    public boolean hasCounty() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    public java.lang.String getCounty() {
      java.lang.Object ref = county_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          county_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCountyBytes() {
      java.lang.Object ref = county_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        county_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .gboss.GpsRoadInfo roads = 4;
    public static final int ROADS_FIELD_NUMBER = 4;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo> roads_;
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo> getRoadsList() {
      return roads_;
    }
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder> 
        getRoadsOrBuilderList() {
      return roads_;
    }
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public int getRoadsCount() {
      return roads_.size();
    }
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo getRoads(int index) {
      return roads_.get(index);
    }
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder getRoadsOrBuilder(
        int index) {
      return roads_.get(index);
    }

    // repeated .gboss.GpsPointInfo points = 5;
    public static final int POINTS_FIELD_NUMBER = 5;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo> points_;
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo> getPointsList() {
      return points_;
    }
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    private void initFields() {
      province_ = "";
      city_ = "";
      county_ = "";
      roads_ = java.util.Collections.emptyList();
      points_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasProvince()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCounty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRoadsCount(); i++) {
        if (!getRoads(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPointsCount(); i++) {
        if (!getPoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getProvinceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getCityBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getCountyBytes());
      }
      for (int i = 0; i < roads_.size(); i++) {
        output.writeMessage(4, roads_.get(i));
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(5, points_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getProvinceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getCityBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCountyBytes());
      }
      for (int i = 0; i < roads_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, roads_.get(i));
      }
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, points_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsReferPosition}
     *
     * <pre>
     *
     * GPS参考位置信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoadsFieldBuilder();
          getPointsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        province_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        city_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        county_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (roadsBuilder_ == null) {
          roads_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          roadsBuilder_.clear();
        }
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition build() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition result = new cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.province_ = province_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.city_ = city_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.county_ = county_;
        if (roadsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            roads_ = java.util.Collections.unmodifiableList(roads_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.roads_ = roads_;
        } else {
          result.roads_ = roadsBuilder_.build();
        }
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) return this;
        if (other.hasProvince()) {
          bitField0_ |= 0x00000001;
          province_ = other.province_;
          onChanged();
        }
        if (other.hasCity()) {
          bitField0_ |= 0x00000002;
          city_ = other.city_;
          onChanged();
        }
        if (other.hasCounty()) {
          bitField0_ |= 0x00000004;
          county_ = other.county_;
          onChanged();
        }
        if (roadsBuilder_ == null) {
          if (!other.roads_.isEmpty()) {
            if (roads_.isEmpty()) {
              roads_ = other.roads_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRoadsIsMutable();
              roads_.addAll(other.roads_);
            }
            onChanged();
          }
        } else {
          if (!other.roads_.isEmpty()) {
            if (roadsBuilder_.isEmpty()) {
              roadsBuilder_.dispose();
              roadsBuilder_ = null;
              roads_ = other.roads_;
              bitField0_ = (bitField0_ & ~0x00000008);
              roadsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoadsFieldBuilder() : null;
            } else {
              roadsBuilder_.addAllMessages(other.roads_);
            }
          }
        }
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000010);
              pointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProvince()) {
          
          return false;
        }
        if (!hasCity()) {
          
          return false;
        }
        if (!hasCounty()) {
          
          return false;
        }
        for (int i = 0; i < getRoadsCount(); i++) {
          if (!getRoads(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPointsCount(); i++) {
          if (!getPoints(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string province = 1;
      private java.lang.Object province_ = "";
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public boolean hasProvince() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public java.lang.String getProvince() {
        java.lang.Object ref = province_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          province_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public com.google.protobuf.ByteString
          getProvinceBytes() {
        java.lang.Object ref = province_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          province_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public Builder setProvince(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        province_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public Builder clearProvince() {
        bitField0_ = (bitField0_ & ~0x00000001);
        province_ = getDefaultInstance().getProvince();
        onChanged();
        return this;
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public Builder setProvinceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        province_ = value;
        onChanged();
        return this;
      }

      // required string city = 2;
      private java.lang.Object city_ = "";
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public boolean hasCity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public java.lang.String getCity() {
        java.lang.Object ref = city_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          city_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCityBytes() {
        java.lang.Object ref = city_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          city_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public Builder setCity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        city_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public Builder clearCity() {
        bitField0_ = (bitField0_ & ~0x00000002);
        city_ = getDefaultInstance().getCity();
        onChanged();
        return this;
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public Builder setCityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        city_ = value;
        onChanged();
        return this;
      }

      // required string county = 3;
      private java.lang.Object county_ = "";
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public boolean hasCounty() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public java.lang.String getCounty() {
        java.lang.Object ref = county_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          county_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCountyBytes() {
        java.lang.Object ref = county_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          county_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public Builder setCounty(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        county_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public Builder clearCounty() {
        bitField0_ = (bitField0_ & ~0x00000004);
        county_ = getDefaultInstance().getCounty();
        onChanged();
        return this;
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public Builder setCountyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        county_ = value;
        onChanged();
        return this;
      }

      // repeated .gboss.GpsRoadInfo roads = 4;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo> roads_ =
        java.util.Collections.emptyList();
      private void ensureRoadsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          roads_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo>(roads_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder> roadsBuilder_;

      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo> getRoadsList() {
        if (roadsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roads_);
        } else {
          return roadsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public int getRoadsCount() {
        if (roadsBuilder_ == null) {
          return roads_.size();
        } else {
          return roadsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo getRoads(int index) {
        if (roadsBuilder_ == null) {
          return roads_.get(index);
        } else {
          return roadsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder setRoads(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo value) {
        if (roadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoadsIsMutable();
          roads_.set(index, value);
          onChanged();
        } else {
          roadsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder setRoads(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder builderForValue) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          roads_.set(index, builderForValue.build());
          onChanged();
        } else {
          roadsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addRoads(cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo value) {
        if (roadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoadsIsMutable();
          roads_.add(value);
          onChanged();
        } else {
          roadsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addRoads(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo value) {
        if (roadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoadsIsMutable();
          roads_.add(index, value);
          onChanged();
        } else {
          roadsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addRoads(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder builderForValue) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          roads_.add(builderForValue.build());
          onChanged();
        } else {
          roadsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addRoads(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder builderForValue) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          roads_.add(index, builderForValue.build());
          onChanged();
        } else {
          roadsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addAllRoads(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo> values) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          super.addAll(values, roads_);
          onChanged();
        } else {
          roadsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder clearRoads() {
        if (roadsBuilder_ == null) {
          roads_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          roadsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder removeRoads(int index) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          roads_.remove(index);
          onChanged();
        } else {
          roadsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder getRoadsBuilder(
          int index) {
        return getRoadsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder getRoadsOrBuilder(
          int index) {
        if (roadsBuilder_ == null) {
          return roads_.get(index);  } else {
          return roadsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder> 
           getRoadsOrBuilderList() {
        if (roadsBuilder_ != null) {
          return roadsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roads_);
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder addRoadsBuilder() {
        return getRoadsFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder addRoadsBuilder(
          int index) {
        return getRoadsFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder> 
           getRoadsBuilderList() {
        return getRoadsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder> 
          getRoadsFieldBuilder() {
        if (roadsBuilder_ == null) {
          roadsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsRoadInfoOrBuilder>(
                  roads_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          roads_ = null;
        }
        return roadsBuilder_;
      }

      // repeated .gboss.GpsPointInfo points = 5;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          points_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo>(points_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder> pointsBuilder_;

      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder setPoints(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder setPoints(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addPoints(cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addPoints(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addPoints(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addPoints(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          super.addAll(values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder> 
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder> 
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder> 
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsPointInfoOrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsReferPosition)
    }

    static {
      defaultInstance = new GpsReferPosition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsReferPosition)
  }

  public interface GpsInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required .gboss.GpsBaseInfo baseInfo = 2;
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    boolean hasBaseInfo();
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getBaseInfo();
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder();

    // optional .gboss.GpsReferPosition referPosition = 3;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    boolean hasReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder();

    // optional bytes content = 4;
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    com.google.protobuf.ByteString getContent();

    // optional int32 history = 5;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    boolean hasHistory();
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    int getHistory();
  }
  /**
   * Protobuf type {@code gboss.GpsInfo}
   *
   * <pre>
   *
   * GPS完整信息
   * </pre>
   */
  public static final class GpsInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsInfoOrBuilder {
    // Use GpsInfo.newBuilder() to construct.
    private GpsInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsInfo defaultInstance;
    public static GpsInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = baseInfo_.toBuilder();
              }
              baseInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseInfo_);
                baseInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = referPosition_.toBuilder();
              }
              referPosition_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referPosition_);
                referPosition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              content_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              history_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsInfo>() {
      public GpsInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .gboss.GpsBaseInfo baseInfo = 2;
    public static final int BASEINFO_FIELD_NUMBER = 2;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo baseInfo_;
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public boolean hasBaseInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
      return baseInfo_;
    }
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
      return baseInfo_;
    }

    // optional .gboss.GpsReferPosition referPosition = 3;
    public static final int REFERPOSITION_FIELD_NUMBER = 3;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition referPosition_;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public boolean hasReferPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
      return referPosition_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
      return referPosition_;
    }

    // optional bytes content = 4;
    public static final int CONTENT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    // optional int32 history = 5;
    public static final int HISTORY_FIELD_NUMBER = 5;
    private int history_;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public boolean hasHistory() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public int getHistory() {
      return history_;
    }

    private void initFields() {
      callLetter_ = "";
      baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      content_ = com.google.protobuf.ByteString.EMPTY;
      history_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBaseInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBaseInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasReferPosition()) {
        if (!getReferPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, referPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, content_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, history_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, referPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, content_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, history_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsInfo}
     *
     * <pre>
     *
     * GPS完整信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.GpsInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBaseInfoFieldBuilder();
          getReferPositionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        history_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_GpsInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (baseInfoBuilder_ == null) {
          result.baseInfo_ = baseInfo_;
        } else {
          result.baseInfo_ = baseInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (referPositionBuilder_ == null) {
          result.referPosition_ = referPosition_;
        } else {
          result.referPosition_ = referPositionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.history_ = history_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasBaseInfo()) {
          mergeBaseInfo(other.getBaseInfo());
        }
        if (other.hasReferPosition()) {
          mergeReferPosition(other.getReferPosition());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasHistory()) {
          setHistory(other.getHistory());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasBaseInfo()) {
          
          return false;
        }
        if (!getBaseInfo().isInitialized()) {
          
          return false;
        }
        if (hasReferPosition()) {
          if (!getReferPosition().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.GpsInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required .gboss.GpsBaseInfo baseInfo = 2;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> baseInfoBuilder_;
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public boolean hasBaseInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
        if (baseInfoBuilder_ == null) {
          return baseInfo_;
        } else {
          return baseInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseInfo_ = value;
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder mergeBaseInfo(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              baseInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            baseInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.newBuilder(baseInfo_).mergeFrom(value).buildPartial();
          } else {
            baseInfo_ = value;
          }
          onChanged();
        } else {
          baseInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder clearBaseInfo() {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder getBaseInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
        if (baseInfoBuilder_ != null) {
          return baseInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseInfo_;
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getBaseInfoFieldBuilder() {
        if (baseInfoBuilder_ == null) {
          baseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  baseInfo_,
                  getParentForChildren(),
                  isClean());
          baseInfo_ = null;
        }
        return baseInfoBuilder_;
      }

      // optional .gboss.GpsReferPosition referPosition = 3;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> referPositionBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public boolean hasReferPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
        if (referPositionBuilder_ == null) {
          return referPosition_;
        } else {
          return referPositionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referPosition_ = value;
          onChanged();
        } else {
          referPositionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (referPositionBuilder_ == null) {
          referPosition_ = builderForValue.build();
          onChanged();
        } else {
          referPositionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder mergeReferPosition(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              referPosition_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            referPosition_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.newBuilder(referPosition_).mergeFrom(value).buildPartial();
          } else {
            referPosition_ = value;
          }
          onChanged();
        } else {
          referPositionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder clearReferPosition() {
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder getReferPositionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getReferPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
        if (referPositionBuilder_ != null) {
          return referPositionBuilder_.getMessageOrBuilder();
        } else {
          return referPosition_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getReferPositionFieldBuilder() {
        if (referPositionBuilder_ == null) {
          referPositionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  referPosition_,
                  getParentForChildren(),
                  isClean());
          referPosition_ = null;
        }
        return referPositionBuilder_;
      }

      // optional bytes content = 4;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // optional int32 history = 5;
      private int history_ ;
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public boolean hasHistory() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public int getHistory() {
        return history_;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder setHistory(int value) {
        bitField0_ |= 0x00000010;
        history_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder clearHistory() {
        bitField0_ = (bitField0_ & ~0x00000010);
        history_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsInfo)
    }

    static {
      defaultInstance = new GpsInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsInfo)
  }

  public interface AlarmInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required .gboss.GpsBaseInfo baseInfo = 2;
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    boolean hasBaseInfo();
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getBaseInfo();
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder();

    // optional .gboss.GpsReferPosition referPosition = 3;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    boolean hasReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder();

    // optional bytes content = 4;
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    com.google.protobuf.ByteString getContent();

    // optional int32 history = 5;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    boolean hasHistory();
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    int getHistory();

    // optional int32 unittype = 6;
    /**
     * <code>optional int32 unittype = 6;</code>
     *
     * <pre>
     *终端类型
     * </pre>
     */
    boolean hasUnittype();
    /**
     * <code>optional int32 unittype = 6;</code>
     *
     * <pre>
     *终端类型
     * </pre>
     */
    int getUnittype();

    // optional int32 trigger = 7;
    /**
     * <code>optional int32 trigger = 7;</code>
     *
     * <pre>
     *触发条件
     * </pre>
     */
    boolean hasTrigger();
    /**
     * <code>optional int32 trigger = 7;</code>
     *
     * <pre>
     *触发条件
     * </pre>
     */
    int getTrigger();
  }
  /**
   * Protobuf type {@code gboss.AlarmInfo}
   *
   * <pre>
   **
   * 警情信息
   * </pre>
   */
  public static final class AlarmInfo extends
      com.google.protobuf.GeneratedMessage
      implements AlarmInfoOrBuilder {
    // Use AlarmInfo.newBuilder() to construct.
    private AlarmInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AlarmInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AlarmInfo defaultInstance;
    public static AlarmInfo getDefaultInstance() {
      return defaultInstance;
    }

    public AlarmInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AlarmInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = baseInfo_.toBuilder();
              }
              baseInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseInfo_);
                baseInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = referPosition_.toBuilder();
              }
              referPosition_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referPosition_);
                referPosition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              content_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              history_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              unittype_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              trigger_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<AlarmInfo> PARSER =
        new com.google.protobuf.AbstractParser<AlarmInfo>() {
      public AlarmInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AlarmInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AlarmInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .gboss.GpsBaseInfo baseInfo = 2;
    public static final int BASEINFO_FIELD_NUMBER = 2;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo baseInfo_;
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public boolean hasBaseInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
      return baseInfo_;
    }
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
      return baseInfo_;
    }

    // optional .gboss.GpsReferPosition referPosition = 3;
    public static final int REFERPOSITION_FIELD_NUMBER = 3;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition referPosition_;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public boolean hasReferPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
      return referPosition_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
      return referPosition_;
    }

    // optional bytes content = 4;
    public static final int CONTENT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    // optional int32 history = 5;
    public static final int HISTORY_FIELD_NUMBER = 5;
    private int history_;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public boolean hasHistory() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public int getHistory() {
      return history_;
    }

    // optional int32 unittype = 6;
    public static final int UNITTYPE_FIELD_NUMBER = 6;
    private int unittype_;
    /**
     * <code>optional int32 unittype = 6;</code>
     *
     * <pre>
     *终端类型
     * </pre>
     */
    public boolean hasUnittype() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 unittype = 6;</code>
     *
     * <pre>
     *终端类型
     * </pre>
     */
    public int getUnittype() {
      return unittype_;
    }

    // optional int32 trigger = 7;
    public static final int TRIGGER_FIELD_NUMBER = 7;
    private int trigger_;
    /**
     * <code>optional int32 trigger = 7;</code>
     *
     * <pre>
     *触发条件
     * </pre>
     */
    public boolean hasTrigger() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 trigger = 7;</code>
     *
     * <pre>
     *触发条件
     * </pre>
     */
    public int getTrigger() {
      return trigger_;
    }

    private void initFields() {
      callLetter_ = "";
      baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      content_ = com.google.protobuf.ByteString.EMPTY;
      history_ = 0;
      unittype_ = 0;
      trigger_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBaseInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBaseInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasReferPosition()) {
        if (!getReferPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, referPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, content_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, history_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, unittype_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, trigger_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, referPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, content_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, history_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, unittype_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, trigger_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.AlarmInfo}
     *
     * <pre>
     **
     * 警情信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBaseInfoFieldBuilder();
          getReferPositionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        history_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        unittype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        trigger_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (baseInfoBuilder_ == null) {
          result.baseInfo_ = baseInfo_;
        } else {
          result.baseInfo_ = baseInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (referPositionBuilder_ == null) {
          result.referPosition_ = referPosition_;
        } else {
          result.referPosition_ = referPositionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.history_ = history_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.unittype_ = unittype_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.trigger_ = trigger_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasBaseInfo()) {
          mergeBaseInfo(other.getBaseInfo());
        }
        if (other.hasReferPosition()) {
          mergeReferPosition(other.getReferPosition());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasHistory()) {
          setHistory(other.getHistory());
        }
        if (other.hasUnittype()) {
          setUnittype(other.getUnittype());
        }
        if (other.hasTrigger()) {
          setTrigger(other.getTrigger());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasBaseInfo()) {
          
          return false;
        }
        if (!getBaseInfo().isInitialized()) {
          
          return false;
        }
        if (hasReferPosition()) {
          if (!getReferPosition().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.AlarmInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required .gboss.GpsBaseInfo baseInfo = 2;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> baseInfoBuilder_;
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public boolean hasBaseInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
        if (baseInfoBuilder_ == null) {
          return baseInfo_;
        } else {
          return baseInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseInfo_ = value;
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder mergeBaseInfo(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              baseInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            baseInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.newBuilder(baseInfo_).mergeFrom(value).buildPartial();
          } else {
            baseInfo_ = value;
          }
          onChanged();
        } else {
          baseInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder clearBaseInfo() {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder getBaseInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
        if (baseInfoBuilder_ != null) {
          return baseInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseInfo_;
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getBaseInfoFieldBuilder() {
        if (baseInfoBuilder_ == null) {
          baseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  baseInfo_,
                  getParentForChildren(),
                  isClean());
          baseInfo_ = null;
        }
        return baseInfoBuilder_;
      }

      // optional .gboss.GpsReferPosition referPosition = 3;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> referPositionBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public boolean hasReferPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
        if (referPositionBuilder_ == null) {
          return referPosition_;
        } else {
          return referPositionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referPosition_ = value;
          onChanged();
        } else {
          referPositionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (referPositionBuilder_ == null) {
          referPosition_ = builderForValue.build();
          onChanged();
        } else {
          referPositionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder mergeReferPosition(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              referPosition_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            referPosition_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.newBuilder(referPosition_).mergeFrom(value).buildPartial();
          } else {
            referPosition_ = value;
          }
          onChanged();
        } else {
          referPositionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder clearReferPosition() {
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder getReferPositionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getReferPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
        if (referPositionBuilder_ != null) {
          return referPositionBuilder_.getMessageOrBuilder();
        } else {
          return referPosition_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getReferPositionFieldBuilder() {
        if (referPositionBuilder_ == null) {
          referPositionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  referPosition_,
                  getParentForChildren(),
                  isClean());
          referPosition_ = null;
        }
        return referPositionBuilder_;
      }

      // optional bytes content = 4;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // optional int32 history = 5;
      private int history_ ;
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public boolean hasHistory() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public int getHistory() {
        return history_;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder setHistory(int value) {
        bitField0_ |= 0x00000010;
        history_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder clearHistory() {
        bitField0_ = (bitField0_ & ~0x00000010);
        history_ = 0;
        onChanged();
        return this;
      }

      // optional int32 unittype = 6;
      private int unittype_ ;
      /**
       * <code>optional int32 unittype = 6;</code>
       *
       * <pre>
       *终端类型
       * </pre>
       */
      public boolean hasUnittype() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 unittype = 6;</code>
       *
       * <pre>
       *终端类型
       * </pre>
       */
      public int getUnittype() {
        return unittype_;
      }
      /**
       * <code>optional int32 unittype = 6;</code>
       *
       * <pre>
       *终端类型
       * </pre>
       */
      public Builder setUnittype(int value) {
        bitField0_ |= 0x00000020;
        unittype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unittype = 6;</code>
       *
       * <pre>
       *终端类型
       * </pre>
       */
      public Builder clearUnittype() {
        bitField0_ = (bitField0_ & ~0x00000020);
        unittype_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trigger = 7;
      private int trigger_ ;
      /**
       * <code>optional int32 trigger = 7;</code>
       *
       * <pre>
       *触发条件
       * </pre>
       */
      public boolean hasTrigger() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 trigger = 7;</code>
       *
       * <pre>
       *触发条件
       * </pre>
       */
      public int getTrigger() {
        return trigger_;
      }
      /**
       * <code>optional int32 trigger = 7;</code>
       *
       * <pre>
       *触发条件
       * </pre>
       */
      public Builder setTrigger(int value) {
        bitField0_ |= 0x00000040;
        trigger_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trigger = 7;</code>
       *
       * <pre>
       *触发条件
       * </pre>
       */
      public Builder clearTrigger() {
        bitField0_ = (bitField0_ & ~0x00000040);
        trigger_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.AlarmInfo)
    }

    static {
      defaultInstance = new AlarmInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.AlarmInfo)
  }

  public interface UnitVersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required string version = 2;
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *终端软件版本
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *终端软件版本
     * </pre>
     */
    java.lang.String getVersion();
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *终端软件版本
     * </pre>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    // optional int32 result = 3;
    /**
     * <code>optional int32 result = 3;</code>
     *
     * <pre>
     *版本升级结果 0:成功  其他失败
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>optional int32 result = 3;</code>
     *
     * <pre>
     *版本升级结果 0:成功  其他失败
     * </pre>
     */
    int getResult();

    // optional int32 canId = 4;
    /**
     * <code>optional int32 canId = 4;</code>
     *
     * <pre>
     *整车升级canId
     * </pre>
     */
    boolean hasCanId();
    /**
     * <code>optional int32 canId = 4;</code>
     *
     * <pre>
     *整车升级canId
     * </pre>
     */
    int getCanId();
  }
  /**
   * Protobuf type {@code gboss.UnitVersion}
   *
   * <pre>
   *
   * 终端软件版本
   * </pre>
   */
  public static final class UnitVersion extends
      com.google.protobuf.GeneratedMessage
      implements UnitVersionOrBuilder {
    // Use UnitVersion.newBuilder() to construct.
    private UnitVersion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnitVersion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnitVersion defaultInstance;
    public static UnitVersion getDefaultInstance() {
      return defaultInstance;
    }

    public UnitVersion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnitVersion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              version_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              result_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              canId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_UnitVersion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_UnitVersion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion.class, cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion.Builder.class);
    }

    public static com.google.protobuf.Parser<UnitVersion> PARSER =
        new com.google.protobuf.AbstractParser<UnitVersion>() {
      public UnitVersion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnitVersion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnitVersion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string version = 2;
    public static final int VERSION_FIELD_NUMBER = 2;
    private java.lang.Object version_;
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *终端软件版本
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *终端软件版本
     * </pre>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *终端软件版本
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 result = 3;
    public static final int RESULT_FIELD_NUMBER = 3;
    private int result_;
    /**
     * <code>optional int32 result = 3;</code>
     *
     * <pre>
     *版本升级结果 0:成功  其他失败
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 result = 3;</code>
     *
     * <pre>
     *版本升级结果 0:成功  其他失败
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // optional int32 canId = 4;
    public static final int CANID_FIELD_NUMBER = 4;
    private int canId_;
    /**
     * <code>optional int32 canId = 4;</code>
     *
     * <pre>
     *整车升级canId
     * </pre>
     */
    public boolean hasCanId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 canId = 4;</code>
     *
     * <pre>
     *整车升级canId
     * </pre>
     */
    public int getCanId() {
      return canId_;
    }

    private void initFields() {
      callLetter_ = "";
      version_ = "";
      result_ = 0;
      canId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, result_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, canId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, result_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, canId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.UnitVersion}
     *
     * <pre>
     *
     * 终端软件版本
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.UnitVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_UnitVersion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_UnitVersion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion.class, cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        canId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_UnitVersion_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion build() {
        cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion result = new cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.canId_ = canId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasVersion()) {
          bitField0_ |= 0x00000002;
          version_ = other.version_;
          onChanged();
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasCanId()) {
          setCanId(other.getCanId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.UnitVersion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required string version = 2;
      private java.lang.Object version_ = "";
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *终端软件版本
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *终端软件版本
       * </pre>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *终端软件版本
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *终端软件版本
       * </pre>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *终端软件版本
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *终端软件版本
       * </pre>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }

      // optional int32 result = 3;
      private int result_ ;
      /**
       * <code>optional int32 result = 3;</code>
       *
       * <pre>
       *版本升级结果 0:成功  其他失败
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 result = 3;</code>
       *
       * <pre>
       *版本升级结果 0:成功  其他失败
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>optional int32 result = 3;</code>
       *
       * <pre>
       *版本升级结果 0:成功  其他失败
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000004;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 result = 3;</code>
       *
       * <pre>
       *版本升级结果 0:成功  其他失败
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000004);
        result_ = 0;
        onChanged();
        return this;
      }

      // optional int32 canId = 4;
      private int canId_ ;
      /**
       * <code>optional int32 canId = 4;</code>
       *
       * <pre>
       *整车升级canId
       * </pre>
       */
      public boolean hasCanId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 canId = 4;</code>
       *
       * <pre>
       *整车升级canId
       * </pre>
       */
      public int getCanId() {
        return canId_;
      }
      /**
       * <code>optional int32 canId = 4;</code>
       *
       * <pre>
       *整车升级canId
       * </pre>
       */
      public Builder setCanId(int value) {
        bitField0_ |= 0x00000008;
        canId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 canId = 4;</code>
       *
       * <pre>
       *整车升级canId
       * </pre>
       */
      public Builder clearCanId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        canId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.UnitVersion)
    }

    static {
      defaultInstance = new UnitVersion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.UnitVersion)
  }

  public interface OperateDataBaseInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 price = 1;
    /**
     * <code>required int32 price = 1;</code>
     *
     * <pre>
     *价格（单位：分）
     * </pre>
     */
    boolean hasPrice();
    /**
     * <code>required int32 price = 1;</code>
     *
     * <pre>
     *价格（单位：分）
     * </pre>
     */
    int getPrice();

    // required int32 countTime = 2;
    /**
     * <code>required int32 countTime = 2;</code>
     *
     * <pre>
     *计时(单位：毫秒）
     * </pre>
     */
    boolean hasCountTime();
    /**
     * <code>required int32 countTime = 2;</code>
     *
     * <pre>
     *计时(单位：毫秒）
     * </pre>
     */
    int getCountTime();

    // required int32 operateMoney = 3;
    /**
     * <code>required int32 operateMoney = 3;</code>
     *
     * <pre>
     *收费(单位：分）
     * </pre>
     */
    boolean hasOperateMoney();
    /**
     * <code>required int32 operateMoney = 3;</code>
     *
     * <pre>
     *收费(单位：分）
     * </pre>
     */
    int getOperateMoney();

    // required int32 operateMile = 4;
    /**
     * <code>required int32 operateMile = 4;</code>
     *
     * <pre>
     *运营里程（单位：米）
     * </pre>
     */
    boolean hasOperateMile();
    /**
     * <code>required int32 operateMile = 4;</code>
     *
     * <pre>
     *运营里程（单位：米）
     * </pre>
     */
    int getOperateMile();

    // optional int32 nullMile = 5;
    /**
     * <code>optional int32 nullMile = 5;</code>
     *
     * <pre>
     *空载里程（单位：米）
     * </pre>
     */
    boolean hasNullMile();
    /**
     * <code>optional int32 nullMile = 5;</code>
     *
     * <pre>
     *空载里程（单位：米）
     * </pre>
     */
    int getNullMile();

    // optional int32 overSpeedMile = 6;
    /**
     * <code>optional int32 overSpeedMile = 6;</code>
     *
     * <pre>
     *超速里程（单位：米）
     * </pre>
     */
    boolean hasOverSpeedMile();
    /**
     * <code>optional int32 overSpeedMile = 6;</code>
     *
     * <pre>
     *超速里程（单位：米）
     * </pre>
     */
    int getOverSpeedMile();

    // optional int32 overSpeedCount = 7;
    /**
     * <code>optional int32 overSpeedCount = 7;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    boolean hasOverSpeedCount();
    /**
     * <code>optional int32 overSpeedCount = 7;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    int getOverSpeedCount();

    // optional int32 powerOffCount = 8;
    /**
     * <code>optional int32 powerOffCount = 8;</code>
     *
     * <pre>
     *断电次数
     * </pre>
     */
    boolean hasPowerOffCount();
    /**
     * <code>optional int32 powerOffCount = 8;</code>
     *
     * <pre>
     *断电次数
     * </pre>
     */
    int getPowerOffCount();

    // optional int32 powerOffTime = 9;
    /**
     * <code>optional int32 powerOffTime = 9;</code>
     *
     * <pre>
     *断电时间（单位:秒）
     * </pre>
     */
    boolean hasPowerOffTime();
    /**
     * <code>optional int32 powerOffTime = 9;</code>
     *
     * <pre>
     *断电时间（单位:秒）
     * </pre>
     */
    int getPowerOffTime();

    // optional int32 sequenceNo = 10;
    /**
     * <code>optional int32 sequenceNo = 10;</code>
     *
     * <pre>
     *流水号
     * </pre>
     */
    boolean hasSequenceNo();
    /**
     * <code>optional int32 sequenceNo = 10;</code>
     *
     * <pre>
     *流水号
     * </pre>
     */
    int getSequenceNo();

    // repeated .gboss.MapEntry appendParams = 11;
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> 
        getAppendParamsList();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getAppendParams(int index);
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    int getAppendParamsCount();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
        getAppendParamsOrBuilderList();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
        int index);

    // optional int32 perprice = 12;
    /**
     * <code>optional int32 perprice = 12;</code>
     *
     * <pre>
     *营运结束单价
     * </pre>
     */
    boolean hasPerprice();
    /**
     * <code>optional int32 perprice = 12;</code>
     *
     * <pre>
     *营运结束单价
     * </pre>
     */
    int getPerprice();

    // optional string licenseno = 13;
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    boolean hasLicenseno();
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    java.lang.String getLicenseno();
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    com.google.protobuf.ByteString
        getLicensenoBytes();
  }
  /**
   * Protobuf type {@code gboss.OperateDataBaseInfo}
   *
   * <pre>
   *************************************************************************************
   * 运营数据基本信息
   ************************************************************************************
   * </pre>
   */
  public static final class OperateDataBaseInfo extends
      com.google.protobuf.GeneratedMessage
      implements OperateDataBaseInfoOrBuilder {
    // Use OperateDataBaseInfo.newBuilder() to construct.
    private OperateDataBaseInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OperateDataBaseInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OperateDataBaseInfo defaultInstance;
    public static OperateDataBaseInfo getDefaultInstance() {
      return defaultInstance;
    }

    public OperateDataBaseInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OperateDataBaseInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              price_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              countTime_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              operateMoney_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              operateMile_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              nullMile_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              overSpeedMile_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              overSpeedCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              powerOffCount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              powerOffTime_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              sequenceNo_ = input.readInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                appendParams_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry>();
                mutable_bitField0_ |= 0x00000400;
              }
              appendParams_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.PARSER, extensionRegistry));
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              perprice_ = input.readInt32();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000800;
              licenseno_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          appendParams_ = java.util.Collections.unmodifiableList(appendParams_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<OperateDataBaseInfo> PARSER =
        new com.google.protobuf.AbstractParser<OperateDataBaseInfo>() {
      public OperateDataBaseInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OperateDataBaseInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OperateDataBaseInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 price = 1;
    public static final int PRICE_FIELD_NUMBER = 1;
    private int price_;
    /**
     * <code>required int32 price = 1;</code>
     *
     * <pre>
     *价格（单位：分）
     * </pre>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 price = 1;</code>
     *
     * <pre>
     *价格（单位：分）
     * </pre>
     */
    public int getPrice() {
      return price_;
    }

    // required int32 countTime = 2;
    public static final int COUNTTIME_FIELD_NUMBER = 2;
    private int countTime_;
    /**
     * <code>required int32 countTime = 2;</code>
     *
     * <pre>
     *计时(单位：毫秒）
     * </pre>
     */
    public boolean hasCountTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 countTime = 2;</code>
     *
     * <pre>
     *计时(单位：毫秒）
     * </pre>
     */
    public int getCountTime() {
      return countTime_;
    }

    // required int32 operateMoney = 3;
    public static final int OPERATEMONEY_FIELD_NUMBER = 3;
    private int operateMoney_;
    /**
     * <code>required int32 operateMoney = 3;</code>
     *
     * <pre>
     *收费(单位：分）
     * </pre>
     */
    public boolean hasOperateMoney() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 operateMoney = 3;</code>
     *
     * <pre>
     *收费(单位：分）
     * </pre>
     */
    public int getOperateMoney() {
      return operateMoney_;
    }

    // required int32 operateMile = 4;
    public static final int OPERATEMILE_FIELD_NUMBER = 4;
    private int operateMile_;
    /**
     * <code>required int32 operateMile = 4;</code>
     *
     * <pre>
     *运营里程（单位：米）
     * </pre>
     */
    public boolean hasOperateMile() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 operateMile = 4;</code>
     *
     * <pre>
     *运营里程（单位：米）
     * </pre>
     */
    public int getOperateMile() {
      return operateMile_;
    }

    // optional int32 nullMile = 5;
    public static final int NULLMILE_FIELD_NUMBER = 5;
    private int nullMile_;
    /**
     * <code>optional int32 nullMile = 5;</code>
     *
     * <pre>
     *空载里程（单位：米）
     * </pre>
     */
    public boolean hasNullMile() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 nullMile = 5;</code>
     *
     * <pre>
     *空载里程（单位：米）
     * </pre>
     */
    public int getNullMile() {
      return nullMile_;
    }

    // optional int32 overSpeedMile = 6;
    public static final int OVERSPEEDMILE_FIELD_NUMBER = 6;
    private int overSpeedMile_;
    /**
     * <code>optional int32 overSpeedMile = 6;</code>
     *
     * <pre>
     *超速里程（单位：米）
     * </pre>
     */
    public boolean hasOverSpeedMile() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 overSpeedMile = 6;</code>
     *
     * <pre>
     *超速里程（单位：米）
     * </pre>
     */
    public int getOverSpeedMile() {
      return overSpeedMile_;
    }

    // optional int32 overSpeedCount = 7;
    public static final int OVERSPEEDCOUNT_FIELD_NUMBER = 7;
    private int overSpeedCount_;
    /**
     * <code>optional int32 overSpeedCount = 7;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    public boolean hasOverSpeedCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 overSpeedCount = 7;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    public int getOverSpeedCount() {
      return overSpeedCount_;
    }

    // optional int32 powerOffCount = 8;
    public static final int POWEROFFCOUNT_FIELD_NUMBER = 8;
    private int powerOffCount_;
    /**
     * <code>optional int32 powerOffCount = 8;</code>
     *
     * <pre>
     *断电次数
     * </pre>
     */
    public boolean hasPowerOffCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 powerOffCount = 8;</code>
     *
     * <pre>
     *断电次数
     * </pre>
     */
    public int getPowerOffCount() {
      return powerOffCount_;
    }

    // optional int32 powerOffTime = 9;
    public static final int POWEROFFTIME_FIELD_NUMBER = 9;
    private int powerOffTime_;
    /**
     * <code>optional int32 powerOffTime = 9;</code>
     *
     * <pre>
     *断电时间（单位:秒）
     * </pre>
     */
    public boolean hasPowerOffTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 powerOffTime = 9;</code>
     *
     * <pre>
     *断电时间（单位:秒）
     * </pre>
     */
    public int getPowerOffTime() {
      return powerOffTime_;
    }

    // optional int32 sequenceNo = 10;
    public static final int SEQUENCENO_FIELD_NUMBER = 10;
    private int sequenceNo_;
    /**
     * <code>optional int32 sequenceNo = 10;</code>
     *
     * <pre>
     *流水号
     * </pre>
     */
    public boolean hasSequenceNo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 sequenceNo = 10;</code>
     *
     * <pre>
     *流水号
     * </pre>
     */
    public int getSequenceNo() {
      return sequenceNo_;
    }

    // repeated .gboss.MapEntry appendParams = 11;
    public static final int APPENDPARAMS_FIELD_NUMBER = 11;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> appendParams_;
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> getAppendParamsList() {
      return appendParams_;
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
        getAppendParamsOrBuilderList() {
      return appendParams_;
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public int getAppendParamsCount() {
      return appendParams_.size();
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getAppendParams(int index) {
      return appendParams_.get(index);
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
        int index) {
      return appendParams_.get(index);
    }

    // optional int32 perprice = 12;
    public static final int PERPRICE_FIELD_NUMBER = 12;
    private int perprice_;
    /**
     * <code>optional int32 perprice = 12;</code>
     *
     * <pre>
     *营运结束单价
     * </pre>
     */
    public boolean hasPerprice() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 perprice = 12;</code>
     *
     * <pre>
     *营运结束单价
     * </pre>
     */
    public int getPerprice() {
      return perprice_;
    }

    // optional string licenseno = 13;
    public static final int LICENSENO_FIELD_NUMBER = 13;
    private java.lang.Object licenseno_;
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    public boolean hasLicenseno() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    public java.lang.String getLicenseno() {
      java.lang.Object ref = licenseno_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          licenseno_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLicensenoBytes() {
      java.lang.Object ref = licenseno_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        licenseno_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      price_ = 0;
      countTime_ = 0;
      operateMoney_ = 0;
      operateMile_ = 0;
      nullMile_ = 0;
      overSpeedMile_ = 0;
      overSpeedCount_ = 0;
      powerOffCount_ = 0;
      powerOffTime_ = 0;
      sequenceNo_ = 0;
      appendParams_ = java.util.Collections.emptyList();
      perprice_ = 0;
      licenseno_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCountTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperateMoney()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperateMile()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAppendParamsCount(); i++) {
        if (!getAppendParams(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, price_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, countTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, operateMoney_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, operateMile_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, nullMile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, overSpeedMile_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, overSpeedCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, powerOffCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, powerOffTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, sequenceNo_);
      }
      for (int i = 0; i < appendParams_.size(); i++) {
        output.writeMessage(11, appendParams_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, perprice_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(13, getLicensenoBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, price_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, countTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, operateMoney_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, operateMile_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, nullMile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, overSpeedMile_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, overSpeedCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, powerOffCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, powerOffTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, sequenceNo_);
      }
      for (int i = 0; i < appendParams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, appendParams_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, perprice_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getLicensenoBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.OperateDataBaseInfo}
     *
     * <pre>
     *************************************************************************************
     * 运营数据基本信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAppendParamsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        price_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        countTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        operateMoney_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        operateMile_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        nullMile_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        overSpeedMile_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        overSpeedCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        powerOffCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        powerOffTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        sequenceNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (appendParamsBuilder_ == null) {
          appendParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          appendParamsBuilder_.clear();
        }
        perprice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        licenseno_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.countTime_ = countTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.operateMoney_ = operateMoney_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.operateMile_ = operateMile_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nullMile_ = nullMile_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.overSpeedMile_ = overSpeedMile_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.overSpeedCount_ = overSpeedCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.powerOffCount_ = powerOffCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.powerOffTime_ = powerOffTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.sequenceNo_ = sequenceNo_;
        if (appendParamsBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            appendParams_ = java.util.Collections.unmodifiableList(appendParams_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.appendParams_ = appendParams_;
        } else {
          result.appendParams_ = appendParamsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.perprice_ = perprice_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.licenseno_ = licenseno_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance()) return this;
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasCountTime()) {
          setCountTime(other.getCountTime());
        }
        if (other.hasOperateMoney()) {
          setOperateMoney(other.getOperateMoney());
        }
        if (other.hasOperateMile()) {
          setOperateMile(other.getOperateMile());
        }
        if (other.hasNullMile()) {
          setNullMile(other.getNullMile());
        }
        if (other.hasOverSpeedMile()) {
          setOverSpeedMile(other.getOverSpeedMile());
        }
        if (other.hasOverSpeedCount()) {
          setOverSpeedCount(other.getOverSpeedCount());
        }
        if (other.hasPowerOffCount()) {
          setPowerOffCount(other.getPowerOffCount());
        }
        if (other.hasPowerOffTime()) {
          setPowerOffTime(other.getPowerOffTime());
        }
        if (other.hasSequenceNo()) {
          setSequenceNo(other.getSequenceNo());
        }
        if (appendParamsBuilder_ == null) {
          if (!other.appendParams_.isEmpty()) {
            if (appendParams_.isEmpty()) {
              appendParams_ = other.appendParams_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureAppendParamsIsMutable();
              appendParams_.addAll(other.appendParams_);
            }
            onChanged();
          }
        } else {
          if (!other.appendParams_.isEmpty()) {
            if (appendParamsBuilder_.isEmpty()) {
              appendParamsBuilder_.dispose();
              appendParamsBuilder_ = null;
              appendParams_ = other.appendParams_;
              bitField0_ = (bitField0_ & ~0x00000400);
              appendParamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAppendParamsFieldBuilder() : null;
            } else {
              appendParamsBuilder_.addAllMessages(other.appendParams_);
            }
          }
        }
        if (other.hasPerprice()) {
          setPerprice(other.getPerprice());
        }
        if (other.hasLicenseno()) {
          bitField0_ |= 0x00001000;
          licenseno_ = other.licenseno_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPrice()) {
          
          return false;
        }
        if (!hasCountTime()) {
          
          return false;
        }
        if (!hasOperateMoney()) {
          
          return false;
        }
        if (!hasOperateMile()) {
          
          return false;
        }
        for (int i = 0; i < getAppendParamsCount(); i++) {
          if (!getAppendParams(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 price = 1;
      private int price_ ;
      /**
       * <code>required int32 price = 1;</code>
       *
       * <pre>
       *价格（单位：分）
       * </pre>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 price = 1;</code>
       *
       * <pre>
       *价格（单位：分）
       * </pre>
       */
      public int getPrice() {
        return price_;
      }
      /**
       * <code>required int32 price = 1;</code>
       *
       * <pre>
       *价格（单位：分）
       * </pre>
       */
      public Builder setPrice(int value) {
        bitField0_ |= 0x00000001;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 price = 1;</code>
       *
       * <pre>
       *价格（单位：分）
       * </pre>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        price_ = 0;
        onChanged();
        return this;
      }

      // required int32 countTime = 2;
      private int countTime_ ;
      /**
       * <code>required int32 countTime = 2;</code>
       *
       * <pre>
       *计时(单位：毫秒）
       * </pre>
       */
      public boolean hasCountTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 countTime = 2;</code>
       *
       * <pre>
       *计时(单位：毫秒）
       * </pre>
       */
      public int getCountTime() {
        return countTime_;
      }
      /**
       * <code>required int32 countTime = 2;</code>
       *
       * <pre>
       *计时(单位：毫秒）
       * </pre>
       */
      public Builder setCountTime(int value) {
        bitField0_ |= 0x00000002;
        countTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 countTime = 2;</code>
       *
       * <pre>
       *计时(单位：毫秒）
       * </pre>
       */
      public Builder clearCountTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        countTime_ = 0;
        onChanged();
        return this;
      }

      // required int32 operateMoney = 3;
      private int operateMoney_ ;
      /**
       * <code>required int32 operateMoney = 3;</code>
       *
       * <pre>
       *收费(单位：分）
       * </pre>
       */
      public boolean hasOperateMoney() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 operateMoney = 3;</code>
       *
       * <pre>
       *收费(单位：分）
       * </pre>
       */
      public int getOperateMoney() {
        return operateMoney_;
      }
      /**
       * <code>required int32 operateMoney = 3;</code>
       *
       * <pre>
       *收费(单位：分）
       * </pre>
       */
      public Builder setOperateMoney(int value) {
        bitField0_ |= 0x00000004;
        operateMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 operateMoney = 3;</code>
       *
       * <pre>
       *收费(单位：分）
       * </pre>
       */
      public Builder clearOperateMoney() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operateMoney_ = 0;
        onChanged();
        return this;
      }

      // required int32 operateMile = 4;
      private int operateMile_ ;
      /**
       * <code>required int32 operateMile = 4;</code>
       *
       * <pre>
       *运营里程（单位：米）
       * </pre>
       */
      public boolean hasOperateMile() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 operateMile = 4;</code>
       *
       * <pre>
       *运营里程（单位：米）
       * </pre>
       */
      public int getOperateMile() {
        return operateMile_;
      }
      /**
       * <code>required int32 operateMile = 4;</code>
       *
       * <pre>
       *运营里程（单位：米）
       * </pre>
       */
      public Builder setOperateMile(int value) {
        bitField0_ |= 0x00000008;
        operateMile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 operateMile = 4;</code>
       *
       * <pre>
       *运营里程（单位：米）
       * </pre>
       */
      public Builder clearOperateMile() {
        bitField0_ = (bitField0_ & ~0x00000008);
        operateMile_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nullMile = 5;
      private int nullMile_ ;
      /**
       * <code>optional int32 nullMile = 5;</code>
       *
       * <pre>
       *空载里程（单位：米）
       * </pre>
       */
      public boolean hasNullMile() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 nullMile = 5;</code>
       *
       * <pre>
       *空载里程（单位：米）
       * </pre>
       */
      public int getNullMile() {
        return nullMile_;
      }
      /**
       * <code>optional int32 nullMile = 5;</code>
       *
       * <pre>
       *空载里程（单位：米）
       * </pre>
       */
      public Builder setNullMile(int value) {
        bitField0_ |= 0x00000010;
        nullMile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nullMile = 5;</code>
       *
       * <pre>
       *空载里程（单位：米）
       * </pre>
       */
      public Builder clearNullMile() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nullMile_ = 0;
        onChanged();
        return this;
      }

      // optional int32 overSpeedMile = 6;
      private int overSpeedMile_ ;
      /**
       * <code>optional int32 overSpeedMile = 6;</code>
       *
       * <pre>
       *超速里程（单位：米）
       * </pre>
       */
      public boolean hasOverSpeedMile() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 overSpeedMile = 6;</code>
       *
       * <pre>
       *超速里程（单位：米）
       * </pre>
       */
      public int getOverSpeedMile() {
        return overSpeedMile_;
      }
      /**
       * <code>optional int32 overSpeedMile = 6;</code>
       *
       * <pre>
       *超速里程（单位：米）
       * </pre>
       */
      public Builder setOverSpeedMile(int value) {
        bitField0_ |= 0x00000020;
        overSpeedMile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 overSpeedMile = 6;</code>
       *
       * <pre>
       *超速里程（单位：米）
       * </pre>
       */
      public Builder clearOverSpeedMile() {
        bitField0_ = (bitField0_ & ~0x00000020);
        overSpeedMile_ = 0;
        onChanged();
        return this;
      }

      // optional int32 overSpeedCount = 7;
      private int overSpeedCount_ ;
      /**
       * <code>optional int32 overSpeedCount = 7;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public boolean hasOverSpeedCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 overSpeedCount = 7;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public int getOverSpeedCount() {
        return overSpeedCount_;
      }
      /**
       * <code>optional int32 overSpeedCount = 7;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public Builder setOverSpeedCount(int value) {
        bitField0_ |= 0x00000040;
        overSpeedCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 overSpeedCount = 7;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public Builder clearOverSpeedCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        overSpeedCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 powerOffCount = 8;
      private int powerOffCount_ ;
      /**
       * <code>optional int32 powerOffCount = 8;</code>
       *
       * <pre>
       *断电次数
       * </pre>
       */
      public boolean hasPowerOffCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 powerOffCount = 8;</code>
       *
       * <pre>
       *断电次数
       * </pre>
       */
      public int getPowerOffCount() {
        return powerOffCount_;
      }
      /**
       * <code>optional int32 powerOffCount = 8;</code>
       *
       * <pre>
       *断电次数
       * </pre>
       */
      public Builder setPowerOffCount(int value) {
        bitField0_ |= 0x00000080;
        powerOffCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 powerOffCount = 8;</code>
       *
       * <pre>
       *断电次数
       * </pre>
       */
      public Builder clearPowerOffCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        powerOffCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 powerOffTime = 9;
      private int powerOffTime_ ;
      /**
       * <code>optional int32 powerOffTime = 9;</code>
       *
       * <pre>
       *断电时间（单位:秒）
       * </pre>
       */
      public boolean hasPowerOffTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 powerOffTime = 9;</code>
       *
       * <pre>
       *断电时间（单位:秒）
       * </pre>
       */
      public int getPowerOffTime() {
        return powerOffTime_;
      }
      /**
       * <code>optional int32 powerOffTime = 9;</code>
       *
       * <pre>
       *断电时间（单位:秒）
       * </pre>
       */
      public Builder setPowerOffTime(int value) {
        bitField0_ |= 0x00000100;
        powerOffTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 powerOffTime = 9;</code>
       *
       * <pre>
       *断电时间（单位:秒）
       * </pre>
       */
      public Builder clearPowerOffTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        powerOffTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sequenceNo = 10;
      private int sequenceNo_ ;
      /**
       * <code>optional int32 sequenceNo = 10;</code>
       *
       * <pre>
       *流水号
       * </pre>
       */
      public boolean hasSequenceNo() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 sequenceNo = 10;</code>
       *
       * <pre>
       *流水号
       * </pre>
       */
      public int getSequenceNo() {
        return sequenceNo_;
      }
      /**
       * <code>optional int32 sequenceNo = 10;</code>
       *
       * <pre>
       *流水号
       * </pre>
       */
      public Builder setSequenceNo(int value) {
        bitField0_ |= 0x00000200;
        sequenceNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sequenceNo = 10;</code>
       *
       * <pre>
       *流水号
       * </pre>
       */
      public Builder clearSequenceNo() {
        bitField0_ = (bitField0_ & ~0x00000200);
        sequenceNo_ = 0;
        onChanged();
        return this;
      }

      // repeated .gboss.MapEntry appendParams = 11;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> appendParams_ =
        java.util.Collections.emptyList();
      private void ensureAppendParamsIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          appendParams_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry>(appendParams_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.MapEntry, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> appendParamsBuilder_;

      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> getAppendParamsList() {
        if (appendParamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(appendParams_);
        } else {
          return appendParamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public int getAppendParamsCount() {
        if (appendParamsBuilder_ == null) {
          return appendParams_.size();
        } else {
          return appendParamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry getAppendParams(int index) {
        if (appendParamsBuilder_ == null) {
          return appendParams_.get(index);
        } else {
          return appendParamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder setAppendParams(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.set(index, value);
          onChanged();
        } else {
          appendParamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder setAppendParams(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.set(index, builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(cc.chinagps.gateway.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.add(value);
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.add(index, value);
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(
          cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.add(builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.add(index, builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAllAppendParams(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntry> values) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          super.addAll(values, appendParams_);
          onChanged();
        } else {
          appendParamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder clearAppendParams() {
        if (appendParamsBuilder_ == null) {
          appendParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          appendParamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder removeAppendParams(int index) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.remove(index);
          onChanged();
        } else {
          appendParamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder getAppendParamsBuilder(
          int index) {
        return getAppendParamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
          int index) {
        if (appendParamsBuilder_ == null) {
          return appendParams_.get(index);  } else {
          return appendParamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
           getAppendParamsOrBuilderList() {
        if (appendParamsBuilder_ != null) {
          return appendParamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(appendParams_);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder addAppendParamsBuilder() {
        return getAppendParamsFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder addAppendParamsBuilder(
          int index) {
        return getAppendParamsFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder> 
           getAppendParamsBuilderList() {
        return getAppendParamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.MapEntry, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder> 
          getAppendParamsFieldBuilder() {
        if (appendParamsBuilder_ == null) {
          appendParamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.MapEntry, cc.chinagps.gateway.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gateway.buff.GBossDataBuff.MapEntryOrBuilder>(
                  appendParams_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          appendParams_ = null;
        }
        return appendParamsBuilder_;
      }

      // optional int32 perprice = 12;
      private int perprice_ ;
      /**
       * <code>optional int32 perprice = 12;</code>
       *
       * <pre>
       *营运结束单价
       * </pre>
       */
      public boolean hasPerprice() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 perprice = 12;</code>
       *
       * <pre>
       *营运结束单价
       * </pre>
       */
      public int getPerprice() {
        return perprice_;
      }
      /**
       * <code>optional int32 perprice = 12;</code>
       *
       * <pre>
       *营运结束单价
       * </pre>
       */
      public Builder setPerprice(int value) {
        bitField0_ |= 0x00000800;
        perprice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 perprice = 12;</code>
       *
       * <pre>
       *营运结束单价
       * </pre>
       */
      public Builder clearPerprice() {
        bitField0_ = (bitField0_ & ~0x00000800);
        perprice_ = 0;
        onChanged();
        return this;
      }

      // optional string licenseno = 13;
      private java.lang.Object licenseno_ = "";
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public boolean hasLicenseno() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public java.lang.String getLicenseno() {
        java.lang.Object ref = licenseno_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          licenseno_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLicensenoBytes() {
        java.lang.Object ref = licenseno_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          licenseno_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public Builder setLicenseno(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        licenseno_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public Builder clearLicenseno() {
        bitField0_ = (bitField0_ & ~0x00001000);
        licenseno_ = getDefaultInstance().getLicenseno();
        onChanged();
        return this;
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public Builder setLicensenoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        licenseno_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.OperateDataBaseInfo)
    }

    static {
      defaultInstance = new OperateDataBaseInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.OperateDataBaseInfo)
  }

  public interface OperateDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required .gboss.OperateDataBaseInfo baseInfo = 2;
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    boolean hasBaseInfo();
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo getBaseInfo();
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder getBaseInfoOrBuilder();

    // required .gboss.GpsBaseInfo startGps = 3;
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    boolean hasStartGps();
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getStartGps();
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder();

    // optional .gboss.GpsReferPosition startPoi = 4;
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    boolean hasStartPoi();
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getStartPoi();
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartPoiOrBuilder();

    // required .gboss.GpsBaseInfo stopGps = 5;
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    boolean hasStopGps();
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getStopGps();
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStopGpsOrBuilder();

    // optional .gboss.GpsReferPosition stopPoi = 6;
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    boolean hasStopPoi();
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getStopPoi();
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getStopPoiOrBuilder();

    // optional bytes content = 7;
    /**
     * <code>optional bytes content = 7;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD可见ASCII码
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional bytes content = 7;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD可见ASCII码
     * </pre>
     */
    com.google.protobuf.ByteString getContent();

    // optional int32 history = 8;
    /**
     * <code>optional int32 history = 8;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    boolean hasHistory();
    /**
     * <code>optional int32 history = 8;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    int getHistory();
  }
  /**
   * Protobuf type {@code gboss.OperateData}
   *
   * <pre>
   *
   * 运营数据完整信息
   * </pre>
   */
  public static final class OperateData extends
      com.google.protobuf.GeneratedMessage
      implements OperateDataOrBuilder {
    // Use OperateData.newBuilder() to construct.
    private OperateData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OperateData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OperateData defaultInstance;
    public static OperateData getDefaultInstance() {
      return defaultInstance;
    }

    public OperateData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OperateData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = baseInfo_.toBuilder();
              }
              baseInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseInfo_);
                baseInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = startGps_.toBuilder();
              }
              startGps_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startGps_);
                startGps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = startPoi_.toBuilder();
              }
              startPoi_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startPoi_);
                startPoi_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = stopGps_.toBuilder();
              }
              stopGps_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stopGps_);
                stopGps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = stopPoi_.toBuilder();
              }
              stopPoi_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stopPoi_);
                stopPoi_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              content_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              history_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.OperateData.class, cc.chinagps.gateway.buff.GBossDataBuff.OperateData.Builder.class);
    }

    public static com.google.protobuf.Parser<OperateData> PARSER =
        new com.google.protobuf.AbstractParser<OperateData>() {
      public OperateData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OperateData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OperateData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .gboss.OperateDataBaseInfo baseInfo = 2;
    public static final int BASEINFO_FIELD_NUMBER = 2;
    private cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo baseInfo_;
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    public boolean hasBaseInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo getBaseInfo() {
      return baseInfo_;
    }
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder getBaseInfoOrBuilder() {
      return baseInfo_;
    }

    // required .gboss.GpsBaseInfo startGps = 3;
    public static final int STARTGPS_FIELD_NUMBER = 3;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo startGps_;
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    public boolean hasStartGps() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getStartGps() {
      return startGps_;
    }
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder() {
      return startGps_;
    }

    // optional .gboss.GpsReferPosition startPoi = 4;
    public static final int STARTPOI_FIELD_NUMBER = 4;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition startPoi_;
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    public boolean hasStartPoi() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getStartPoi() {
      return startPoi_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartPoiOrBuilder() {
      return startPoi_;
    }

    // required .gboss.GpsBaseInfo stopGps = 5;
    public static final int STOPGPS_FIELD_NUMBER = 5;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo stopGps_;
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    public boolean hasStopGps() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getStopGps() {
      return stopGps_;
    }
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStopGpsOrBuilder() {
      return stopGps_;
    }

    // optional .gboss.GpsReferPosition stopPoi = 6;
    public static final int STOPPOI_FIELD_NUMBER = 6;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition stopPoi_;
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    public boolean hasStopPoi() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getStopPoi() {
      return stopPoi_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getStopPoiOrBuilder() {
      return stopPoi_;
    }

    // optional bytes content = 7;
    public static final int CONTENT_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>optional bytes content = 7;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD可见ASCII码
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes content = 7;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD可见ASCII码
     * </pre>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    // optional int32 history = 8;
    public static final int HISTORY_FIELD_NUMBER = 8;
    private int history_;
    /**
     * <code>optional int32 history = 8;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public boolean hasHistory() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 history = 8;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public int getHistory() {
      return history_;
    }

    private void initFields() {
      callLetter_ = "";
      baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
      startGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      startPoi_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      stopGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      stopPoi_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      content_ = com.google.protobuf.ByteString.EMPTY;
      history_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBaseInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartGps()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStopGps()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBaseInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStartGps().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasStartPoi()) {
        if (!getStartPoi().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getStopGps().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasStopPoi()) {
        if (!getStopPoi().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, startGps_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, startPoi_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, stopGps_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, stopPoi_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, content_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, history_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, startGps_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, startPoi_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, stopGps_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, stopPoi_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, content_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, history_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.OperateData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.OperateData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.OperateData}
     *
     * <pre>
     *
     * 运营数据完整信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.OperateDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.OperateData.class, cc.chinagps.gateway.buff.GBossDataBuff.OperateData.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.OperateData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBaseInfoFieldBuilder();
          getStartGpsFieldBuilder();
          getStartPoiFieldBuilder();
          getStopGpsFieldBuilder();
          getStopPoiFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (startGpsBuilder_ == null) {
          startGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          startGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (startPoiBuilder_ == null) {
          startPoi_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          startPoiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (stopGpsBuilder_ == null) {
          stopGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          stopGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (stopPoiBuilder_ == null) {
          stopPoi_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          stopPoiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        history_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_OperateData_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.OperateData getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.OperateData.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.OperateData build() {
        cc.chinagps.gateway.buff.GBossDataBuff.OperateData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.OperateData buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.OperateData result = new cc.chinagps.gateway.buff.GBossDataBuff.OperateData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (baseInfoBuilder_ == null) {
          result.baseInfo_ = baseInfo_;
        } else {
          result.baseInfo_ = baseInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (startGpsBuilder_ == null) {
          result.startGps_ = startGps_;
        } else {
          result.startGps_ = startGpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (startPoiBuilder_ == null) {
          result.startPoi_ = startPoi_;
        } else {
          result.startPoi_ = startPoiBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (stopGpsBuilder_ == null) {
          result.stopGps_ = stopGps_;
        } else {
          result.stopGps_ = stopGpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (stopPoiBuilder_ == null) {
          result.stopPoi_ = stopPoi_;
        } else {
          result.stopPoi_ = stopPoiBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.history_ = history_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.OperateData) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.OperateData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.OperateData other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.OperateData.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasBaseInfo()) {
          mergeBaseInfo(other.getBaseInfo());
        }
        if (other.hasStartGps()) {
          mergeStartGps(other.getStartGps());
        }
        if (other.hasStartPoi()) {
          mergeStartPoi(other.getStartPoi());
        }
        if (other.hasStopGps()) {
          mergeStopGps(other.getStopGps());
        }
        if (other.hasStopPoi()) {
          mergeStopPoi(other.getStopPoi());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasHistory()) {
          setHistory(other.getHistory());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasBaseInfo()) {
          
          return false;
        }
        if (!hasStartGps()) {
          
          return false;
        }
        if (!hasStopGps()) {
          
          return false;
        }
        if (!getBaseInfo().isInitialized()) {
          
          return false;
        }
        if (!getStartGps().isInitialized()) {
          
          return false;
        }
        if (hasStartPoi()) {
          if (!getStartPoi().isInitialized()) {
            
            return false;
          }
        }
        if (!getStopGps().isInitialized()) {
          
          return false;
        }
        if (hasStopPoi()) {
          if (!getStopPoi().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.OperateData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.OperateData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required .gboss.OperateDataBaseInfo baseInfo = 2;
      private cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder> baseInfoBuilder_;
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public boolean hasBaseInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo getBaseInfo() {
        if (baseInfoBuilder_ == null) {
          return baseInfo_;
        } else {
          return baseInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public Builder setBaseInfo(cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseInfo_ = value;
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public Builder setBaseInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.Builder builderForValue) {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public Builder mergeBaseInfo(cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              baseInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance()) {
            baseInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.newBuilder(baseInfo_).mergeFrom(value).buildPartial();
          } else {
            baseInfo_ = value;
          }
          onChanged();
        } else {
          baseInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public Builder clearBaseInfo() {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.Builder getBaseInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder getBaseInfoOrBuilder() {
        if (baseInfoBuilder_ != null) {
          return baseInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseInfo_;
        }
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder> 
          getBaseInfoFieldBuilder() {
        if (baseInfoBuilder_ == null) {
          baseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder>(
                  baseInfo_,
                  getParentForChildren(),
                  isClean());
          baseInfo_ = null;
        }
        return baseInfoBuilder_;
      }

      // required .gboss.GpsBaseInfo startGps = 3;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo startGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> startGpsBuilder_;
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public boolean hasStartGps() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getStartGps() {
        if (startGpsBuilder_ == null) {
          return startGps_;
        } else {
          return startGpsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public Builder setStartGps(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (startGpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startGps_ = value;
          onChanged();
        } else {
          startGpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public Builder setStartGps(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (startGpsBuilder_ == null) {
          startGps_ = builderForValue.build();
          onChanged();
        } else {
          startGpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public Builder mergeStartGps(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (startGpsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              startGps_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            startGps_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.newBuilder(startGps_).mergeFrom(value).buildPartial();
          } else {
            startGps_ = value;
          }
          onChanged();
        } else {
          startGpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public Builder clearStartGps() {
        if (startGpsBuilder_ == null) {
          startGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          startGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder getStartGpsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStartGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder() {
        if (startGpsBuilder_ != null) {
          return startGpsBuilder_.getMessageOrBuilder();
        } else {
          return startGps_;
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getStartGpsFieldBuilder() {
        if (startGpsBuilder_ == null) {
          startGpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  startGps_,
                  getParentForChildren(),
                  isClean());
          startGps_ = null;
        }
        return startGpsBuilder_;
      }

      // optional .gboss.GpsReferPosition startPoi = 4;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition startPoi_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> startPoiBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public boolean hasStartPoi() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getStartPoi() {
        if (startPoiBuilder_ == null) {
          return startPoi_;
        } else {
          return startPoiBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public Builder setStartPoi(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (startPoiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startPoi_ = value;
          onChanged();
        } else {
          startPoiBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public Builder setStartPoi(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (startPoiBuilder_ == null) {
          startPoi_ = builderForValue.build();
          onChanged();
        } else {
          startPoiBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public Builder mergeStartPoi(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (startPoiBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              startPoi_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            startPoi_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.newBuilder(startPoi_).mergeFrom(value).buildPartial();
          } else {
            startPoi_ = value;
          }
          onChanged();
        } else {
          startPoiBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public Builder clearStartPoi() {
        if (startPoiBuilder_ == null) {
          startPoi_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          startPoiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder getStartPoiBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getStartPoiFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartPoiOrBuilder() {
        if (startPoiBuilder_ != null) {
          return startPoiBuilder_.getMessageOrBuilder();
        } else {
          return startPoi_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getStartPoiFieldBuilder() {
        if (startPoiBuilder_ == null) {
          startPoiBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  startPoi_,
                  getParentForChildren(),
                  isClean());
          startPoi_ = null;
        }
        return startPoiBuilder_;
      }

      // required .gboss.GpsBaseInfo stopGps = 5;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo stopGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> stopGpsBuilder_;
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public boolean hasStopGps() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getStopGps() {
        if (stopGpsBuilder_ == null) {
          return stopGps_;
        } else {
          return stopGpsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public Builder setStopGps(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (stopGpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stopGps_ = value;
          onChanged();
        } else {
          stopGpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public Builder setStopGps(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (stopGpsBuilder_ == null) {
          stopGps_ = builderForValue.build();
          onChanged();
        } else {
          stopGpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public Builder mergeStopGps(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (stopGpsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              stopGps_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            stopGps_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.newBuilder(stopGps_).mergeFrom(value).buildPartial();
          } else {
            stopGps_ = value;
          }
          onChanged();
        } else {
          stopGpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public Builder clearStopGps() {
        if (stopGpsBuilder_ == null) {
          stopGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          stopGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder getStopGpsBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getStopGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStopGpsOrBuilder() {
        if (stopGpsBuilder_ != null) {
          return stopGpsBuilder_.getMessageOrBuilder();
        } else {
          return stopGps_;
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getStopGpsFieldBuilder() {
        if (stopGpsBuilder_ == null) {
          stopGpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  stopGps_,
                  getParentForChildren(),
                  isClean());
          stopGps_ = null;
        }
        return stopGpsBuilder_;
      }

      // optional .gboss.GpsReferPosition stopPoi = 6;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition stopPoi_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> stopPoiBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public boolean hasStopPoi() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getStopPoi() {
        if (stopPoiBuilder_ == null) {
          return stopPoi_;
        } else {
          return stopPoiBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public Builder setStopPoi(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (stopPoiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stopPoi_ = value;
          onChanged();
        } else {
          stopPoiBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public Builder setStopPoi(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (stopPoiBuilder_ == null) {
          stopPoi_ = builderForValue.build();
          onChanged();
        } else {
          stopPoiBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public Builder mergeStopPoi(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (stopPoiBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              stopPoi_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            stopPoi_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.newBuilder(stopPoi_).mergeFrom(value).buildPartial();
          } else {
            stopPoi_ = value;
          }
          onChanged();
        } else {
          stopPoiBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public Builder clearStopPoi() {
        if (stopPoiBuilder_ == null) {
          stopPoi_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          stopPoiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder getStopPoiBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getStopPoiFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getStopPoiOrBuilder() {
        if (stopPoiBuilder_ != null) {
          return stopPoiBuilder_.getMessageOrBuilder();
        } else {
          return stopPoi_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getStopPoiFieldBuilder() {
        if (stopPoiBuilder_ == null) {
          stopPoiBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  stopPoi_,
                  getParentForChildren(),
                  isClean());
          stopPoi_ = null;
        }
        return stopPoiBuilder_;
      }

      // optional bytes content = 7;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes content = 7;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD可见ASCII码
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes content = 7;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD可见ASCII码
       * </pre>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>optional bytes content = 7;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD可见ASCII码
       * </pre>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes content = 7;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD可见ASCII码
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000040);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // optional int32 history = 8;
      private int history_ ;
      /**
       * <code>optional int32 history = 8;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public boolean hasHistory() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 history = 8;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public int getHistory() {
        return history_;
      }
      /**
       * <code>optional int32 history = 8;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder setHistory(int value) {
        bitField0_ |= 0x00000080;
        history_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 history = 8;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder clearHistory() {
        bitField0_ = (bitField0_ & ~0x00000080);
        history_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.OperateData)
    }

    static {
      defaultInstance = new OperateData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.OperateData)
  }

  public interface ShortMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required string msg = 2;
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // optional int64 recvTime = 3;
    /**
     * <code>optional int64 recvTime = 3;</code>
     *
     * <pre>
     *接收时间
     * </pre>
     */
    boolean hasRecvTime();
    /**
     * <code>optional int64 recvTime = 3;</code>
     *
     * <pre>
     *接收时间
     * </pre>
     */
    long getRecvTime();
  }
  /**
   * Protobuf type {@code gboss.ShortMessage}
   *
   * <pre>
   **
   *  短消息
   * </pre>
   */
  public static final class ShortMessage extends
      com.google.protobuf.GeneratedMessage
      implements ShortMessageOrBuilder {
    // Use ShortMessage.newBuilder() to construct.
    private ShortMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShortMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShortMessage defaultInstance;
    public static ShortMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ShortMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShortMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              msg_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              recvTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ShortMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ShortMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage.class, cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ShortMessage> PARSER =
        new com.google.protobuf.AbstractParser<ShortMessage>() {
      public ShortMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShortMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShortMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string msg = 2;
    public static final int MSG_FIELD_NUMBER = 2;
    private java.lang.Object msg_;
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 recvTime = 3;
    public static final int RECVTIME_FIELD_NUMBER = 3;
    private long recvTime_;
    /**
     * <code>optional int64 recvTime = 3;</code>
     *
     * <pre>
     *接收时间
     * </pre>
     */
    public boolean hasRecvTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 recvTime = 3;</code>
     *
     * <pre>
     *接收时间
     * </pre>
     */
    public long getRecvTime() {
      return recvTime_;
    }

    private void initFields() {
      callLetter_ = "";
      msg_ = "";
      recvTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsg()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, recvTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, recvTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.ShortMessage}
     *
     * <pre>
     **
     *  短消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.ShortMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ShortMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ShortMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage.class, cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        recvTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ShortMessage_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage build() {
        cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage result = new cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.recvTime_ = recvTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000002;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasRecvTime()) {
          setRecvTime(other.getRecvTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasMsg()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.ShortMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required string msg = 2;
      private java.lang.Object msg_ = "";
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }

      // optional int64 recvTime = 3;
      private long recvTime_ ;
      /**
       * <code>optional int64 recvTime = 3;</code>
       *
       * <pre>
       *接收时间
       * </pre>
       */
      public boolean hasRecvTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 recvTime = 3;</code>
       *
       * <pre>
       *接收时间
       * </pre>
       */
      public long getRecvTime() {
        return recvTime_;
      }
      /**
       * <code>optional int64 recvTime = 3;</code>
       *
       * <pre>
       *接收时间
       * </pre>
       */
      public Builder setRecvTime(long value) {
        bitField0_ |= 0x00000004;
        recvTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 recvTime = 3;</code>
       *
       * <pre>
       *接收时间
       * </pre>
       */
      public Builder clearRecvTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        recvTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.ShortMessage)
    }

    static {
      defaultInstance = new ShortMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.ShortMessage)
  }

  public interface PengaodaTravelInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 speed0Distance = 1;
    /**
     * <code>optional int32 speed0Distance = 1;</code>
     *
     * <pre>
     *本行程速度小于20km/h的里程（单位：米）
     * </pre>
     */
    boolean hasSpeed0Distance();
    /**
     * <code>optional int32 speed0Distance = 1;</code>
     *
     * <pre>
     *本行程速度小于20km/h的里程（单位：米）
     * </pre>
     */
    int getSpeed0Distance();

    // optional int32 speed20Distance = 2;
    /**
     * <code>optional int32 speed20Distance = 2;</code>
     *
     * <pre>
     *本行程速度为20-40km/h的里程（单位：米）
     * </pre>
     */
    boolean hasSpeed20Distance();
    /**
     * <code>optional int32 speed20Distance = 2;</code>
     *
     * <pre>
     *本行程速度为20-40km/h的里程（单位：米）
     * </pre>
     */
    int getSpeed20Distance();

    // optional int32 speed40Distance = 3;
    /**
     * <code>optional int32 speed40Distance = 3;</code>
     *
     * <pre>
     *本行程速度为40-60km/h的里程（单位：米）
     * </pre>
     */
    boolean hasSpeed40Distance();
    /**
     * <code>optional int32 speed40Distance = 3;</code>
     *
     * <pre>
     *本行程速度为40-60km/h的里程（单位：米）
     * </pre>
     */
    int getSpeed40Distance();

    // optional int32 speed60Distance = 4;
    /**
     * <code>optional int32 speed60Distance = 4;</code>
     *
     * <pre>
     *本行程速度为60-80km/h的里程（单位：米）
     * </pre>
     */
    boolean hasSpeed60Distance();
    /**
     * <code>optional int32 speed60Distance = 4;</code>
     *
     * <pre>
     *本行程速度为60-80km/h的里程（单位：米）
     * </pre>
     */
    int getSpeed60Distance();

    // optional int32 speed80Distance = 5;
    /**
     * <code>optional int32 speed80Distance = 5;</code>
     *
     * <pre>
     *本行程速度为80-100km/h的里程（单位：米）
     * </pre>
     */
    boolean hasSpeed80Distance();
    /**
     * <code>optional int32 speed80Distance = 5;</code>
     *
     * <pre>
     *本行程速度为80-100km/h的里程（单位：米）
     * </pre>
     */
    int getSpeed80Distance();

    // optional int32 speed100Distance = 6;
    /**
     * <code>optional int32 speed100Distance = 6;</code>
     *
     * <pre>
     *本行程速度为100-120km/h的里程（单位：米）
     * </pre>
     */
    boolean hasSpeed100Distance();
    /**
     * <code>optional int32 speed100Distance = 6;</code>
     *
     * <pre>
     *本行程速度为100-120km/h的里程（单位：米）
     * </pre>
     */
    int getSpeed100Distance();

    // optional int32 speed120Distance = 7;
    /**
     * <code>optional int32 speed120Distance = 7;</code>
     *
     * <pre>
     *本行程速度大于120km/h的里程（单位：米）
     * </pre>
     */
    boolean hasSpeed120Distance();
    /**
     * <code>optional int32 speed120Distance = 7;</code>
     *
     * <pre>
     *本行程速度大于120km/h的里程（单位：米）
     * </pre>
     */
    int getSpeed120Distance();

    // optional int32 rotationRate0Distance = 8;
    /**
     * <code>optional int32 rotationRate0Distance = 8;</code>
     *
     * <pre>
     *本行程转速小于1000rpm的里程（单位：米）
     * </pre>
     */
    boolean hasRotationRate0Distance();
    /**
     * <code>optional int32 rotationRate0Distance = 8;</code>
     *
     * <pre>
     *本行程转速小于1000rpm的里程（单位：米）
     * </pre>
     */
    int getRotationRate0Distance();

    // optional int32 rotationRate1000Distance = 9;
    /**
     * <code>optional int32 rotationRate1000Distance = 9;</code>
     *
     * <pre>
     *本行程转速1000-2000rpm的里程（单位：米）
     * </pre>
     */
    boolean hasRotationRate1000Distance();
    /**
     * <code>optional int32 rotationRate1000Distance = 9;</code>
     *
     * <pre>
     *本行程转速1000-2000rpm的里程（单位：米）
     * </pre>
     */
    int getRotationRate1000Distance();

    // optional int32 rotationRate2000Distance = 10;
    /**
     * <code>optional int32 rotationRate2000Distance = 10;</code>
     *
     * <pre>
     *本行程转速2000-3000rpm的里程（单位：米）
     * </pre>
     */
    boolean hasRotationRate2000Distance();
    /**
     * <code>optional int32 rotationRate2000Distance = 10;</code>
     *
     * <pre>
     *本行程转速2000-3000rpm的里程（单位：米）
     * </pre>
     */
    int getRotationRate2000Distance();

    // optional int32 rotationRate3000Distance = 11;
    /**
     * <code>optional int32 rotationRate3000Distance = 11;</code>
     *
     * <pre>
     *本行程转速3000-4000rpm的里程（单位：米）
     * </pre>
     */
    boolean hasRotationRate3000Distance();
    /**
     * <code>optional int32 rotationRate3000Distance = 11;</code>
     *
     * <pre>
     *本行程转速3000-4000rpm的里程（单位：米）
     * </pre>
     */
    int getRotationRate3000Distance();

    // optional int32 rotationRate4000Distance = 12;
    /**
     * <code>optional int32 rotationRate4000Distance = 12;</code>
     *
     * <pre>
     *本行程转速4000-5000rpm的里程（单位：米）
     * </pre>
     */
    boolean hasRotationRate4000Distance();
    /**
     * <code>optional int32 rotationRate4000Distance = 12;</code>
     *
     * <pre>
     *本行程转速4000-5000rpm的里程（单位：米）
     * </pre>
     */
    int getRotationRate4000Distance();

    // optional int32 rotationRate5000Distance = 13;
    /**
     * <code>optional int32 rotationRate5000Distance = 13;</code>
     *
     * <pre>
     *本行程转速大于5000rpm的里程（单位：米）
     * </pre>
     */
    boolean hasRotationRate5000Distance();
    /**
     * <code>optional int32 rotationRate5000Distance = 13;</code>
     *
     * <pre>
     *本行程转速大于5000rpm的里程（单位：米）
     * </pre>
     */
    int getRotationRate5000Distance();

    // optional int32 throttleOpen0Distance = 14;
    /**
     * <code>optional int32 throttleOpen0Distance = 14;</code>
     *
     * <pre>
     *本行程油门开度小于20%的里程（单位：米）
     * </pre>
     */
    boolean hasThrottleOpen0Distance();
    /**
     * <code>optional int32 throttleOpen0Distance = 14;</code>
     *
     * <pre>
     *本行程油门开度小于20%的里程（单位：米）
     * </pre>
     */
    int getThrottleOpen0Distance();

    // optional int32 throttleOpen20Distance = 15;
    /**
     * <code>optional int32 throttleOpen20Distance = 15;</code>
     *
     * <pre>
     *本行程油门开度20-40%的里程（单位：米）
     * </pre>
     */
    boolean hasThrottleOpen20Distance();
    /**
     * <code>optional int32 throttleOpen20Distance = 15;</code>
     *
     * <pre>
     *本行程油门开度20-40%的里程（单位：米）
     * </pre>
     */
    int getThrottleOpen20Distance();

    // optional int32 throttleOpen40Distance = 16;
    /**
     * <code>optional int32 throttleOpen40Distance = 16;</code>
     *
     * <pre>
     *本行程油门开度40-60%的里程（单位：米）
     * </pre>
     */
    boolean hasThrottleOpen40Distance();
    /**
     * <code>optional int32 throttleOpen40Distance = 16;</code>
     *
     * <pre>
     *本行程油门开度40-60%的里程（单位：米）
     * </pre>
     */
    int getThrottleOpen40Distance();

    // optional int32 throttleOpen60Distance = 17;
    /**
     * <code>optional int32 throttleOpen60Distance = 17;</code>
     *
     * <pre>
     *本行程油门开度60-80%的里程（单位：米）
     * </pre>
     */
    boolean hasThrottleOpen60Distance();
    /**
     * <code>optional int32 throttleOpen60Distance = 17;</code>
     *
     * <pre>
     *本行程油门开度60-80%的里程（单位：米）
     * </pre>
     */
    int getThrottleOpen60Distance();

    // optional int32 throttleOpen80Distance = 18;
    /**
     * <code>optional int32 throttleOpen80Distance = 18;</code>
     *
     * <pre>
     *本行程油门开度大于80%的里程（单位：米）
     * </pre>
     */
    boolean hasThrottleOpen80Distance();
    /**
     * <code>optional int32 throttleOpen80Distance = 18;</code>
     *
     * <pre>
     *本行程油门开度大于80%的里程（单位：米）
     * </pre>
     */
    int getThrottleOpen80Distance();
  }
  /**
   * Protobuf type {@code gboss.PengaodaTravelInfo}
   *
   * <pre>
   **
   *  新鹏奥达行程附加信息
   * </pre>
   */
  public static final class PengaodaTravelInfo extends
      com.google.protobuf.GeneratedMessage
      implements PengaodaTravelInfoOrBuilder {
    // Use PengaodaTravelInfo.newBuilder() to construct.
    private PengaodaTravelInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PengaodaTravelInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PengaodaTravelInfo defaultInstance;
    public static PengaodaTravelInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PengaodaTravelInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PengaodaTravelInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              speed0Distance_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              speed20Distance_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              speed40Distance_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              speed60Distance_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              speed80Distance_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              speed100Distance_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              speed120Distance_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              rotationRate0Distance_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              rotationRate1000Distance_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              rotationRate2000Distance_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              rotationRate3000Distance_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              rotationRate4000Distance_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              rotationRate5000Distance_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              throttleOpen0Distance_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              throttleOpen20Distance_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              throttleOpen40Distance_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              throttleOpen60Distance_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              throttleOpen80Distance_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaTravelInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaTravelInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<PengaodaTravelInfo> PARSER =
        new com.google.protobuf.AbstractParser<PengaodaTravelInfo>() {
      public PengaodaTravelInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PengaodaTravelInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PengaodaTravelInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 speed0Distance = 1;
    public static final int SPEED0DISTANCE_FIELD_NUMBER = 1;
    private int speed0Distance_;
    /**
     * <code>optional int32 speed0Distance = 1;</code>
     *
     * <pre>
     *本行程速度小于20km/h的里程（单位：米）
     * </pre>
     */
    public boolean hasSpeed0Distance() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 speed0Distance = 1;</code>
     *
     * <pre>
     *本行程速度小于20km/h的里程（单位：米）
     * </pre>
     */
    public int getSpeed0Distance() {
      return speed0Distance_;
    }

    // optional int32 speed20Distance = 2;
    public static final int SPEED20DISTANCE_FIELD_NUMBER = 2;
    private int speed20Distance_;
    /**
     * <code>optional int32 speed20Distance = 2;</code>
     *
     * <pre>
     *本行程速度为20-40km/h的里程（单位：米）
     * </pre>
     */
    public boolean hasSpeed20Distance() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 speed20Distance = 2;</code>
     *
     * <pre>
     *本行程速度为20-40km/h的里程（单位：米）
     * </pre>
     */
    public int getSpeed20Distance() {
      return speed20Distance_;
    }

    // optional int32 speed40Distance = 3;
    public static final int SPEED40DISTANCE_FIELD_NUMBER = 3;
    private int speed40Distance_;
    /**
     * <code>optional int32 speed40Distance = 3;</code>
     *
     * <pre>
     *本行程速度为40-60km/h的里程（单位：米）
     * </pre>
     */
    public boolean hasSpeed40Distance() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 speed40Distance = 3;</code>
     *
     * <pre>
     *本行程速度为40-60km/h的里程（单位：米）
     * </pre>
     */
    public int getSpeed40Distance() {
      return speed40Distance_;
    }

    // optional int32 speed60Distance = 4;
    public static final int SPEED60DISTANCE_FIELD_NUMBER = 4;
    private int speed60Distance_;
    /**
     * <code>optional int32 speed60Distance = 4;</code>
     *
     * <pre>
     *本行程速度为60-80km/h的里程（单位：米）
     * </pre>
     */
    public boolean hasSpeed60Distance() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 speed60Distance = 4;</code>
     *
     * <pre>
     *本行程速度为60-80km/h的里程（单位：米）
     * </pre>
     */
    public int getSpeed60Distance() {
      return speed60Distance_;
    }

    // optional int32 speed80Distance = 5;
    public static final int SPEED80DISTANCE_FIELD_NUMBER = 5;
    private int speed80Distance_;
    /**
     * <code>optional int32 speed80Distance = 5;</code>
     *
     * <pre>
     *本行程速度为80-100km/h的里程（单位：米）
     * </pre>
     */
    public boolean hasSpeed80Distance() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 speed80Distance = 5;</code>
     *
     * <pre>
     *本行程速度为80-100km/h的里程（单位：米）
     * </pre>
     */
    public int getSpeed80Distance() {
      return speed80Distance_;
    }

    // optional int32 speed100Distance = 6;
    public static final int SPEED100DISTANCE_FIELD_NUMBER = 6;
    private int speed100Distance_;
    /**
     * <code>optional int32 speed100Distance = 6;</code>
     *
     * <pre>
     *本行程速度为100-120km/h的里程（单位：米）
     * </pre>
     */
    public boolean hasSpeed100Distance() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 speed100Distance = 6;</code>
     *
     * <pre>
     *本行程速度为100-120km/h的里程（单位：米）
     * </pre>
     */
    public int getSpeed100Distance() {
      return speed100Distance_;
    }

    // optional int32 speed120Distance = 7;
    public static final int SPEED120DISTANCE_FIELD_NUMBER = 7;
    private int speed120Distance_;
    /**
     * <code>optional int32 speed120Distance = 7;</code>
     *
     * <pre>
     *本行程速度大于120km/h的里程（单位：米）
     * </pre>
     */
    public boolean hasSpeed120Distance() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 speed120Distance = 7;</code>
     *
     * <pre>
     *本行程速度大于120km/h的里程（单位：米）
     * </pre>
     */
    public int getSpeed120Distance() {
      return speed120Distance_;
    }

    // optional int32 rotationRate0Distance = 8;
    public static final int ROTATIONRATE0DISTANCE_FIELD_NUMBER = 8;
    private int rotationRate0Distance_;
    /**
     * <code>optional int32 rotationRate0Distance = 8;</code>
     *
     * <pre>
     *本行程转速小于1000rpm的里程（单位：米）
     * </pre>
     */
    public boolean hasRotationRate0Distance() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 rotationRate0Distance = 8;</code>
     *
     * <pre>
     *本行程转速小于1000rpm的里程（单位：米）
     * </pre>
     */
    public int getRotationRate0Distance() {
      return rotationRate0Distance_;
    }

    // optional int32 rotationRate1000Distance = 9;
    public static final int ROTATIONRATE1000DISTANCE_FIELD_NUMBER = 9;
    private int rotationRate1000Distance_;
    /**
     * <code>optional int32 rotationRate1000Distance = 9;</code>
     *
     * <pre>
     *本行程转速1000-2000rpm的里程（单位：米）
     * </pre>
     */
    public boolean hasRotationRate1000Distance() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 rotationRate1000Distance = 9;</code>
     *
     * <pre>
     *本行程转速1000-2000rpm的里程（单位：米）
     * </pre>
     */
    public int getRotationRate1000Distance() {
      return rotationRate1000Distance_;
    }

    // optional int32 rotationRate2000Distance = 10;
    public static final int ROTATIONRATE2000DISTANCE_FIELD_NUMBER = 10;
    private int rotationRate2000Distance_;
    /**
     * <code>optional int32 rotationRate2000Distance = 10;</code>
     *
     * <pre>
     *本行程转速2000-3000rpm的里程（单位：米）
     * </pre>
     */
    public boolean hasRotationRate2000Distance() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 rotationRate2000Distance = 10;</code>
     *
     * <pre>
     *本行程转速2000-3000rpm的里程（单位：米）
     * </pre>
     */
    public int getRotationRate2000Distance() {
      return rotationRate2000Distance_;
    }

    // optional int32 rotationRate3000Distance = 11;
    public static final int ROTATIONRATE3000DISTANCE_FIELD_NUMBER = 11;
    private int rotationRate3000Distance_;
    /**
     * <code>optional int32 rotationRate3000Distance = 11;</code>
     *
     * <pre>
     *本行程转速3000-4000rpm的里程（单位：米）
     * </pre>
     */
    public boolean hasRotationRate3000Distance() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 rotationRate3000Distance = 11;</code>
     *
     * <pre>
     *本行程转速3000-4000rpm的里程（单位：米）
     * </pre>
     */
    public int getRotationRate3000Distance() {
      return rotationRate3000Distance_;
    }

    // optional int32 rotationRate4000Distance = 12;
    public static final int ROTATIONRATE4000DISTANCE_FIELD_NUMBER = 12;
    private int rotationRate4000Distance_;
    /**
     * <code>optional int32 rotationRate4000Distance = 12;</code>
     *
     * <pre>
     *本行程转速4000-5000rpm的里程（单位：米）
     * </pre>
     */
    public boolean hasRotationRate4000Distance() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 rotationRate4000Distance = 12;</code>
     *
     * <pre>
     *本行程转速4000-5000rpm的里程（单位：米）
     * </pre>
     */
    public int getRotationRate4000Distance() {
      return rotationRate4000Distance_;
    }

    // optional int32 rotationRate5000Distance = 13;
    public static final int ROTATIONRATE5000DISTANCE_FIELD_NUMBER = 13;
    private int rotationRate5000Distance_;
    /**
     * <code>optional int32 rotationRate5000Distance = 13;</code>
     *
     * <pre>
     *本行程转速大于5000rpm的里程（单位：米）
     * </pre>
     */
    public boolean hasRotationRate5000Distance() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 rotationRate5000Distance = 13;</code>
     *
     * <pre>
     *本行程转速大于5000rpm的里程（单位：米）
     * </pre>
     */
    public int getRotationRate5000Distance() {
      return rotationRate5000Distance_;
    }

    // optional int32 throttleOpen0Distance = 14;
    public static final int THROTTLEOPEN0DISTANCE_FIELD_NUMBER = 14;
    private int throttleOpen0Distance_;
    /**
     * <code>optional int32 throttleOpen0Distance = 14;</code>
     *
     * <pre>
     *本行程油门开度小于20%的里程（单位：米）
     * </pre>
     */
    public boolean hasThrottleOpen0Distance() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 throttleOpen0Distance = 14;</code>
     *
     * <pre>
     *本行程油门开度小于20%的里程（单位：米）
     * </pre>
     */
    public int getThrottleOpen0Distance() {
      return throttleOpen0Distance_;
    }

    // optional int32 throttleOpen20Distance = 15;
    public static final int THROTTLEOPEN20DISTANCE_FIELD_NUMBER = 15;
    private int throttleOpen20Distance_;
    /**
     * <code>optional int32 throttleOpen20Distance = 15;</code>
     *
     * <pre>
     *本行程油门开度20-40%的里程（单位：米）
     * </pre>
     */
    public boolean hasThrottleOpen20Distance() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 throttleOpen20Distance = 15;</code>
     *
     * <pre>
     *本行程油门开度20-40%的里程（单位：米）
     * </pre>
     */
    public int getThrottleOpen20Distance() {
      return throttleOpen20Distance_;
    }

    // optional int32 throttleOpen40Distance = 16;
    public static final int THROTTLEOPEN40DISTANCE_FIELD_NUMBER = 16;
    private int throttleOpen40Distance_;
    /**
     * <code>optional int32 throttleOpen40Distance = 16;</code>
     *
     * <pre>
     *本行程油门开度40-60%的里程（单位：米）
     * </pre>
     */
    public boolean hasThrottleOpen40Distance() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 throttleOpen40Distance = 16;</code>
     *
     * <pre>
     *本行程油门开度40-60%的里程（单位：米）
     * </pre>
     */
    public int getThrottleOpen40Distance() {
      return throttleOpen40Distance_;
    }

    // optional int32 throttleOpen60Distance = 17;
    public static final int THROTTLEOPEN60DISTANCE_FIELD_NUMBER = 17;
    private int throttleOpen60Distance_;
    /**
     * <code>optional int32 throttleOpen60Distance = 17;</code>
     *
     * <pre>
     *本行程油门开度60-80%的里程（单位：米）
     * </pre>
     */
    public boolean hasThrottleOpen60Distance() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 throttleOpen60Distance = 17;</code>
     *
     * <pre>
     *本行程油门开度60-80%的里程（单位：米）
     * </pre>
     */
    public int getThrottleOpen60Distance() {
      return throttleOpen60Distance_;
    }

    // optional int32 throttleOpen80Distance = 18;
    public static final int THROTTLEOPEN80DISTANCE_FIELD_NUMBER = 18;
    private int throttleOpen80Distance_;
    /**
     * <code>optional int32 throttleOpen80Distance = 18;</code>
     *
     * <pre>
     *本行程油门开度大于80%的里程（单位：米）
     * </pre>
     */
    public boolean hasThrottleOpen80Distance() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 throttleOpen80Distance = 18;</code>
     *
     * <pre>
     *本行程油门开度大于80%的里程（单位：米）
     * </pre>
     */
    public int getThrottleOpen80Distance() {
      return throttleOpen80Distance_;
    }

    private void initFields() {
      speed0Distance_ = 0;
      speed20Distance_ = 0;
      speed40Distance_ = 0;
      speed60Distance_ = 0;
      speed80Distance_ = 0;
      speed100Distance_ = 0;
      speed120Distance_ = 0;
      rotationRate0Distance_ = 0;
      rotationRate1000Distance_ = 0;
      rotationRate2000Distance_ = 0;
      rotationRate3000Distance_ = 0;
      rotationRate4000Distance_ = 0;
      rotationRate5000Distance_ = 0;
      throttleOpen0Distance_ = 0;
      throttleOpen20Distance_ = 0;
      throttleOpen40Distance_ = 0;
      throttleOpen60Distance_ = 0;
      throttleOpen80Distance_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, speed0Distance_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, speed20Distance_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, speed40Distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, speed60Distance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, speed80Distance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, speed100Distance_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, speed120Distance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, rotationRate0Distance_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, rotationRate1000Distance_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, rotationRate2000Distance_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, rotationRate3000Distance_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, rotationRate4000Distance_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, rotationRate5000Distance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, throttleOpen0Distance_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, throttleOpen20Distance_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, throttleOpen40Distance_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, throttleOpen60Distance_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, throttleOpen80Distance_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, speed0Distance_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, speed20Distance_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, speed40Distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, speed60Distance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, speed80Distance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, speed100Distance_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, speed120Distance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, rotationRate0Distance_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, rotationRate1000Distance_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, rotationRate2000Distance_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, rotationRate3000Distance_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, rotationRate4000Distance_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, rotationRate5000Distance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, throttleOpen0Distance_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, throttleOpen20Distance_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, throttleOpen40Distance_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, throttleOpen60Distance_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, throttleOpen80Distance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.PengaodaTravelInfo}
     *
     * <pre>
     **
     *  新鹏奥达行程附加信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaTravelInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaTravelInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        speed0Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        speed20Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        speed40Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        speed60Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        speed80Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        speed100Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        speed120Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        rotationRate0Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        rotationRate1000Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        rotationRate2000Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        rotationRate3000Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        rotationRate4000Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        rotationRate5000Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        throttleOpen0Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        throttleOpen20Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        throttleOpen40Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        throttleOpen60Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        throttleOpen80Distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_PengaodaTravelInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.speed0Distance_ = speed0Distance_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.speed20Distance_ = speed20Distance_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.speed40Distance_ = speed40Distance_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.speed60Distance_ = speed60Distance_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.speed80Distance_ = speed80Distance_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.speed100Distance_ = speed100Distance_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.speed120Distance_ = speed120Distance_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rotationRate0Distance_ = rotationRate0Distance_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.rotationRate1000Distance_ = rotationRate1000Distance_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.rotationRate2000Distance_ = rotationRate2000Distance_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.rotationRate3000Distance_ = rotationRate3000Distance_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.rotationRate4000Distance_ = rotationRate4000Distance_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.rotationRate5000Distance_ = rotationRate5000Distance_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.throttleOpen0Distance_ = throttleOpen0Distance_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.throttleOpen20Distance_ = throttleOpen20Distance_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.throttleOpen40Distance_ = throttleOpen40Distance_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.throttleOpen60Distance_ = throttleOpen60Distance_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.throttleOpen80Distance_ = throttleOpen80Distance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.getDefaultInstance()) return this;
        if (other.hasSpeed0Distance()) {
          setSpeed0Distance(other.getSpeed0Distance());
        }
        if (other.hasSpeed20Distance()) {
          setSpeed20Distance(other.getSpeed20Distance());
        }
        if (other.hasSpeed40Distance()) {
          setSpeed40Distance(other.getSpeed40Distance());
        }
        if (other.hasSpeed60Distance()) {
          setSpeed60Distance(other.getSpeed60Distance());
        }
        if (other.hasSpeed80Distance()) {
          setSpeed80Distance(other.getSpeed80Distance());
        }
        if (other.hasSpeed100Distance()) {
          setSpeed100Distance(other.getSpeed100Distance());
        }
        if (other.hasSpeed120Distance()) {
          setSpeed120Distance(other.getSpeed120Distance());
        }
        if (other.hasRotationRate0Distance()) {
          setRotationRate0Distance(other.getRotationRate0Distance());
        }
        if (other.hasRotationRate1000Distance()) {
          setRotationRate1000Distance(other.getRotationRate1000Distance());
        }
        if (other.hasRotationRate2000Distance()) {
          setRotationRate2000Distance(other.getRotationRate2000Distance());
        }
        if (other.hasRotationRate3000Distance()) {
          setRotationRate3000Distance(other.getRotationRate3000Distance());
        }
        if (other.hasRotationRate4000Distance()) {
          setRotationRate4000Distance(other.getRotationRate4000Distance());
        }
        if (other.hasRotationRate5000Distance()) {
          setRotationRate5000Distance(other.getRotationRate5000Distance());
        }
        if (other.hasThrottleOpen0Distance()) {
          setThrottleOpen0Distance(other.getThrottleOpen0Distance());
        }
        if (other.hasThrottleOpen20Distance()) {
          setThrottleOpen20Distance(other.getThrottleOpen20Distance());
        }
        if (other.hasThrottleOpen40Distance()) {
          setThrottleOpen40Distance(other.getThrottleOpen40Distance());
        }
        if (other.hasThrottleOpen60Distance()) {
          setThrottleOpen60Distance(other.getThrottleOpen60Distance());
        }
        if (other.hasThrottleOpen80Distance()) {
          setThrottleOpen80Distance(other.getThrottleOpen80Distance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 speed0Distance = 1;
      private int speed0Distance_ ;
      /**
       * <code>optional int32 speed0Distance = 1;</code>
       *
       * <pre>
       *本行程速度小于20km/h的里程（单位：米）
       * </pre>
       */
      public boolean hasSpeed0Distance() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 speed0Distance = 1;</code>
       *
       * <pre>
       *本行程速度小于20km/h的里程（单位：米）
       * </pre>
       */
      public int getSpeed0Distance() {
        return speed0Distance_;
      }
      /**
       * <code>optional int32 speed0Distance = 1;</code>
       *
       * <pre>
       *本行程速度小于20km/h的里程（单位：米）
       * </pre>
       */
      public Builder setSpeed0Distance(int value) {
        bitField0_ |= 0x00000001;
        speed0Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed0Distance = 1;</code>
       *
       * <pre>
       *本行程速度小于20km/h的里程（单位：米）
       * </pre>
       */
      public Builder clearSpeed0Distance() {
        bitField0_ = (bitField0_ & ~0x00000001);
        speed0Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed20Distance = 2;
      private int speed20Distance_ ;
      /**
       * <code>optional int32 speed20Distance = 2;</code>
       *
       * <pre>
       *本行程速度为20-40km/h的里程（单位：米）
       * </pre>
       */
      public boolean hasSpeed20Distance() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 speed20Distance = 2;</code>
       *
       * <pre>
       *本行程速度为20-40km/h的里程（单位：米）
       * </pre>
       */
      public int getSpeed20Distance() {
        return speed20Distance_;
      }
      /**
       * <code>optional int32 speed20Distance = 2;</code>
       *
       * <pre>
       *本行程速度为20-40km/h的里程（单位：米）
       * </pre>
       */
      public Builder setSpeed20Distance(int value) {
        bitField0_ |= 0x00000002;
        speed20Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed20Distance = 2;</code>
       *
       * <pre>
       *本行程速度为20-40km/h的里程（单位：米）
       * </pre>
       */
      public Builder clearSpeed20Distance() {
        bitField0_ = (bitField0_ & ~0x00000002);
        speed20Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed40Distance = 3;
      private int speed40Distance_ ;
      /**
       * <code>optional int32 speed40Distance = 3;</code>
       *
       * <pre>
       *本行程速度为40-60km/h的里程（单位：米）
       * </pre>
       */
      public boolean hasSpeed40Distance() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 speed40Distance = 3;</code>
       *
       * <pre>
       *本行程速度为40-60km/h的里程（单位：米）
       * </pre>
       */
      public int getSpeed40Distance() {
        return speed40Distance_;
      }
      /**
       * <code>optional int32 speed40Distance = 3;</code>
       *
       * <pre>
       *本行程速度为40-60km/h的里程（单位：米）
       * </pre>
       */
      public Builder setSpeed40Distance(int value) {
        bitField0_ |= 0x00000004;
        speed40Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed40Distance = 3;</code>
       *
       * <pre>
       *本行程速度为40-60km/h的里程（单位：米）
       * </pre>
       */
      public Builder clearSpeed40Distance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        speed40Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed60Distance = 4;
      private int speed60Distance_ ;
      /**
       * <code>optional int32 speed60Distance = 4;</code>
       *
       * <pre>
       *本行程速度为60-80km/h的里程（单位：米）
       * </pre>
       */
      public boolean hasSpeed60Distance() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 speed60Distance = 4;</code>
       *
       * <pre>
       *本行程速度为60-80km/h的里程（单位：米）
       * </pre>
       */
      public int getSpeed60Distance() {
        return speed60Distance_;
      }
      /**
       * <code>optional int32 speed60Distance = 4;</code>
       *
       * <pre>
       *本行程速度为60-80km/h的里程（单位：米）
       * </pre>
       */
      public Builder setSpeed60Distance(int value) {
        bitField0_ |= 0x00000008;
        speed60Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed60Distance = 4;</code>
       *
       * <pre>
       *本行程速度为60-80km/h的里程（单位：米）
       * </pre>
       */
      public Builder clearSpeed60Distance() {
        bitField0_ = (bitField0_ & ~0x00000008);
        speed60Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed80Distance = 5;
      private int speed80Distance_ ;
      /**
       * <code>optional int32 speed80Distance = 5;</code>
       *
       * <pre>
       *本行程速度为80-100km/h的里程（单位：米）
       * </pre>
       */
      public boolean hasSpeed80Distance() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 speed80Distance = 5;</code>
       *
       * <pre>
       *本行程速度为80-100km/h的里程（单位：米）
       * </pre>
       */
      public int getSpeed80Distance() {
        return speed80Distance_;
      }
      /**
       * <code>optional int32 speed80Distance = 5;</code>
       *
       * <pre>
       *本行程速度为80-100km/h的里程（单位：米）
       * </pre>
       */
      public Builder setSpeed80Distance(int value) {
        bitField0_ |= 0x00000010;
        speed80Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed80Distance = 5;</code>
       *
       * <pre>
       *本行程速度为80-100km/h的里程（单位：米）
       * </pre>
       */
      public Builder clearSpeed80Distance() {
        bitField0_ = (bitField0_ & ~0x00000010);
        speed80Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed100Distance = 6;
      private int speed100Distance_ ;
      /**
       * <code>optional int32 speed100Distance = 6;</code>
       *
       * <pre>
       *本行程速度为100-120km/h的里程（单位：米）
       * </pre>
       */
      public boolean hasSpeed100Distance() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 speed100Distance = 6;</code>
       *
       * <pre>
       *本行程速度为100-120km/h的里程（单位：米）
       * </pre>
       */
      public int getSpeed100Distance() {
        return speed100Distance_;
      }
      /**
       * <code>optional int32 speed100Distance = 6;</code>
       *
       * <pre>
       *本行程速度为100-120km/h的里程（单位：米）
       * </pre>
       */
      public Builder setSpeed100Distance(int value) {
        bitField0_ |= 0x00000020;
        speed100Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed100Distance = 6;</code>
       *
       * <pre>
       *本行程速度为100-120km/h的里程（单位：米）
       * </pre>
       */
      public Builder clearSpeed100Distance() {
        bitField0_ = (bitField0_ & ~0x00000020);
        speed100Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed120Distance = 7;
      private int speed120Distance_ ;
      /**
       * <code>optional int32 speed120Distance = 7;</code>
       *
       * <pre>
       *本行程速度大于120km/h的里程（单位：米）
       * </pre>
       */
      public boolean hasSpeed120Distance() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 speed120Distance = 7;</code>
       *
       * <pre>
       *本行程速度大于120km/h的里程（单位：米）
       * </pre>
       */
      public int getSpeed120Distance() {
        return speed120Distance_;
      }
      /**
       * <code>optional int32 speed120Distance = 7;</code>
       *
       * <pre>
       *本行程速度大于120km/h的里程（单位：米）
       * </pre>
       */
      public Builder setSpeed120Distance(int value) {
        bitField0_ |= 0x00000040;
        speed120Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed120Distance = 7;</code>
       *
       * <pre>
       *本行程速度大于120km/h的里程（单位：米）
       * </pre>
       */
      public Builder clearSpeed120Distance() {
        bitField0_ = (bitField0_ & ~0x00000040);
        speed120Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotationRate0Distance = 8;
      private int rotationRate0Distance_ ;
      /**
       * <code>optional int32 rotationRate0Distance = 8;</code>
       *
       * <pre>
       *本行程转速小于1000rpm的里程（单位：米）
       * </pre>
       */
      public boolean hasRotationRate0Distance() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 rotationRate0Distance = 8;</code>
       *
       * <pre>
       *本行程转速小于1000rpm的里程（单位：米）
       * </pre>
       */
      public int getRotationRate0Distance() {
        return rotationRate0Distance_;
      }
      /**
       * <code>optional int32 rotationRate0Distance = 8;</code>
       *
       * <pre>
       *本行程转速小于1000rpm的里程（单位：米）
       * </pre>
       */
      public Builder setRotationRate0Distance(int value) {
        bitField0_ |= 0x00000080;
        rotationRate0Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rotationRate0Distance = 8;</code>
       *
       * <pre>
       *本行程转速小于1000rpm的里程（单位：米）
       * </pre>
       */
      public Builder clearRotationRate0Distance() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rotationRate0Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotationRate1000Distance = 9;
      private int rotationRate1000Distance_ ;
      /**
       * <code>optional int32 rotationRate1000Distance = 9;</code>
       *
       * <pre>
       *本行程转速1000-2000rpm的里程（单位：米）
       * </pre>
       */
      public boolean hasRotationRate1000Distance() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 rotationRate1000Distance = 9;</code>
       *
       * <pre>
       *本行程转速1000-2000rpm的里程（单位：米）
       * </pre>
       */
      public int getRotationRate1000Distance() {
        return rotationRate1000Distance_;
      }
      /**
       * <code>optional int32 rotationRate1000Distance = 9;</code>
       *
       * <pre>
       *本行程转速1000-2000rpm的里程（单位：米）
       * </pre>
       */
      public Builder setRotationRate1000Distance(int value) {
        bitField0_ |= 0x00000100;
        rotationRate1000Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rotationRate1000Distance = 9;</code>
       *
       * <pre>
       *本行程转速1000-2000rpm的里程（单位：米）
       * </pre>
       */
      public Builder clearRotationRate1000Distance() {
        bitField0_ = (bitField0_ & ~0x00000100);
        rotationRate1000Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotationRate2000Distance = 10;
      private int rotationRate2000Distance_ ;
      /**
       * <code>optional int32 rotationRate2000Distance = 10;</code>
       *
       * <pre>
       *本行程转速2000-3000rpm的里程（单位：米）
       * </pre>
       */
      public boolean hasRotationRate2000Distance() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 rotationRate2000Distance = 10;</code>
       *
       * <pre>
       *本行程转速2000-3000rpm的里程（单位：米）
       * </pre>
       */
      public int getRotationRate2000Distance() {
        return rotationRate2000Distance_;
      }
      /**
       * <code>optional int32 rotationRate2000Distance = 10;</code>
       *
       * <pre>
       *本行程转速2000-3000rpm的里程（单位：米）
       * </pre>
       */
      public Builder setRotationRate2000Distance(int value) {
        bitField0_ |= 0x00000200;
        rotationRate2000Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rotationRate2000Distance = 10;</code>
       *
       * <pre>
       *本行程转速2000-3000rpm的里程（单位：米）
       * </pre>
       */
      public Builder clearRotationRate2000Distance() {
        bitField0_ = (bitField0_ & ~0x00000200);
        rotationRate2000Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotationRate3000Distance = 11;
      private int rotationRate3000Distance_ ;
      /**
       * <code>optional int32 rotationRate3000Distance = 11;</code>
       *
       * <pre>
       *本行程转速3000-4000rpm的里程（单位：米）
       * </pre>
       */
      public boolean hasRotationRate3000Distance() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 rotationRate3000Distance = 11;</code>
       *
       * <pre>
       *本行程转速3000-4000rpm的里程（单位：米）
       * </pre>
       */
      public int getRotationRate3000Distance() {
        return rotationRate3000Distance_;
      }
      /**
       * <code>optional int32 rotationRate3000Distance = 11;</code>
       *
       * <pre>
       *本行程转速3000-4000rpm的里程（单位：米）
       * </pre>
       */
      public Builder setRotationRate3000Distance(int value) {
        bitField0_ |= 0x00000400;
        rotationRate3000Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rotationRate3000Distance = 11;</code>
       *
       * <pre>
       *本行程转速3000-4000rpm的里程（单位：米）
       * </pre>
       */
      public Builder clearRotationRate3000Distance() {
        bitField0_ = (bitField0_ & ~0x00000400);
        rotationRate3000Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotationRate4000Distance = 12;
      private int rotationRate4000Distance_ ;
      /**
       * <code>optional int32 rotationRate4000Distance = 12;</code>
       *
       * <pre>
       *本行程转速4000-5000rpm的里程（单位：米）
       * </pre>
       */
      public boolean hasRotationRate4000Distance() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 rotationRate4000Distance = 12;</code>
       *
       * <pre>
       *本行程转速4000-5000rpm的里程（单位：米）
       * </pre>
       */
      public int getRotationRate4000Distance() {
        return rotationRate4000Distance_;
      }
      /**
       * <code>optional int32 rotationRate4000Distance = 12;</code>
       *
       * <pre>
       *本行程转速4000-5000rpm的里程（单位：米）
       * </pre>
       */
      public Builder setRotationRate4000Distance(int value) {
        bitField0_ |= 0x00000800;
        rotationRate4000Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rotationRate4000Distance = 12;</code>
       *
       * <pre>
       *本行程转速4000-5000rpm的里程（单位：米）
       * </pre>
       */
      public Builder clearRotationRate4000Distance() {
        bitField0_ = (bitField0_ & ~0x00000800);
        rotationRate4000Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotationRate5000Distance = 13;
      private int rotationRate5000Distance_ ;
      /**
       * <code>optional int32 rotationRate5000Distance = 13;</code>
       *
       * <pre>
       *本行程转速大于5000rpm的里程（单位：米）
       * </pre>
       */
      public boolean hasRotationRate5000Distance() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 rotationRate5000Distance = 13;</code>
       *
       * <pre>
       *本行程转速大于5000rpm的里程（单位：米）
       * </pre>
       */
      public int getRotationRate5000Distance() {
        return rotationRate5000Distance_;
      }
      /**
       * <code>optional int32 rotationRate5000Distance = 13;</code>
       *
       * <pre>
       *本行程转速大于5000rpm的里程（单位：米）
       * </pre>
       */
      public Builder setRotationRate5000Distance(int value) {
        bitField0_ |= 0x00001000;
        rotationRate5000Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rotationRate5000Distance = 13;</code>
       *
       * <pre>
       *本行程转速大于5000rpm的里程（单位：米）
       * </pre>
       */
      public Builder clearRotationRate5000Distance() {
        bitField0_ = (bitField0_ & ~0x00001000);
        rotationRate5000Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 throttleOpen0Distance = 14;
      private int throttleOpen0Distance_ ;
      /**
       * <code>optional int32 throttleOpen0Distance = 14;</code>
       *
       * <pre>
       *本行程油门开度小于20%的里程（单位：米）
       * </pre>
       */
      public boolean hasThrottleOpen0Distance() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 throttleOpen0Distance = 14;</code>
       *
       * <pre>
       *本行程油门开度小于20%的里程（单位：米）
       * </pre>
       */
      public int getThrottleOpen0Distance() {
        return throttleOpen0Distance_;
      }
      /**
       * <code>optional int32 throttleOpen0Distance = 14;</code>
       *
       * <pre>
       *本行程油门开度小于20%的里程（单位：米）
       * </pre>
       */
      public Builder setThrottleOpen0Distance(int value) {
        bitField0_ |= 0x00002000;
        throttleOpen0Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 throttleOpen0Distance = 14;</code>
       *
       * <pre>
       *本行程油门开度小于20%的里程（单位：米）
       * </pre>
       */
      public Builder clearThrottleOpen0Distance() {
        bitField0_ = (bitField0_ & ~0x00002000);
        throttleOpen0Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 throttleOpen20Distance = 15;
      private int throttleOpen20Distance_ ;
      /**
       * <code>optional int32 throttleOpen20Distance = 15;</code>
       *
       * <pre>
       *本行程油门开度20-40%的里程（单位：米）
       * </pre>
       */
      public boolean hasThrottleOpen20Distance() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 throttleOpen20Distance = 15;</code>
       *
       * <pre>
       *本行程油门开度20-40%的里程（单位：米）
       * </pre>
       */
      public int getThrottleOpen20Distance() {
        return throttleOpen20Distance_;
      }
      /**
       * <code>optional int32 throttleOpen20Distance = 15;</code>
       *
       * <pre>
       *本行程油门开度20-40%的里程（单位：米）
       * </pre>
       */
      public Builder setThrottleOpen20Distance(int value) {
        bitField0_ |= 0x00004000;
        throttleOpen20Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 throttleOpen20Distance = 15;</code>
       *
       * <pre>
       *本行程油门开度20-40%的里程（单位：米）
       * </pre>
       */
      public Builder clearThrottleOpen20Distance() {
        bitField0_ = (bitField0_ & ~0x00004000);
        throttleOpen20Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 throttleOpen40Distance = 16;
      private int throttleOpen40Distance_ ;
      /**
       * <code>optional int32 throttleOpen40Distance = 16;</code>
       *
       * <pre>
       *本行程油门开度40-60%的里程（单位：米）
       * </pre>
       */
      public boolean hasThrottleOpen40Distance() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 throttleOpen40Distance = 16;</code>
       *
       * <pre>
       *本行程油门开度40-60%的里程（单位：米）
       * </pre>
       */
      public int getThrottleOpen40Distance() {
        return throttleOpen40Distance_;
      }
      /**
       * <code>optional int32 throttleOpen40Distance = 16;</code>
       *
       * <pre>
       *本行程油门开度40-60%的里程（单位：米）
       * </pre>
       */
      public Builder setThrottleOpen40Distance(int value) {
        bitField0_ |= 0x00008000;
        throttleOpen40Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 throttleOpen40Distance = 16;</code>
       *
       * <pre>
       *本行程油门开度40-60%的里程（单位：米）
       * </pre>
       */
      public Builder clearThrottleOpen40Distance() {
        bitField0_ = (bitField0_ & ~0x00008000);
        throttleOpen40Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 throttleOpen60Distance = 17;
      private int throttleOpen60Distance_ ;
      /**
       * <code>optional int32 throttleOpen60Distance = 17;</code>
       *
       * <pre>
       *本行程油门开度60-80%的里程（单位：米）
       * </pre>
       */
      public boolean hasThrottleOpen60Distance() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 throttleOpen60Distance = 17;</code>
       *
       * <pre>
       *本行程油门开度60-80%的里程（单位：米）
       * </pre>
       */
      public int getThrottleOpen60Distance() {
        return throttleOpen60Distance_;
      }
      /**
       * <code>optional int32 throttleOpen60Distance = 17;</code>
       *
       * <pre>
       *本行程油门开度60-80%的里程（单位：米）
       * </pre>
       */
      public Builder setThrottleOpen60Distance(int value) {
        bitField0_ |= 0x00010000;
        throttleOpen60Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 throttleOpen60Distance = 17;</code>
       *
       * <pre>
       *本行程油门开度60-80%的里程（单位：米）
       * </pre>
       */
      public Builder clearThrottleOpen60Distance() {
        bitField0_ = (bitField0_ & ~0x00010000);
        throttleOpen60Distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 throttleOpen80Distance = 18;
      private int throttleOpen80Distance_ ;
      /**
       * <code>optional int32 throttleOpen80Distance = 18;</code>
       *
       * <pre>
       *本行程油门开度大于80%的里程（单位：米）
       * </pre>
       */
      public boolean hasThrottleOpen80Distance() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 throttleOpen80Distance = 18;</code>
       *
       * <pre>
       *本行程油门开度大于80%的里程（单位：米）
       * </pre>
       */
      public int getThrottleOpen80Distance() {
        return throttleOpen80Distance_;
      }
      /**
       * <code>optional int32 throttleOpen80Distance = 18;</code>
       *
       * <pre>
       *本行程油门开度大于80%的里程（单位：米）
       * </pre>
       */
      public Builder setThrottleOpen80Distance(int value) {
        bitField0_ |= 0x00020000;
        throttleOpen80Distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 throttleOpen80Distance = 18;</code>
       *
       * <pre>
       *本行程油门开度大于80%的里程（单位：米）
       * </pre>
       */
      public Builder clearThrottleOpen80Distance() {
        bitField0_ = (bitField0_ & ~0x00020000);
        throttleOpen80Distance_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.PengaodaTravelInfo)
    }

    static {
      defaultInstance = new PengaodaTravelInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.PengaodaTravelInfo)
  }

  public interface TravelInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required int64 startTime = 2;
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    long getStartTime();

    // required int64 endTime = 3;
    /**
     * <code>required int64 endTime = 3;</code>
     *
     * <pre>
     *结束时间(如果是行程开始，则为0)
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>required int64 endTime = 3;</code>
     *
     * <pre>
     *结束时间(如果是行程开始，则为0)
     * </pre>
     */
    long getEndTime();

    // optional int32 distance = 4;
    /**
     * <code>optional int32 distance = 4;</code>
     *
     * <pre>
     *里程（单位：米）
     * </pre>
     */
    boolean hasDistance();
    /**
     * <code>optional int32 distance = 4;</code>
     *
     * <pre>
     *里程（单位：米）
     * </pre>
     */
    int getDistance();

    // optional int32 maxSpeed = 5;
    /**
     * <code>optional int32 maxSpeed = 5;</code>
     *
     * <pre>
     *最大速度（单位：0.1千米/小时）
     * </pre>
     */
    boolean hasMaxSpeed();
    /**
     * <code>optional int32 maxSpeed = 5;</code>
     *
     * <pre>
     *最大速度（单位：0.1千米/小时）
     * </pre>
     */
    int getMaxSpeed();

    // optional int32 overSpeedTime = 6;
    /**
     * <code>optional int32 overSpeedTime = 6;</code>
     *
     * <pre>
     *超速时长（单位:秒）
     * </pre>
     */
    boolean hasOverSpeedTime();
    /**
     * <code>optional int32 overSpeedTime = 6;</code>
     *
     * <pre>
     *超速时长（单位:秒）
     * </pre>
     */
    int getOverSpeedTime();

    // optional int32 quickBrakeCount = 7;
    /**
     * <code>optional int32 quickBrakeCount = 7;</code>
     *
     * <pre>
     *急刹车次数
     * </pre>
     */
    boolean hasQuickBrakeCount();
    /**
     * <code>optional int32 quickBrakeCount = 7;</code>
     *
     * <pre>
     *急刹车次数
     * </pre>
     */
    int getQuickBrakeCount();

    // optional int32 emergencyBrakeCount = 8;
    /**
     * <code>optional int32 emergencyBrakeCount = 8;</code>
     *
     * <pre>
     *紧急刹车次数
     * </pre>
     */
    boolean hasEmergencyBrakeCount();
    /**
     * <code>optional int32 emergencyBrakeCount = 8;</code>
     *
     * <pre>
     *紧急刹车次数
     * </pre>
     */
    int getEmergencyBrakeCount();

    // optional int32 quickSpeedUpCount = 9;
    /**
     * <code>optional int32 quickSpeedUpCount = 9;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    boolean hasQuickSpeedUpCount();
    /**
     * <code>optional int32 quickSpeedUpCount = 9;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    int getQuickSpeedUpCount();

    // optional int32 emergencySpeedUpCount = 10;
    /**
     * <code>optional int32 emergencySpeedUpCount = 10;</code>
     *
     * <pre>
     *紧急加速次数
     * </pre>
     */
    boolean hasEmergencySpeedUpCount();
    /**
     * <code>optional int32 emergencySpeedUpCount = 10;</code>
     *
     * <pre>
     *紧急加速次数
     * </pre>
     */
    int getEmergencySpeedUpCount();

    // optional int32 averageSpeed = 11;
    /**
     * <code>optional int32 averageSpeed = 11;</code>
     *
     * <pre>
     *平均速度（单位：0.1千米/小时）
     * </pre>
     */
    boolean hasAverageSpeed();
    /**
     * <code>optional int32 averageSpeed = 11;</code>
     *
     * <pre>
     *平均速度（单位：0.1千米/小时）
     * </pre>
     */
    int getAverageSpeed();

    // optional int32 maxWaterTemperature = 12;
    /**
     * <code>optional int32 maxWaterTemperature = 12;</code>
     *
     * <pre>
     *发动机最高水温（单位：℃）
     * </pre>
     */
    boolean hasMaxWaterTemperature();
    /**
     * <code>optional int32 maxWaterTemperature = 12;</code>
     *
     * <pre>
     *发动机最高水温（单位：℃）
     * </pre>
     */
    int getMaxWaterTemperature();

    // optional int32 maxRotationSpeed = 13;
    /**
     * <code>optional int32 maxRotationSpeed = 13;</code>
     *
     * <pre>
     *发动机最高工作转速（单位：转/分）
     * </pre>
     */
    boolean hasMaxRotationSpeed();
    /**
     * <code>optional int32 maxRotationSpeed = 13;</code>
     *
     * <pre>
     *发动机最高工作转速（单位：转/分）
     * </pre>
     */
    int getMaxRotationSpeed();

    // optional int32 voltage = 14;
    /**
     * <code>optional int32 voltage = 14;</code>
     *
     * <pre>
     *电压值（单位：0.1V）
     * </pre>
     */
    boolean hasVoltage();
    /**
     * <code>optional int32 voltage = 14;</code>
     *
     * <pre>
     *电压值（单位：0.1V）
     * </pre>
     */
    int getVoltage();

    // optional int32 totalOil = 15;
    /**
     * <code>optional int32 totalOil = 15;</code>
     *
     * <pre>
     *总油耗（单位：0.01升）
     * </pre>
     */
    boolean hasTotalOil();
    /**
     * <code>optional int32 totalOil = 15;</code>
     *
     * <pre>
     *总油耗（单位：0.01升）
     * </pre>
     */
    int getTotalOil();

    // optional int32 averageOil = 16;
    /**
     * <code>optional int32 averageOil = 16;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    boolean hasAverageOil();
    /**
     * <code>optional int32 averageOil = 16;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    int getAverageOil();

    // optional int32 tiredDrivingTime = 17;
    /**
     * <code>optional int32 tiredDrivingTime = 17;</code>
     *
     * <pre>
     *疲劳驾驶时长（单位:秒）
     * </pre>
     */
    boolean hasTiredDrivingTime();
    /**
     * <code>optional int32 tiredDrivingTime = 17;</code>
     *
     * <pre>
     *疲劳驾驶时长（单位:秒）
     * </pre>
     */
    int getTiredDrivingTime();

    // optional int32 serialNumber = 18;
    /**
     * <code>optional int32 serialNumber = 18;</code>
     *
     * <pre>
     *行程序号（0-255）
     * </pre>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional int32 serialNumber = 18;</code>
     *
     * <pre>
     *行程序号（0-255）
     * </pre>
     */
    int getSerialNumber();

    // optional int32 averageRotationSpeed = 19;
    /**
     * <code>optional int32 averageRotationSpeed = 19;</code>
     *
     * <pre>
     *平均转速（单位：转/分）
     * </pre>
     */
    boolean hasAverageRotationSpeed();
    /**
     * <code>optional int32 averageRotationSpeed = 19;</code>
     *
     * <pre>
     *平均转速（单位：转/分）
     * </pre>
     */
    int getAverageRotationSpeed();

    // optional int32 maxOil = 20;
    /**
     * <code>optional int32 maxOil = 20;</code>
     *
     * <pre>
     *最高瞬时油耗（单位：0.01升/百公里）
     * </pre>
     */
    boolean hasMaxOil();
    /**
     * <code>optional int32 maxOil = 20;</code>
     *
     * <pre>
     *最高瞬时油耗（单位：0.01升/百公里）
     * </pre>
     */
    int getMaxOil();

    // optional int32 idleTime = 21;
    /**
     * <code>optional int32 idleTime = 21;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    boolean hasIdleTime();
    /**
     * <code>optional int32 idleTime = 21;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    int getIdleTime();

    // optional .gboss.GpsBaseInfo startGps = 22;
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    boolean hasStartGps();
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getStartGps();
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder();

    // optional .gboss.GpsReferPosition startReferPos = 23;
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    boolean hasStartReferPos();
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getStartReferPos();
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartReferPosOrBuilder();

    // optional .gboss.GpsBaseInfo endGps = 24;
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    boolean hasEndGps();
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getEndGps();
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getEndGpsOrBuilder();

    // optional .gboss.GpsReferPosition endReferPos = 25;
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    boolean hasEndReferPos();
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getEndReferPos();
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getEndReferPosOrBuilder();

    // optional int32 history = 26;
    /**
     * <code>optional int32 history = 26;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    boolean hasHistory();
    /**
     * <code>optional int32 history = 26;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    int getHistory();

    // optional int32 quickTurnCount = 27;
    /**
     * <code>optional int32 quickTurnCount = 27;</code>
     *
     * <pre>
     *急转弯次数
     * </pre>
     */
    boolean hasQuickTurnCount();
    /**
     * <code>optional int32 quickTurnCount = 27;</code>
     *
     * <pre>
     *急转弯次数
     * </pre>
     */
    int getQuickTurnCount();

    // optional int32 overSpeedCount = 28;
    /**
     * <code>optional int32 overSpeedCount = 28;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    boolean hasOverSpeedCount();
    /**
     * <code>optional int32 overSpeedCount = 28;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    int getOverSpeedCount();

    // optional int32 BrakeCount = 29;
    /**
     * <code>optional int32 BrakeCount = 29;</code>
     *
     * <pre>
     *刹车总数
     * </pre>
     */
    boolean hasBrakeCount();
    /**
     * <code>optional int32 BrakeCount = 29;</code>
     *
     * <pre>
     *刹车总数
     * </pre>
     */
    int getBrakeCount();

    // optional int32 maxThrottleOpen = 30;
    /**
     * <code>optional int32 maxThrottleOpen = 30;</code>
     *
     * <pre>
     *本行程最大油门开度（百分比）
     * </pre>
     */
    boolean hasMaxThrottleOpen();
    /**
     * <code>optional int32 maxThrottleOpen = 30;</code>
     *
     * <pre>
     *本行程最大油门开度（百分比）
     * </pre>
     */
    int getMaxThrottleOpen();

    // optional int32 averageThrottleOpen = 31;
    /**
     * <code>optional int32 averageThrottleOpen = 31;</code>
     *
     * <pre>
     *本行程平均油门开度（百分比）
     * </pre>
     */
    boolean hasAverageThrottleOpen();
    /**
     * <code>optional int32 averageThrottleOpen = 31;</code>
     *
     * <pre>
     *本行程平均油门开度（百分比）
     * </pre>
     */
    int getAverageThrottleOpen();

    // optional .gboss.PengaodaTravelInfo padInfo = 32;
    /**
     * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
     *
     * <pre>
     *鹏奥达行程附加信息
     * </pre>
     */
    boolean hasPadInfo();
    /**
     * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
     *
     * <pre>
     *鹏奥达行程附加信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo getPadInfo();
    /**
     * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
     *
     * <pre>
     *鹏奥达行程附加信息
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfoOrBuilder getPadInfoOrBuilder();
  }
  /**
   * Protobuf type {@code gboss.TravelInfo}
   *
   * <pre>
   **
   *  行程信息(TravelInfo)
   * </pre>
   */
  public static final class TravelInfo extends
      com.google.protobuf.GeneratedMessage
      implements TravelInfoOrBuilder {
    // Use TravelInfo.newBuilder() to construct.
    private TravelInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TravelInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TravelInfo defaultInstance;
    public static TravelInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TravelInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TravelInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startTime_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              endTime_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              distance_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxSpeed_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              overSpeedTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              quickBrakeCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              emergencyBrakeCount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              quickSpeedUpCount_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              emergencySpeedUpCount_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              averageSpeed_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              maxWaterTemperature_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              maxRotationSpeed_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              voltage_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              totalOil_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              averageOil_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              tiredDrivingTime_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              serialNumber_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              averageRotationSpeed_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              maxOil_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              idleTime_ = input.readInt32();
              break;
            }
            case 178: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = startGps_.toBuilder();
              }
              startGps_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startGps_);
                startGps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
            case 186: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = startReferPos_.toBuilder();
              }
              startReferPos_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startReferPos_);
                startReferPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
            case 194: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = endGps_.toBuilder();
              }
              endGps_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endGps_);
                endGps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 202: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x01000000) == 0x01000000)) {
                subBuilder = endReferPos_.toBuilder();
              }
              endReferPos_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endReferPos_);
                endReferPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x01000000;
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              history_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              quickTurnCount_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              overSpeedCount_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              brakeCount_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              maxThrottleOpen_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              averageThrottleOpen_ = input.readInt32();
              break;
            }
            case 258: {
              cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x80000000) == 0x80000000)) {
                subBuilder = padInfo_.toBuilder();
              }
              padInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(padInfo_);
                padInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x80000000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_TravelInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_TravelInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TravelInfo> PARSER =
        new com.google.protobuf.AbstractParser<TravelInfo>() {
      public TravelInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TravelInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TravelInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 startTime = 2;
    public static final int STARTTIME_FIELD_NUMBER = 2;
    private long startTime_;
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    // required int64 endTime = 3;
    public static final int ENDTIME_FIELD_NUMBER = 3;
    private long endTime_;
    /**
     * <code>required int64 endTime = 3;</code>
     *
     * <pre>
     *结束时间(如果是行程开始，则为0)
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 endTime = 3;</code>
     *
     * <pre>
     *结束时间(如果是行程开始，则为0)
     * </pre>
     */
    public long getEndTime() {
      return endTime_;
    }

    // optional int32 distance = 4;
    public static final int DISTANCE_FIELD_NUMBER = 4;
    private int distance_;
    /**
     * <code>optional int32 distance = 4;</code>
     *
     * <pre>
     *里程（单位：米）
     * </pre>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 distance = 4;</code>
     *
     * <pre>
     *里程（单位：米）
     * </pre>
     */
    public int getDistance() {
      return distance_;
    }

    // optional int32 maxSpeed = 5;
    public static final int MAXSPEED_FIELD_NUMBER = 5;
    private int maxSpeed_;
    /**
     * <code>optional int32 maxSpeed = 5;</code>
     *
     * <pre>
     *最大速度（单位：0.1千米/小时）
     * </pre>
     */
    public boolean hasMaxSpeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 maxSpeed = 5;</code>
     *
     * <pre>
     *最大速度（单位：0.1千米/小时）
     * </pre>
     */
    public int getMaxSpeed() {
      return maxSpeed_;
    }

    // optional int32 overSpeedTime = 6;
    public static final int OVERSPEEDTIME_FIELD_NUMBER = 6;
    private int overSpeedTime_;
    /**
     * <code>optional int32 overSpeedTime = 6;</code>
     *
     * <pre>
     *超速时长（单位:秒）
     * </pre>
     */
    public boolean hasOverSpeedTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 overSpeedTime = 6;</code>
     *
     * <pre>
     *超速时长（单位:秒）
     * </pre>
     */
    public int getOverSpeedTime() {
      return overSpeedTime_;
    }

    // optional int32 quickBrakeCount = 7;
    public static final int QUICKBRAKECOUNT_FIELD_NUMBER = 7;
    private int quickBrakeCount_;
    /**
     * <code>optional int32 quickBrakeCount = 7;</code>
     *
     * <pre>
     *急刹车次数
     * </pre>
     */
    public boolean hasQuickBrakeCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 quickBrakeCount = 7;</code>
     *
     * <pre>
     *急刹车次数
     * </pre>
     */
    public int getQuickBrakeCount() {
      return quickBrakeCount_;
    }

    // optional int32 emergencyBrakeCount = 8;
    public static final int EMERGENCYBRAKECOUNT_FIELD_NUMBER = 8;
    private int emergencyBrakeCount_;
    /**
     * <code>optional int32 emergencyBrakeCount = 8;</code>
     *
     * <pre>
     *紧急刹车次数
     * </pre>
     */
    public boolean hasEmergencyBrakeCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 emergencyBrakeCount = 8;</code>
     *
     * <pre>
     *紧急刹车次数
     * </pre>
     */
    public int getEmergencyBrakeCount() {
      return emergencyBrakeCount_;
    }

    // optional int32 quickSpeedUpCount = 9;
    public static final int QUICKSPEEDUPCOUNT_FIELD_NUMBER = 9;
    private int quickSpeedUpCount_;
    /**
     * <code>optional int32 quickSpeedUpCount = 9;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    public boolean hasQuickSpeedUpCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 quickSpeedUpCount = 9;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    public int getQuickSpeedUpCount() {
      return quickSpeedUpCount_;
    }

    // optional int32 emergencySpeedUpCount = 10;
    public static final int EMERGENCYSPEEDUPCOUNT_FIELD_NUMBER = 10;
    private int emergencySpeedUpCount_;
    /**
     * <code>optional int32 emergencySpeedUpCount = 10;</code>
     *
     * <pre>
     *紧急加速次数
     * </pre>
     */
    public boolean hasEmergencySpeedUpCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 emergencySpeedUpCount = 10;</code>
     *
     * <pre>
     *紧急加速次数
     * </pre>
     */
    public int getEmergencySpeedUpCount() {
      return emergencySpeedUpCount_;
    }

    // optional int32 averageSpeed = 11;
    public static final int AVERAGESPEED_FIELD_NUMBER = 11;
    private int averageSpeed_;
    /**
     * <code>optional int32 averageSpeed = 11;</code>
     *
     * <pre>
     *平均速度（单位：0.1千米/小时）
     * </pre>
     */
    public boolean hasAverageSpeed() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 averageSpeed = 11;</code>
     *
     * <pre>
     *平均速度（单位：0.1千米/小时）
     * </pre>
     */
    public int getAverageSpeed() {
      return averageSpeed_;
    }

    // optional int32 maxWaterTemperature = 12;
    public static final int MAXWATERTEMPERATURE_FIELD_NUMBER = 12;
    private int maxWaterTemperature_;
    /**
     * <code>optional int32 maxWaterTemperature = 12;</code>
     *
     * <pre>
     *发动机最高水温（单位：℃）
     * </pre>
     */
    public boolean hasMaxWaterTemperature() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 maxWaterTemperature = 12;</code>
     *
     * <pre>
     *发动机最高水温（单位：℃）
     * </pre>
     */
    public int getMaxWaterTemperature() {
      return maxWaterTemperature_;
    }

    // optional int32 maxRotationSpeed = 13;
    public static final int MAXROTATIONSPEED_FIELD_NUMBER = 13;
    private int maxRotationSpeed_;
    /**
     * <code>optional int32 maxRotationSpeed = 13;</code>
     *
     * <pre>
     *发动机最高工作转速（单位：转/分）
     * </pre>
     */
    public boolean hasMaxRotationSpeed() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 maxRotationSpeed = 13;</code>
     *
     * <pre>
     *发动机最高工作转速（单位：转/分）
     * </pre>
     */
    public int getMaxRotationSpeed() {
      return maxRotationSpeed_;
    }

    // optional int32 voltage = 14;
    public static final int VOLTAGE_FIELD_NUMBER = 14;
    private int voltage_;
    /**
     * <code>optional int32 voltage = 14;</code>
     *
     * <pre>
     *电压值（单位：0.1V）
     * </pre>
     */
    public boolean hasVoltage() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 voltage = 14;</code>
     *
     * <pre>
     *电压值（单位：0.1V）
     * </pre>
     */
    public int getVoltage() {
      return voltage_;
    }

    // optional int32 totalOil = 15;
    public static final int TOTALOIL_FIELD_NUMBER = 15;
    private int totalOil_;
    /**
     * <code>optional int32 totalOil = 15;</code>
     *
     * <pre>
     *总油耗（单位：0.01升）
     * </pre>
     */
    public boolean hasTotalOil() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 totalOil = 15;</code>
     *
     * <pre>
     *总油耗（单位：0.01升）
     * </pre>
     */
    public int getTotalOil() {
      return totalOil_;
    }

    // optional int32 averageOil = 16;
    public static final int AVERAGEOIL_FIELD_NUMBER = 16;
    private int averageOil_;
    /**
     * <code>optional int32 averageOil = 16;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public boolean hasAverageOil() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 averageOil = 16;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public int getAverageOil() {
      return averageOil_;
    }

    // optional int32 tiredDrivingTime = 17;
    public static final int TIREDDRIVINGTIME_FIELD_NUMBER = 17;
    private int tiredDrivingTime_;
    /**
     * <code>optional int32 tiredDrivingTime = 17;</code>
     *
     * <pre>
     *疲劳驾驶时长（单位:秒）
     * </pre>
     */
    public boolean hasTiredDrivingTime() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 tiredDrivingTime = 17;</code>
     *
     * <pre>
     *疲劳驾驶时长（单位:秒）
     * </pre>
     */
    public int getTiredDrivingTime() {
      return tiredDrivingTime_;
    }

    // optional int32 serialNumber = 18;
    public static final int SERIALNUMBER_FIELD_NUMBER = 18;
    private int serialNumber_;
    /**
     * <code>optional int32 serialNumber = 18;</code>
     *
     * <pre>
     *行程序号（0-255）
     * </pre>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 serialNumber = 18;</code>
     *
     * <pre>
     *行程序号（0-255）
     * </pre>
     */
    public int getSerialNumber() {
      return serialNumber_;
    }

    // optional int32 averageRotationSpeed = 19;
    public static final int AVERAGEROTATIONSPEED_FIELD_NUMBER = 19;
    private int averageRotationSpeed_;
    /**
     * <code>optional int32 averageRotationSpeed = 19;</code>
     *
     * <pre>
     *平均转速（单位：转/分）
     * </pre>
     */
    public boolean hasAverageRotationSpeed() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 averageRotationSpeed = 19;</code>
     *
     * <pre>
     *平均转速（单位：转/分）
     * </pre>
     */
    public int getAverageRotationSpeed() {
      return averageRotationSpeed_;
    }

    // optional int32 maxOil = 20;
    public static final int MAXOIL_FIELD_NUMBER = 20;
    private int maxOil_;
    /**
     * <code>optional int32 maxOil = 20;</code>
     *
     * <pre>
     *最高瞬时油耗（单位：0.01升/百公里）
     * </pre>
     */
    public boolean hasMaxOil() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 maxOil = 20;</code>
     *
     * <pre>
     *最高瞬时油耗（单位：0.01升/百公里）
     * </pre>
     */
    public int getMaxOil() {
      return maxOil_;
    }

    // optional int32 idleTime = 21;
    public static final int IDLETIME_FIELD_NUMBER = 21;
    private int idleTime_;
    /**
     * <code>optional int32 idleTime = 21;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    public boolean hasIdleTime() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 idleTime = 21;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    public int getIdleTime() {
      return idleTime_;
    }

    // optional .gboss.GpsBaseInfo startGps = 22;
    public static final int STARTGPS_FIELD_NUMBER = 22;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo startGps_;
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public boolean hasStartGps() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getStartGps() {
      return startGps_;
    }
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder() {
      return startGps_;
    }

    // optional .gboss.GpsReferPosition startReferPos = 23;
    public static final int STARTREFERPOS_FIELD_NUMBER = 23;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition startReferPos_;
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public boolean hasStartReferPos() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getStartReferPos() {
      return startReferPos_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartReferPosOrBuilder() {
      return startReferPos_;
    }

    // optional .gboss.GpsBaseInfo endGps = 24;
    public static final int ENDGPS_FIELD_NUMBER = 24;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo endGps_;
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    public boolean hasEndGps() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getEndGps() {
      return endGps_;
    }
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getEndGpsOrBuilder() {
      return endGps_;
    }

    // optional .gboss.GpsReferPosition endReferPos = 25;
    public static final int ENDREFERPOS_FIELD_NUMBER = 25;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition endReferPos_;
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    public boolean hasEndReferPos() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getEndReferPos() {
      return endReferPos_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getEndReferPosOrBuilder() {
      return endReferPos_;
    }

    // optional int32 history = 26;
    public static final int HISTORY_FIELD_NUMBER = 26;
    private int history_;
    /**
     * <code>optional int32 history = 26;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public boolean hasHistory() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 history = 26;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public int getHistory() {
      return history_;
    }

    // optional int32 quickTurnCount = 27;
    public static final int QUICKTURNCOUNT_FIELD_NUMBER = 27;
    private int quickTurnCount_;
    /**
     * <code>optional int32 quickTurnCount = 27;</code>
     *
     * <pre>
     *急转弯次数
     * </pre>
     */
    public boolean hasQuickTurnCount() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 quickTurnCount = 27;</code>
     *
     * <pre>
     *急转弯次数
     * </pre>
     */
    public int getQuickTurnCount() {
      return quickTurnCount_;
    }

    // optional int32 overSpeedCount = 28;
    public static final int OVERSPEEDCOUNT_FIELD_NUMBER = 28;
    private int overSpeedCount_;
    /**
     * <code>optional int32 overSpeedCount = 28;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    public boolean hasOverSpeedCount() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 overSpeedCount = 28;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    public int getOverSpeedCount() {
      return overSpeedCount_;
    }

    // optional int32 BrakeCount = 29;
    public static final int BRAKECOUNT_FIELD_NUMBER = 29;
    private int brakeCount_;
    /**
     * <code>optional int32 BrakeCount = 29;</code>
     *
     * <pre>
     *刹车总数
     * </pre>
     */
    public boolean hasBrakeCount() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 BrakeCount = 29;</code>
     *
     * <pre>
     *刹车总数
     * </pre>
     */
    public int getBrakeCount() {
      return brakeCount_;
    }

    // optional int32 maxThrottleOpen = 30;
    public static final int MAXTHROTTLEOPEN_FIELD_NUMBER = 30;
    private int maxThrottleOpen_;
    /**
     * <code>optional int32 maxThrottleOpen = 30;</code>
     *
     * <pre>
     *本行程最大油门开度（百分比）
     * </pre>
     */
    public boolean hasMaxThrottleOpen() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 maxThrottleOpen = 30;</code>
     *
     * <pre>
     *本行程最大油门开度（百分比）
     * </pre>
     */
    public int getMaxThrottleOpen() {
      return maxThrottleOpen_;
    }

    // optional int32 averageThrottleOpen = 31;
    public static final int AVERAGETHROTTLEOPEN_FIELD_NUMBER = 31;
    private int averageThrottleOpen_;
    /**
     * <code>optional int32 averageThrottleOpen = 31;</code>
     *
     * <pre>
     *本行程平均油门开度（百分比）
     * </pre>
     */
    public boolean hasAverageThrottleOpen() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 averageThrottleOpen = 31;</code>
     *
     * <pre>
     *本行程平均油门开度（百分比）
     * </pre>
     */
    public int getAverageThrottleOpen() {
      return averageThrottleOpen_;
    }

    // optional .gboss.PengaodaTravelInfo padInfo = 32;
    public static final int PADINFO_FIELD_NUMBER = 32;
    private cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo padInfo_;
    /**
     * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
     *
     * <pre>
     *鹏奥达行程附加信息
     * </pre>
     */
    public boolean hasPadInfo() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
     *
     * <pre>
     *鹏奥达行程附加信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo getPadInfo() {
      return padInfo_;
    }
    /**
     * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
     *
     * <pre>
     *鹏奥达行程附加信息
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfoOrBuilder getPadInfoOrBuilder() {
      return padInfo_;
    }

    private void initFields() {
      callLetter_ = "";
      startTime_ = 0L;
      endTime_ = 0L;
      distance_ = 0;
      maxSpeed_ = 0;
      overSpeedTime_ = 0;
      quickBrakeCount_ = 0;
      emergencyBrakeCount_ = 0;
      quickSpeedUpCount_ = 0;
      emergencySpeedUpCount_ = 0;
      averageSpeed_ = 0;
      maxWaterTemperature_ = 0;
      maxRotationSpeed_ = 0;
      voltage_ = 0;
      totalOil_ = 0;
      averageOil_ = 0;
      tiredDrivingTime_ = 0;
      serialNumber_ = 0;
      averageRotationSpeed_ = 0;
      maxOil_ = 0;
      idleTime_ = 0;
      startGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      startReferPos_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      endGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      endReferPos_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      history_ = 0;
      quickTurnCount_ = 0;
      overSpeedCount_ = 0;
      brakeCount_ = 0;
      maxThrottleOpen_ = 0;
      averageThrottleOpen_ = 0;
      padInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasStartGps()) {
        if (!getStartGps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStartReferPos()) {
        if (!getStartReferPos().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEndGps()) {
        if (!getEndGps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEndReferPos()) {
        if (!getEndReferPos().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, endTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, distance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, maxSpeed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, overSpeedTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, quickBrakeCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, emergencyBrakeCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, quickSpeedUpCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, emergencySpeedUpCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, averageSpeed_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, maxWaterTemperature_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, maxRotationSpeed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, voltage_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, totalOil_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, averageOil_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, tiredDrivingTime_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, serialNumber_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, averageRotationSpeed_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, maxOil_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, idleTime_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(22, startGps_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(23, startReferPos_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(24, endGps_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(25, endReferPos_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(26, history_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(27, quickTurnCount_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(28, overSpeedCount_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, brakeCount_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(30, maxThrottleOpen_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(31, averageThrottleOpen_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(32, padInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, endTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, distance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxSpeed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, overSpeedTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, quickBrakeCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, emergencyBrakeCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, quickSpeedUpCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, emergencySpeedUpCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, averageSpeed_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, maxWaterTemperature_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, maxRotationSpeed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, voltage_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, totalOil_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, averageOil_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, tiredDrivingTime_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, serialNumber_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, averageRotationSpeed_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, maxOil_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, idleTime_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, startGps_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, startReferPos_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, endGps_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, endReferPos_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, history_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, quickTurnCount_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, overSpeedCount_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, brakeCount_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, maxThrottleOpen_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, averageThrottleOpen_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, padInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.TravelInfo}
     *
     * <pre>
     **
     *  行程信息(TravelInfo)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.TravelInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_TravelInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_TravelInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStartGpsFieldBuilder();
          getStartReferPosFieldBuilder();
          getEndGpsFieldBuilder();
          getEndReferPosFieldBuilder();
          getPadInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        overSpeedTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        quickBrakeCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        emergencyBrakeCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        quickSpeedUpCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        emergencySpeedUpCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        averageSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        maxWaterTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        maxRotationSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        voltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        totalOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        averageOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        tiredDrivingTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        serialNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        averageRotationSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        maxOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        idleTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        if (startGpsBuilder_ == null) {
          startGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          startGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        if (startReferPosBuilder_ == null) {
          startReferPos_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          startReferPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        if (endGpsBuilder_ == null) {
          endGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          endGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        if (endReferPosBuilder_ == null) {
          endReferPos_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          endReferPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        history_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        quickTurnCount_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        overSpeedCount_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        brakeCount_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        maxThrottleOpen_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        averageThrottleOpen_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        if (padInfoBuilder_ == null) {
          padInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.getDefaultInstance();
        } else {
          padInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_TravelInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.distance_ = distance_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxSpeed_ = maxSpeed_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.overSpeedTime_ = overSpeedTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.quickBrakeCount_ = quickBrakeCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.emergencyBrakeCount_ = emergencyBrakeCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.quickSpeedUpCount_ = quickSpeedUpCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.emergencySpeedUpCount_ = emergencySpeedUpCount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.averageSpeed_ = averageSpeed_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.maxWaterTemperature_ = maxWaterTemperature_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.maxRotationSpeed_ = maxRotationSpeed_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.voltage_ = voltage_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.totalOil_ = totalOil_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.averageOil_ = averageOil_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tiredDrivingTime_ = tiredDrivingTime_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.averageRotationSpeed_ = averageRotationSpeed_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.maxOil_ = maxOil_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.idleTime_ = idleTime_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (startGpsBuilder_ == null) {
          result.startGps_ = startGps_;
        } else {
          result.startGps_ = startGpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (startReferPosBuilder_ == null) {
          result.startReferPos_ = startReferPos_;
        } else {
          result.startReferPos_ = startReferPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (endGpsBuilder_ == null) {
          result.endGps_ = endGps_;
        } else {
          result.endGps_ = endGpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        if (endReferPosBuilder_ == null) {
          result.endReferPos_ = endReferPos_;
        } else {
          result.endReferPos_ = endReferPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.history_ = history_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.quickTurnCount_ = quickTurnCount_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.overSpeedCount_ = overSpeedCount_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.brakeCount_ = brakeCount_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.maxThrottleOpen_ = maxThrottleOpen_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.averageThrottleOpen_ = averageThrottleOpen_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        if (padInfoBuilder_ == null) {
          result.padInfo_ = padInfo_;
        } else {
          result.padInfo_ = padInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasMaxSpeed()) {
          setMaxSpeed(other.getMaxSpeed());
        }
        if (other.hasOverSpeedTime()) {
          setOverSpeedTime(other.getOverSpeedTime());
        }
        if (other.hasQuickBrakeCount()) {
          setQuickBrakeCount(other.getQuickBrakeCount());
        }
        if (other.hasEmergencyBrakeCount()) {
          setEmergencyBrakeCount(other.getEmergencyBrakeCount());
        }
        if (other.hasQuickSpeedUpCount()) {
          setQuickSpeedUpCount(other.getQuickSpeedUpCount());
        }
        if (other.hasEmergencySpeedUpCount()) {
          setEmergencySpeedUpCount(other.getEmergencySpeedUpCount());
        }
        if (other.hasAverageSpeed()) {
          setAverageSpeed(other.getAverageSpeed());
        }
        if (other.hasMaxWaterTemperature()) {
          setMaxWaterTemperature(other.getMaxWaterTemperature());
        }
        if (other.hasMaxRotationSpeed()) {
          setMaxRotationSpeed(other.getMaxRotationSpeed());
        }
        if (other.hasVoltage()) {
          setVoltage(other.getVoltage());
        }
        if (other.hasTotalOil()) {
          setTotalOil(other.getTotalOil());
        }
        if (other.hasAverageOil()) {
          setAverageOil(other.getAverageOil());
        }
        if (other.hasTiredDrivingTime()) {
          setTiredDrivingTime(other.getTiredDrivingTime());
        }
        if (other.hasSerialNumber()) {
          setSerialNumber(other.getSerialNumber());
        }
        if (other.hasAverageRotationSpeed()) {
          setAverageRotationSpeed(other.getAverageRotationSpeed());
        }
        if (other.hasMaxOil()) {
          setMaxOil(other.getMaxOil());
        }
        if (other.hasIdleTime()) {
          setIdleTime(other.getIdleTime());
        }
        if (other.hasStartGps()) {
          mergeStartGps(other.getStartGps());
        }
        if (other.hasStartReferPos()) {
          mergeStartReferPos(other.getStartReferPos());
        }
        if (other.hasEndGps()) {
          mergeEndGps(other.getEndGps());
        }
        if (other.hasEndReferPos()) {
          mergeEndReferPos(other.getEndReferPos());
        }
        if (other.hasHistory()) {
          setHistory(other.getHistory());
        }
        if (other.hasQuickTurnCount()) {
          setQuickTurnCount(other.getQuickTurnCount());
        }
        if (other.hasOverSpeedCount()) {
          setOverSpeedCount(other.getOverSpeedCount());
        }
        if (other.hasBrakeCount()) {
          setBrakeCount(other.getBrakeCount());
        }
        if (other.hasMaxThrottleOpen()) {
          setMaxThrottleOpen(other.getMaxThrottleOpen());
        }
        if (other.hasAverageThrottleOpen()) {
          setAverageThrottleOpen(other.getAverageThrottleOpen());
        }
        if (other.hasPadInfo()) {
          mergePadInfo(other.getPadInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasEndTime()) {
          
          return false;
        }
        if (hasStartGps()) {
          if (!getStartGps().isInitialized()) {
            
            return false;
          }
        }
        if (hasStartReferPos()) {
          if (!getStartReferPos().isInitialized()) {
            
            return false;
          }
        }
        if (hasEndGps()) {
          if (!getEndGps().isInitialized()) {
            
            return false;
          }
        }
        if (hasEndReferPos()) {
          if (!getEndReferPos().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.TravelInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required int64 startTime = 2;
      private long startTime_ ;
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000002;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      // required int64 endTime = 3;
      private long endTime_ ;
      /**
       * <code>required int64 endTime = 3;</code>
       *
       * <pre>
       *结束时间(如果是行程开始，则为0)
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 endTime = 3;</code>
       *
       * <pre>
       *结束时间(如果是行程开始，则为0)
       * </pre>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>required int64 endTime = 3;</code>
       *
       * <pre>
       *结束时间(如果是行程开始，则为0)
       * </pre>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000004;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 endTime = 3;</code>
       *
       * <pre>
       *结束时间(如果是行程开始，则为0)
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 distance = 4;
      private int distance_ ;
      /**
       * <code>optional int32 distance = 4;</code>
       *
       * <pre>
       *里程（单位：米）
       * </pre>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 distance = 4;</code>
       *
       * <pre>
       *里程（单位：米）
       * </pre>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <code>optional int32 distance = 4;</code>
       *
       * <pre>
       *里程（单位：米）
       * </pre>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000008;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 distance = 4;</code>
       *
       * <pre>
       *里程（单位：米）
       * </pre>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000008);
        distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxSpeed = 5;
      private int maxSpeed_ ;
      /**
       * <code>optional int32 maxSpeed = 5;</code>
       *
       * <pre>
       *最大速度（单位：0.1千米/小时）
       * </pre>
       */
      public boolean hasMaxSpeed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 maxSpeed = 5;</code>
       *
       * <pre>
       *最大速度（单位：0.1千米/小时）
       * </pre>
       */
      public int getMaxSpeed() {
        return maxSpeed_;
      }
      /**
       * <code>optional int32 maxSpeed = 5;</code>
       *
       * <pre>
       *最大速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder setMaxSpeed(int value) {
        bitField0_ |= 0x00000010;
        maxSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxSpeed = 5;</code>
       *
       * <pre>
       *最大速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder clearMaxSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 overSpeedTime = 6;
      private int overSpeedTime_ ;
      /**
       * <code>optional int32 overSpeedTime = 6;</code>
       *
       * <pre>
       *超速时长（单位:秒）
       * </pre>
       */
      public boolean hasOverSpeedTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 overSpeedTime = 6;</code>
       *
       * <pre>
       *超速时长（单位:秒）
       * </pre>
       */
      public int getOverSpeedTime() {
        return overSpeedTime_;
      }
      /**
       * <code>optional int32 overSpeedTime = 6;</code>
       *
       * <pre>
       *超速时长（单位:秒）
       * </pre>
       */
      public Builder setOverSpeedTime(int value) {
        bitField0_ |= 0x00000020;
        overSpeedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 overSpeedTime = 6;</code>
       *
       * <pre>
       *超速时长（单位:秒）
       * </pre>
       */
      public Builder clearOverSpeedTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        overSpeedTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quickBrakeCount = 7;
      private int quickBrakeCount_ ;
      /**
       * <code>optional int32 quickBrakeCount = 7;</code>
       *
       * <pre>
       *急刹车次数
       * </pre>
       */
      public boolean hasQuickBrakeCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 quickBrakeCount = 7;</code>
       *
       * <pre>
       *急刹车次数
       * </pre>
       */
      public int getQuickBrakeCount() {
        return quickBrakeCount_;
      }
      /**
       * <code>optional int32 quickBrakeCount = 7;</code>
       *
       * <pre>
       *急刹车次数
       * </pre>
       */
      public Builder setQuickBrakeCount(int value) {
        bitField0_ |= 0x00000040;
        quickBrakeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quickBrakeCount = 7;</code>
       *
       * <pre>
       *急刹车次数
       * </pre>
       */
      public Builder clearQuickBrakeCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        quickBrakeCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 emergencyBrakeCount = 8;
      private int emergencyBrakeCount_ ;
      /**
       * <code>optional int32 emergencyBrakeCount = 8;</code>
       *
       * <pre>
       *紧急刹车次数
       * </pre>
       */
      public boolean hasEmergencyBrakeCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 emergencyBrakeCount = 8;</code>
       *
       * <pre>
       *紧急刹车次数
       * </pre>
       */
      public int getEmergencyBrakeCount() {
        return emergencyBrakeCount_;
      }
      /**
       * <code>optional int32 emergencyBrakeCount = 8;</code>
       *
       * <pre>
       *紧急刹车次数
       * </pre>
       */
      public Builder setEmergencyBrakeCount(int value) {
        bitField0_ |= 0x00000080;
        emergencyBrakeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 emergencyBrakeCount = 8;</code>
       *
       * <pre>
       *紧急刹车次数
       * </pre>
       */
      public Builder clearEmergencyBrakeCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        emergencyBrakeCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quickSpeedUpCount = 9;
      private int quickSpeedUpCount_ ;
      /**
       * <code>optional int32 quickSpeedUpCount = 9;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public boolean hasQuickSpeedUpCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 quickSpeedUpCount = 9;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public int getQuickSpeedUpCount() {
        return quickSpeedUpCount_;
      }
      /**
       * <code>optional int32 quickSpeedUpCount = 9;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public Builder setQuickSpeedUpCount(int value) {
        bitField0_ |= 0x00000100;
        quickSpeedUpCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quickSpeedUpCount = 9;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public Builder clearQuickSpeedUpCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        quickSpeedUpCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 emergencySpeedUpCount = 10;
      private int emergencySpeedUpCount_ ;
      /**
       * <code>optional int32 emergencySpeedUpCount = 10;</code>
       *
       * <pre>
       *紧急加速次数
       * </pre>
       */
      public boolean hasEmergencySpeedUpCount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 emergencySpeedUpCount = 10;</code>
       *
       * <pre>
       *紧急加速次数
       * </pre>
       */
      public int getEmergencySpeedUpCount() {
        return emergencySpeedUpCount_;
      }
      /**
       * <code>optional int32 emergencySpeedUpCount = 10;</code>
       *
       * <pre>
       *紧急加速次数
       * </pre>
       */
      public Builder setEmergencySpeedUpCount(int value) {
        bitField0_ |= 0x00000200;
        emergencySpeedUpCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 emergencySpeedUpCount = 10;</code>
       *
       * <pre>
       *紧急加速次数
       * </pre>
       */
      public Builder clearEmergencySpeedUpCount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        emergencySpeedUpCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageSpeed = 11;
      private int averageSpeed_ ;
      /**
       * <code>optional int32 averageSpeed = 11;</code>
       *
       * <pre>
       *平均速度（单位：0.1千米/小时）
       * </pre>
       */
      public boolean hasAverageSpeed() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 averageSpeed = 11;</code>
       *
       * <pre>
       *平均速度（单位：0.1千米/小时）
       * </pre>
       */
      public int getAverageSpeed() {
        return averageSpeed_;
      }
      /**
       * <code>optional int32 averageSpeed = 11;</code>
       *
       * <pre>
       *平均速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder setAverageSpeed(int value) {
        bitField0_ |= 0x00000400;
        averageSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageSpeed = 11;</code>
       *
       * <pre>
       *平均速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder clearAverageSpeed() {
        bitField0_ = (bitField0_ & ~0x00000400);
        averageSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxWaterTemperature = 12;
      private int maxWaterTemperature_ ;
      /**
       * <code>optional int32 maxWaterTemperature = 12;</code>
       *
       * <pre>
       *发动机最高水温（单位：℃）
       * </pre>
       */
      public boolean hasMaxWaterTemperature() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 maxWaterTemperature = 12;</code>
       *
       * <pre>
       *发动机最高水温（单位：℃）
       * </pre>
       */
      public int getMaxWaterTemperature() {
        return maxWaterTemperature_;
      }
      /**
       * <code>optional int32 maxWaterTemperature = 12;</code>
       *
       * <pre>
       *发动机最高水温（单位：℃）
       * </pre>
       */
      public Builder setMaxWaterTemperature(int value) {
        bitField0_ |= 0x00000800;
        maxWaterTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxWaterTemperature = 12;</code>
       *
       * <pre>
       *发动机最高水温（单位：℃）
       * </pre>
       */
      public Builder clearMaxWaterTemperature() {
        bitField0_ = (bitField0_ & ~0x00000800);
        maxWaterTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxRotationSpeed = 13;
      private int maxRotationSpeed_ ;
      /**
       * <code>optional int32 maxRotationSpeed = 13;</code>
       *
       * <pre>
       *发动机最高工作转速（单位：转/分）
       * </pre>
       */
      public boolean hasMaxRotationSpeed() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 maxRotationSpeed = 13;</code>
       *
       * <pre>
       *发动机最高工作转速（单位：转/分）
       * </pre>
       */
      public int getMaxRotationSpeed() {
        return maxRotationSpeed_;
      }
      /**
       * <code>optional int32 maxRotationSpeed = 13;</code>
       *
       * <pre>
       *发动机最高工作转速（单位：转/分）
       * </pre>
       */
      public Builder setMaxRotationSpeed(int value) {
        bitField0_ |= 0x00001000;
        maxRotationSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxRotationSpeed = 13;</code>
       *
       * <pre>
       *发动机最高工作转速（单位：转/分）
       * </pre>
       */
      public Builder clearMaxRotationSpeed() {
        bitField0_ = (bitField0_ & ~0x00001000);
        maxRotationSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 voltage = 14;
      private int voltage_ ;
      /**
       * <code>optional int32 voltage = 14;</code>
       *
       * <pre>
       *电压值（单位：0.1V）
       * </pre>
       */
      public boolean hasVoltage() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 voltage = 14;</code>
       *
       * <pre>
       *电压值（单位：0.1V）
       * </pre>
       */
      public int getVoltage() {
        return voltage_;
      }
      /**
       * <code>optional int32 voltage = 14;</code>
       *
       * <pre>
       *电压值（单位：0.1V）
       * </pre>
       */
      public Builder setVoltage(int value) {
        bitField0_ |= 0x00002000;
        voltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 voltage = 14;</code>
       *
       * <pre>
       *电压值（单位：0.1V）
       * </pre>
       */
      public Builder clearVoltage() {
        bitField0_ = (bitField0_ & ~0x00002000);
        voltage_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalOil = 15;
      private int totalOil_ ;
      /**
       * <code>optional int32 totalOil = 15;</code>
       *
       * <pre>
       *总油耗（单位：0.01升）
       * </pre>
       */
      public boolean hasTotalOil() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 totalOil = 15;</code>
       *
       * <pre>
       *总油耗（单位：0.01升）
       * </pre>
       */
      public int getTotalOil() {
        return totalOil_;
      }
      /**
       * <code>optional int32 totalOil = 15;</code>
       *
       * <pre>
       *总油耗（单位：0.01升）
       * </pre>
       */
      public Builder setTotalOil(int value) {
        bitField0_ |= 0x00004000;
        totalOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalOil = 15;</code>
       *
       * <pre>
       *总油耗（单位：0.01升）
       * </pre>
       */
      public Builder clearTotalOil() {
        bitField0_ = (bitField0_ & ~0x00004000);
        totalOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageOil = 16;
      private int averageOil_ ;
      /**
       * <code>optional int32 averageOil = 16;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public boolean hasAverageOil() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 averageOil = 16;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public int getAverageOil() {
        return averageOil_;
      }
      /**
       * <code>optional int32 averageOil = 16;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder setAverageOil(int value) {
        bitField0_ |= 0x00008000;
        averageOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageOil = 16;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder clearAverageOil() {
        bitField0_ = (bitField0_ & ~0x00008000);
        averageOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tiredDrivingTime = 17;
      private int tiredDrivingTime_ ;
      /**
       * <code>optional int32 tiredDrivingTime = 17;</code>
       *
       * <pre>
       *疲劳驾驶时长（单位:秒）
       * </pre>
       */
      public boolean hasTiredDrivingTime() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 tiredDrivingTime = 17;</code>
       *
       * <pre>
       *疲劳驾驶时长（单位:秒）
       * </pre>
       */
      public int getTiredDrivingTime() {
        return tiredDrivingTime_;
      }
      /**
       * <code>optional int32 tiredDrivingTime = 17;</code>
       *
       * <pre>
       *疲劳驾驶时长（单位:秒）
       * </pre>
       */
      public Builder setTiredDrivingTime(int value) {
        bitField0_ |= 0x00010000;
        tiredDrivingTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tiredDrivingTime = 17;</code>
       *
       * <pre>
       *疲劳驾驶时长（单位:秒）
       * </pre>
       */
      public Builder clearTiredDrivingTime() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tiredDrivingTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 serialNumber = 18;
      private int serialNumber_ ;
      /**
       * <code>optional int32 serialNumber = 18;</code>
       *
       * <pre>
       *行程序号（0-255）
       * </pre>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 serialNumber = 18;</code>
       *
       * <pre>
       *行程序号（0-255）
       * </pre>
       */
      public int getSerialNumber() {
        return serialNumber_;
      }
      /**
       * <code>optional int32 serialNumber = 18;</code>
       *
       * <pre>
       *行程序号（0-255）
       * </pre>
       */
      public Builder setSerialNumber(int value) {
        bitField0_ |= 0x00020000;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 serialNumber = 18;</code>
       *
       * <pre>
       *行程序号（0-255）
       * </pre>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00020000);
        serialNumber_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageRotationSpeed = 19;
      private int averageRotationSpeed_ ;
      /**
       * <code>optional int32 averageRotationSpeed = 19;</code>
       *
       * <pre>
       *平均转速（单位：转/分）
       * </pre>
       */
      public boolean hasAverageRotationSpeed() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 averageRotationSpeed = 19;</code>
       *
       * <pre>
       *平均转速（单位：转/分）
       * </pre>
       */
      public int getAverageRotationSpeed() {
        return averageRotationSpeed_;
      }
      /**
       * <code>optional int32 averageRotationSpeed = 19;</code>
       *
       * <pre>
       *平均转速（单位：转/分）
       * </pre>
       */
      public Builder setAverageRotationSpeed(int value) {
        bitField0_ |= 0x00040000;
        averageRotationSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageRotationSpeed = 19;</code>
       *
       * <pre>
       *平均转速（单位：转/分）
       * </pre>
       */
      public Builder clearAverageRotationSpeed() {
        bitField0_ = (bitField0_ & ~0x00040000);
        averageRotationSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxOil = 20;
      private int maxOil_ ;
      /**
       * <code>optional int32 maxOil = 20;</code>
       *
       * <pre>
       *最高瞬时油耗（单位：0.01升/百公里）
       * </pre>
       */
      public boolean hasMaxOil() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 maxOil = 20;</code>
       *
       * <pre>
       *最高瞬时油耗（单位：0.01升/百公里）
       * </pre>
       */
      public int getMaxOil() {
        return maxOil_;
      }
      /**
       * <code>optional int32 maxOil = 20;</code>
       *
       * <pre>
       *最高瞬时油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder setMaxOil(int value) {
        bitField0_ |= 0x00080000;
        maxOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxOil = 20;</code>
       *
       * <pre>
       *最高瞬时油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder clearMaxOil() {
        bitField0_ = (bitField0_ & ~0x00080000);
        maxOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 idleTime = 21;
      private int idleTime_ ;
      /**
       * <code>optional int32 idleTime = 21;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public boolean hasIdleTime() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 idleTime = 21;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public int getIdleTime() {
        return idleTime_;
      }
      /**
       * <code>optional int32 idleTime = 21;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public Builder setIdleTime(int value) {
        bitField0_ |= 0x00100000;
        idleTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 idleTime = 21;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public Builder clearIdleTime() {
        bitField0_ = (bitField0_ & ~0x00100000);
        idleTime_ = 0;
        onChanged();
        return this;
      }

      // optional .gboss.GpsBaseInfo startGps = 22;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo startGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> startGpsBuilder_;
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public boolean hasStartGps() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getStartGps() {
        if (startGpsBuilder_ == null) {
          return startGps_;
        } else {
          return startGpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setStartGps(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (startGpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startGps_ = value;
          onChanged();
        } else {
          startGpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setStartGps(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (startGpsBuilder_ == null) {
          startGps_ = builderForValue.build();
          onChanged();
        } else {
          startGpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder mergeStartGps(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (startGpsBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              startGps_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            startGps_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.newBuilder(startGps_).mergeFrom(value).buildPartial();
          } else {
            startGps_ = value;
          }
          onChanged();
        } else {
          startGpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder clearStartGps() {
        if (startGpsBuilder_ == null) {
          startGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          startGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder getStartGpsBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getStartGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder() {
        if (startGpsBuilder_ != null) {
          return startGpsBuilder_.getMessageOrBuilder();
        } else {
          return startGps_;
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getStartGpsFieldBuilder() {
        if (startGpsBuilder_ == null) {
          startGpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  startGps_,
                  getParentForChildren(),
                  isClean());
          startGps_ = null;
        }
        return startGpsBuilder_;
      }

      // optional .gboss.GpsReferPosition startReferPos = 23;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition startReferPos_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> startReferPosBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public boolean hasStartReferPos() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getStartReferPos() {
        if (startReferPosBuilder_ == null) {
          return startReferPos_;
        } else {
          return startReferPosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setStartReferPos(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (startReferPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startReferPos_ = value;
          onChanged();
        } else {
          startReferPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setStartReferPos(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (startReferPosBuilder_ == null) {
          startReferPos_ = builderForValue.build();
          onChanged();
        } else {
          startReferPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder mergeStartReferPos(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (startReferPosBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              startReferPos_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            startReferPos_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.newBuilder(startReferPos_).mergeFrom(value).buildPartial();
          } else {
            startReferPos_ = value;
          }
          onChanged();
        } else {
          startReferPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder clearStartReferPos() {
        if (startReferPosBuilder_ == null) {
          startReferPos_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          startReferPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder getStartReferPosBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getStartReferPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartReferPosOrBuilder() {
        if (startReferPosBuilder_ != null) {
          return startReferPosBuilder_.getMessageOrBuilder();
        } else {
          return startReferPos_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getStartReferPosFieldBuilder() {
        if (startReferPosBuilder_ == null) {
          startReferPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  startReferPos_,
                  getParentForChildren(),
                  isClean());
          startReferPos_ = null;
        }
        return startReferPosBuilder_;
      }

      // optional .gboss.GpsBaseInfo endGps = 24;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo endGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> endGpsBuilder_;
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public boolean hasEndGps() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getEndGps() {
        if (endGpsBuilder_ == null) {
          return endGps_;
        } else {
          return endGpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public Builder setEndGps(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (endGpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endGps_ = value;
          onChanged();
        } else {
          endGpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public Builder setEndGps(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (endGpsBuilder_ == null) {
          endGps_ = builderForValue.build();
          onChanged();
        } else {
          endGpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public Builder mergeEndGps(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (endGpsBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000) &&
              endGps_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            endGps_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.newBuilder(endGps_).mergeFrom(value).buildPartial();
          } else {
            endGps_ = value;
          }
          onChanged();
        } else {
          endGpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public Builder clearEndGps() {
        if (endGpsBuilder_ == null) {
          endGps_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          endGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder getEndGpsBuilder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getEndGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getEndGpsOrBuilder() {
        if (endGpsBuilder_ != null) {
          return endGpsBuilder_.getMessageOrBuilder();
        } else {
          return endGps_;
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getEndGpsFieldBuilder() {
        if (endGpsBuilder_ == null) {
          endGpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  endGps_,
                  getParentForChildren(),
                  isClean());
          endGps_ = null;
        }
        return endGpsBuilder_;
      }

      // optional .gboss.GpsReferPosition endReferPos = 25;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition endReferPos_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> endReferPosBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public boolean hasEndReferPos() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getEndReferPos() {
        if (endReferPosBuilder_ == null) {
          return endReferPos_;
        } else {
          return endReferPosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public Builder setEndReferPos(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (endReferPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endReferPos_ = value;
          onChanged();
        } else {
          endReferPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public Builder setEndReferPos(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (endReferPosBuilder_ == null) {
          endReferPos_ = builderForValue.build();
          onChanged();
        } else {
          endReferPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public Builder mergeEndReferPos(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (endReferPosBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              endReferPos_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            endReferPos_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.newBuilder(endReferPos_).mergeFrom(value).buildPartial();
          } else {
            endReferPos_ = value;
          }
          onChanged();
        } else {
          endReferPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public Builder clearEndReferPos() {
        if (endReferPosBuilder_ == null) {
          endReferPos_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          endReferPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder getEndReferPosBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getEndReferPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getEndReferPosOrBuilder() {
        if (endReferPosBuilder_ != null) {
          return endReferPosBuilder_.getMessageOrBuilder();
        } else {
          return endReferPos_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义(如果是行程开始，则为空)
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getEndReferPosFieldBuilder() {
        if (endReferPosBuilder_ == null) {
          endReferPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  endReferPos_,
                  getParentForChildren(),
                  isClean());
          endReferPos_ = null;
        }
        return endReferPosBuilder_;
      }

      // optional int32 history = 26;
      private int history_ ;
      /**
       * <code>optional int32 history = 26;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public boolean hasHistory() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 history = 26;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public int getHistory() {
        return history_;
      }
      /**
       * <code>optional int32 history = 26;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder setHistory(int value) {
        bitField0_ |= 0x02000000;
        history_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 history = 26;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder clearHistory() {
        bitField0_ = (bitField0_ & ~0x02000000);
        history_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quickTurnCount = 27;
      private int quickTurnCount_ ;
      /**
       * <code>optional int32 quickTurnCount = 27;</code>
       *
       * <pre>
       *急转弯次数
       * </pre>
       */
      public boolean hasQuickTurnCount() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 quickTurnCount = 27;</code>
       *
       * <pre>
       *急转弯次数
       * </pre>
       */
      public int getQuickTurnCount() {
        return quickTurnCount_;
      }
      /**
       * <code>optional int32 quickTurnCount = 27;</code>
       *
       * <pre>
       *急转弯次数
       * </pre>
       */
      public Builder setQuickTurnCount(int value) {
        bitField0_ |= 0x04000000;
        quickTurnCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quickTurnCount = 27;</code>
       *
       * <pre>
       *急转弯次数
       * </pre>
       */
      public Builder clearQuickTurnCount() {
        bitField0_ = (bitField0_ & ~0x04000000);
        quickTurnCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 overSpeedCount = 28;
      private int overSpeedCount_ ;
      /**
       * <code>optional int32 overSpeedCount = 28;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public boolean hasOverSpeedCount() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 overSpeedCount = 28;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public int getOverSpeedCount() {
        return overSpeedCount_;
      }
      /**
       * <code>optional int32 overSpeedCount = 28;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public Builder setOverSpeedCount(int value) {
        bitField0_ |= 0x08000000;
        overSpeedCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 overSpeedCount = 28;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public Builder clearOverSpeedCount() {
        bitField0_ = (bitField0_ & ~0x08000000);
        overSpeedCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 BrakeCount = 29;
      private int brakeCount_ ;
      /**
       * <code>optional int32 BrakeCount = 29;</code>
       *
       * <pre>
       *刹车总数
       * </pre>
       */
      public boolean hasBrakeCount() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 BrakeCount = 29;</code>
       *
       * <pre>
       *刹车总数
       * </pre>
       */
      public int getBrakeCount() {
        return brakeCount_;
      }
      /**
       * <code>optional int32 BrakeCount = 29;</code>
       *
       * <pre>
       *刹车总数
       * </pre>
       */
      public Builder setBrakeCount(int value) {
        bitField0_ |= 0x10000000;
        brakeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 BrakeCount = 29;</code>
       *
       * <pre>
       *刹车总数
       * </pre>
       */
      public Builder clearBrakeCount() {
        bitField0_ = (bitField0_ & ~0x10000000);
        brakeCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxThrottleOpen = 30;
      private int maxThrottleOpen_ ;
      /**
       * <code>optional int32 maxThrottleOpen = 30;</code>
       *
       * <pre>
       *本行程最大油门开度（百分比）
       * </pre>
       */
      public boolean hasMaxThrottleOpen() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 maxThrottleOpen = 30;</code>
       *
       * <pre>
       *本行程最大油门开度（百分比）
       * </pre>
       */
      public int getMaxThrottleOpen() {
        return maxThrottleOpen_;
      }
      /**
       * <code>optional int32 maxThrottleOpen = 30;</code>
       *
       * <pre>
       *本行程最大油门开度（百分比）
       * </pre>
       */
      public Builder setMaxThrottleOpen(int value) {
        bitField0_ |= 0x20000000;
        maxThrottleOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxThrottleOpen = 30;</code>
       *
       * <pre>
       *本行程最大油门开度（百分比）
       * </pre>
       */
      public Builder clearMaxThrottleOpen() {
        bitField0_ = (bitField0_ & ~0x20000000);
        maxThrottleOpen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageThrottleOpen = 31;
      private int averageThrottleOpen_ ;
      /**
       * <code>optional int32 averageThrottleOpen = 31;</code>
       *
       * <pre>
       *本行程平均油门开度（百分比）
       * </pre>
       */
      public boolean hasAverageThrottleOpen() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 averageThrottleOpen = 31;</code>
       *
       * <pre>
       *本行程平均油门开度（百分比）
       * </pre>
       */
      public int getAverageThrottleOpen() {
        return averageThrottleOpen_;
      }
      /**
       * <code>optional int32 averageThrottleOpen = 31;</code>
       *
       * <pre>
       *本行程平均油门开度（百分比）
       * </pre>
       */
      public Builder setAverageThrottleOpen(int value) {
        bitField0_ |= 0x40000000;
        averageThrottleOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageThrottleOpen = 31;</code>
       *
       * <pre>
       *本行程平均油门开度（百分比）
       * </pre>
       */
      public Builder clearAverageThrottleOpen() {
        bitField0_ = (bitField0_ & ~0x40000000);
        averageThrottleOpen_ = 0;
        onChanged();
        return this;
      }

      // optional .gboss.PengaodaTravelInfo padInfo = 32;
      private cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo padInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfoOrBuilder> padInfoBuilder_;
      /**
       * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
       *
       * <pre>
       *鹏奥达行程附加信息
       * </pre>
       */
      public boolean hasPadInfo() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
       *
       * <pre>
       *鹏奥达行程附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo getPadInfo() {
        if (padInfoBuilder_ == null) {
          return padInfo_;
        } else {
          return padInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
       *
       * <pre>
       *鹏奥达行程附加信息
       * </pre>
       */
      public Builder setPadInfo(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo value) {
        if (padInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          padInfo_ = value;
          onChanged();
        } else {
          padInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
       *
       * <pre>
       *鹏奥达行程附加信息
       * </pre>
       */
      public Builder setPadInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.Builder builderForValue) {
        if (padInfoBuilder_ == null) {
          padInfo_ = builderForValue.build();
          onChanged();
        } else {
          padInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
       *
       * <pre>
       *鹏奥达行程附加信息
       * </pre>
       */
      public Builder mergePadInfo(cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo value) {
        if (padInfoBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000) &&
              padInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.getDefaultInstance()) {
            padInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.newBuilder(padInfo_).mergeFrom(value).buildPartial();
          } else {
            padInfo_ = value;
          }
          onChanged();
        } else {
          padInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
       *
       * <pre>
       *鹏奥达行程附加信息
       * </pre>
       */
      public Builder clearPadInfo() {
        if (padInfoBuilder_ == null) {
          padInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.getDefaultInstance();
          onChanged();
        } else {
          padInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
       *
       * <pre>
       *鹏奥达行程附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.Builder getPadInfoBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getPadInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
       *
       * <pre>
       *鹏奥达行程附加信息
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfoOrBuilder getPadInfoOrBuilder() {
        if (padInfoBuilder_ != null) {
          return padInfoBuilder_.getMessageOrBuilder();
        } else {
          return padInfo_;
        }
      }
      /**
       * <code>optional .gboss.PengaodaTravelInfo padInfo = 32;</code>
       *
       * <pre>
       *鹏奥达行程附加信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfoOrBuilder> 
          getPadInfoFieldBuilder() {
        if (padInfoBuilder_ == null) {
          padInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.PengaodaTravelInfoOrBuilder>(
                  padInfo_,
                  getParentForChildren(),
                  isClean());
          padInfo_ = null;
        }
        return padInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.TravelInfo)
    }

    static {
      defaultInstance = new TravelInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.TravelInfo)
  }

  public interface FaultDefineOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 faultType = 1;
    /**
     * <code>optional int32 faultType = 1;</code>
     *
     * <pre>
     *故障类别
     * </pre>
     */
    boolean hasFaultType();
    /**
     * <code>optional int32 faultType = 1;</code>
     *
     * <pre>
     *故障类别
     * </pre>
     */
    int getFaultType();

    // repeated string faultCode = 2;
    /**
     * <code>repeated string faultCode = 2;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    java.util.List<java.lang.String>
    getFaultCodeList();
    /**
     * <code>repeated string faultCode = 2;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    int getFaultCodeCount();
    /**
     * <code>repeated string faultCode = 2;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    java.lang.String getFaultCode(int index);
    /**
     * <code>repeated string faultCode = 2;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    com.google.protobuf.ByteString
        getFaultCodeBytes(int index);
  }
  /**
   * Protobuf type {@code gboss.FaultDefine}
   *
   * <pre>
   **
   *  模块故障信息(OBD)
   * </pre>
   */
  public static final class FaultDefine extends
      com.google.protobuf.GeneratedMessage
      implements FaultDefineOrBuilder {
    // Use FaultDefine.newBuilder() to construct.
    private FaultDefine(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FaultDefine(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FaultDefine defaultInstance;
    public static FaultDefine getDefaultInstance() {
      return defaultInstance;
    }

    public FaultDefine getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FaultDefine(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              faultType_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                faultCode_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              faultCode_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          faultCode_ = new com.google.protobuf.UnmodifiableLazyStringList(faultCode_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultDefine_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultDefine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.class, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder.class);
    }

    public static com.google.protobuf.Parser<FaultDefine> PARSER =
        new com.google.protobuf.AbstractParser<FaultDefine>() {
      public FaultDefine parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FaultDefine(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FaultDefine> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 faultType = 1;
    public static final int FAULTTYPE_FIELD_NUMBER = 1;
    private int faultType_;
    /**
     * <code>optional int32 faultType = 1;</code>
     *
     * <pre>
     *故障类别
     * </pre>
     */
    public boolean hasFaultType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 faultType = 1;</code>
     *
     * <pre>
     *故障类别
     * </pre>
     */
    public int getFaultType() {
      return faultType_;
    }

    // repeated string faultCode = 2;
    public static final int FAULTCODE_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList faultCode_;
    /**
     * <code>repeated string faultCode = 2;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    public java.util.List<java.lang.String>
        getFaultCodeList() {
      return faultCode_;
    }
    /**
     * <code>repeated string faultCode = 2;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    public int getFaultCodeCount() {
      return faultCode_.size();
    }
    /**
     * <code>repeated string faultCode = 2;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    public java.lang.String getFaultCode(int index) {
      return faultCode_.get(index);
    }
    /**
     * <code>repeated string faultCode = 2;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFaultCodeBytes(int index) {
      return faultCode_.getByteString(index);
    }

    private void initFields() {
      faultType_ = 0;
      faultCode_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, faultType_);
      }
      for (int i = 0; i < faultCode_.size(); i++) {
        output.writeBytes(2, faultCode_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, faultType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < faultCode_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(faultCode_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getFaultCodeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.FaultDefine}
     *
     * <pre>
     **
     *  模块故障信息(OBD)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultDefine_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultDefine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.class, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        faultType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        faultCode_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultDefine_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine build() {
        cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine result = new cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.faultType_ = faultType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          faultCode_ = new com.google.protobuf.UnmodifiableLazyStringList(
              faultCode_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.faultCode_ = faultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.getDefaultInstance()) return this;
        if (other.hasFaultType()) {
          setFaultType(other.getFaultType());
        }
        if (!other.faultCode_.isEmpty()) {
          if (faultCode_.isEmpty()) {
            faultCode_ = other.faultCode_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFaultCodeIsMutable();
            faultCode_.addAll(other.faultCode_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 faultType = 1;
      private int faultType_ ;
      /**
       * <code>optional int32 faultType = 1;</code>
       *
       * <pre>
       *故障类别
       * </pre>
       */
      public boolean hasFaultType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 faultType = 1;</code>
       *
       * <pre>
       *故障类别
       * </pre>
       */
      public int getFaultType() {
        return faultType_;
      }
      /**
       * <code>optional int32 faultType = 1;</code>
       *
       * <pre>
       *故障类别
       * </pre>
       */
      public Builder setFaultType(int value) {
        bitField0_ |= 0x00000001;
        faultType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 faultType = 1;</code>
       *
       * <pre>
       *故障类别
       * </pre>
       */
      public Builder clearFaultType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        faultType_ = 0;
        onChanged();
        return this;
      }

      // repeated string faultCode = 2;
      private com.google.protobuf.LazyStringList faultCode_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFaultCodeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          faultCode_ = new com.google.protobuf.LazyStringArrayList(faultCode_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string faultCode = 2;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public java.util.List<java.lang.String>
          getFaultCodeList() {
        return java.util.Collections.unmodifiableList(faultCode_);
      }
      /**
       * <code>repeated string faultCode = 2;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public int getFaultCodeCount() {
        return faultCode_.size();
      }
      /**
       * <code>repeated string faultCode = 2;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public java.lang.String getFaultCode(int index) {
        return faultCode_.get(index);
      }
      /**
       * <code>repeated string faultCode = 2;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFaultCodeBytes(int index) {
        return faultCode_.getByteString(index);
      }
      /**
       * <code>repeated string faultCode = 2;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder setFaultCode(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFaultCodeIsMutable();
        faultCode_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string faultCode = 2;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder addFaultCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFaultCodeIsMutable();
        faultCode_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string faultCode = 2;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder addAllFaultCode(
          java.lang.Iterable<java.lang.String> values) {
        ensureFaultCodeIsMutable();
        super.addAll(values, faultCode_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string faultCode = 2;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder clearFaultCode() {
        faultCode_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string faultCode = 2;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder addFaultCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFaultCodeIsMutable();
        faultCode_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.FaultDefine)
    }

    static {
      defaultInstance = new FaultDefine(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.FaultDefine)
  }

  public interface FaultInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required int64 faultTime = 2;
    /**
     * <code>required int64 faultTime = 2;</code>
     *
     * <pre>
     *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
     * </pre>
     */
    boolean hasFaultTime();
    /**
     * <code>required int64 faultTime = 2;</code>
     *
     * <pre>
     *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
     * </pre>
     */
    long getFaultTime();

    // repeated .gboss.FaultDefine faults = 3;
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine> 
        getFaultsList();
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine getFaults(int index);
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    int getFaultsCount();
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder> 
        getFaultsOrBuilderList();
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder getFaultsOrBuilder(
        int index);

    // optional int32 unitType = 4;
    /**
     * <code>optional int32 unitType = 4;</code>
     *
     * <pre>
     *终端协议类型
     * </pre>
     */
    boolean hasUnitType();
    /**
     * <code>optional int32 unitType = 4;</code>
     *
     * <pre>
     *终端协议类型
     * </pre>
     */
    int getUnitType();

    // optional int32 history = 5;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    boolean hasHistory();
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    int getHistory();
  }
  /**
   * Protobuf type {@code gboss.FaultInfo}
   */
  public static final class FaultInfo extends
      com.google.protobuf.GeneratedMessage
      implements FaultInfoOrBuilder {
    // Use FaultInfo.newBuilder() to construct.
    private FaultInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FaultInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FaultInfo defaultInstance;
    public static FaultInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FaultInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FaultInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              faultTime_ = input.readInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                faults_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine>();
                mutable_bitField0_ |= 0x00000004;
              }
              faults_.add(input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              unitType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              history_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          faults_ = java.util.Collections.unmodifiableList(faults_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FaultInfo> PARSER =
        new com.google.protobuf.AbstractParser<FaultInfo>() {
      public FaultInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FaultInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FaultInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 faultTime = 2;
    public static final int FAULTTIME_FIELD_NUMBER = 2;
    private long faultTime_;
    /**
     * <code>required int64 faultTime = 2;</code>
     *
     * <pre>
     *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
     * </pre>
     */
    public boolean hasFaultTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 faultTime = 2;</code>
     *
     * <pre>
     *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
     * </pre>
     */
    public long getFaultTime() {
      return faultTime_;
    }

    // repeated .gboss.FaultDefine faults = 3;
    public static final int FAULTS_FIELD_NUMBER = 3;
    private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine> faults_;
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine> getFaultsList() {
      return faults_;
    }
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder> 
        getFaultsOrBuilderList() {
      return faults_;
    }
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    public int getFaultsCount() {
      return faults_.size();
    }
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine getFaults(int index) {
      return faults_.get(index);
    }
    /**
     * <code>repeated .gboss.FaultDefine faults = 3;</code>
     *
     * <pre>
     *新的分类故障码
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder getFaultsOrBuilder(
        int index) {
      return faults_.get(index);
    }

    // optional int32 unitType = 4;
    public static final int UNITTYPE_FIELD_NUMBER = 4;
    private int unitType_;
    /**
     * <code>optional int32 unitType = 4;</code>
     *
     * <pre>
     *终端协议类型
     * </pre>
     */
    public boolean hasUnitType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 unitType = 4;</code>
     *
     * <pre>
     *终端协议类型
     * </pre>
     */
    public int getUnitType() {
      return unitType_;
    }

    // optional int32 history = 5;
    public static final int HISTORY_FIELD_NUMBER = 5;
    private int history_;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public boolean hasHistory() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public int getHistory() {
      return history_;
    }

    private void initFields() {
      callLetter_ = "";
      faultTime_ = 0L;
      faults_ = java.util.Collections.emptyList();
      unitType_ = 0;
      history_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFaultTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, faultTime_);
      }
      for (int i = 0; i < faults_.size(); i++) {
        output.writeMessage(3, faults_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, unitType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, history_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, faultTime_);
      }
      for (int i = 0; i < faults_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, faults_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, unitType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, history_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.FaultInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.FaultInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFaultsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        faultTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (faultsBuilder_ == null) {
          faults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          faultsBuilder_.clear();
        }
        unitType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        history_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_FaultInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.faultTime_ = faultTime_;
        if (faultsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            faults_ = java.util.Collections.unmodifiableList(faults_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.faults_ = faults_;
        } else {
          result.faults_ = faultsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.unitType_ = unitType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.history_ = history_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasFaultTime()) {
          setFaultTime(other.getFaultTime());
        }
        if (faultsBuilder_ == null) {
          if (!other.faults_.isEmpty()) {
            if (faults_.isEmpty()) {
              faults_ = other.faults_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFaultsIsMutable();
              faults_.addAll(other.faults_);
            }
            onChanged();
          }
        } else {
          if (!other.faults_.isEmpty()) {
            if (faultsBuilder_.isEmpty()) {
              faultsBuilder_.dispose();
              faultsBuilder_ = null;
              faults_ = other.faults_;
              bitField0_ = (bitField0_ & ~0x00000004);
              faultsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFaultsFieldBuilder() : null;
            } else {
              faultsBuilder_.addAllMessages(other.faults_);
            }
          }
        }
        if (other.hasUnitType()) {
          setUnitType(other.getUnitType());
        }
        if (other.hasHistory()) {
          setHistory(other.getHistory());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasFaultTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.FaultInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required int64 faultTime = 2;
      private long faultTime_ ;
      /**
       * <code>required int64 faultTime = 2;</code>
       *
       * <pre>
       *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
       * </pre>
       */
      public boolean hasFaultTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 faultTime = 2;</code>
       *
       * <pre>
       *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
       * </pre>
       */
      public long getFaultTime() {
        return faultTime_;
      }
      /**
       * <code>required int64 faultTime = 2;</code>
       *
       * <pre>
       *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder setFaultTime(long value) {
        bitField0_ |= 0x00000002;
        faultTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 faultTime = 2;</code>
       *
       * <pre>
       *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder clearFaultTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        faultTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated .gboss.FaultDefine faults = 3;
      private java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine> faults_ =
        java.util.Collections.emptyList();
      private void ensureFaultsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          faults_ = new java.util.ArrayList<cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine>(faults_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder> faultsBuilder_;

      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine> getFaultsList() {
        if (faultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(faults_);
        } else {
          return faultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public int getFaultsCount() {
        if (faultsBuilder_ == null) {
          return faults_.size();
        } else {
          return faultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine getFaults(int index) {
        if (faultsBuilder_ == null) {
          return faults_.get(index);
        } else {
          return faultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public Builder setFaults(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine value) {
        if (faultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFaultsIsMutable();
          faults_.set(index, value);
          onChanged();
        } else {
          faultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public Builder setFaults(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder builderForValue) {
        if (faultsBuilder_ == null) {
          ensureFaultsIsMutable();
          faults_.set(index, builderForValue.build());
          onChanged();
        } else {
          faultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public Builder addFaults(cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine value) {
        if (faultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFaultsIsMutable();
          faults_.add(value);
          onChanged();
        } else {
          faultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public Builder addFaults(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine value) {
        if (faultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFaultsIsMutable();
          faults_.add(index, value);
          onChanged();
        } else {
          faultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public Builder addFaults(
          cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder builderForValue) {
        if (faultsBuilder_ == null) {
          ensureFaultsIsMutable();
          faults_.add(builderForValue.build());
          onChanged();
        } else {
          faultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public Builder addFaults(
          int index, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder builderForValue) {
        if (faultsBuilder_ == null) {
          ensureFaultsIsMutable();
          faults_.add(index, builderForValue.build());
          onChanged();
        } else {
          faultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public Builder addAllFaults(
          java.lang.Iterable<? extends cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine> values) {
        if (faultsBuilder_ == null) {
          ensureFaultsIsMutable();
          super.addAll(values, faults_);
          onChanged();
        } else {
          faultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public Builder clearFaults() {
        if (faultsBuilder_ == null) {
          faults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          faultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public Builder removeFaults(int index) {
        if (faultsBuilder_ == null) {
          ensureFaultsIsMutable();
          faults_.remove(index);
          onChanged();
        } else {
          faultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder getFaultsBuilder(
          int index) {
        return getFaultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder getFaultsOrBuilder(
          int index) {
        if (faultsBuilder_ == null) {
          return faults_.get(index);  } else {
          return faultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder> 
           getFaultsOrBuilderList() {
        if (faultsBuilder_ != null) {
          return faultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(faults_);
        }
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder addFaultsBuilder() {
        return getFaultsFieldBuilder().addBuilder(
            cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder addFaultsBuilder(
          int index) {
        return getFaultsFieldBuilder().addBuilder(
            index, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.FaultDefine faults = 3;</code>
       *
       * <pre>
       *新的分类故障码
       * </pre>
       */
      public java.util.List<cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder> 
           getFaultsBuilderList() {
        return getFaultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder> 
          getFaultsFieldBuilder() {
        if (faultsBuilder_ == null) {
          faultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefine.Builder, cc.chinagps.gateway.buff.GBossDataBuff.FaultDefineOrBuilder>(
                  faults_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          faults_ = null;
        }
        return faultsBuilder_;
      }

      // optional int32 unitType = 4;
      private int unitType_ ;
      /**
       * <code>optional int32 unitType = 4;</code>
       *
       * <pre>
       *终端协议类型
       * </pre>
       */
      public boolean hasUnitType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 unitType = 4;</code>
       *
       * <pre>
       *终端协议类型
       * </pre>
       */
      public int getUnitType() {
        return unitType_;
      }
      /**
       * <code>optional int32 unitType = 4;</code>
       *
       * <pre>
       *终端协议类型
       * </pre>
       */
      public Builder setUnitType(int value) {
        bitField0_ |= 0x00000008;
        unitType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unitType = 4;</code>
       *
       * <pre>
       *终端协议类型
       * </pre>
       */
      public Builder clearUnitType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        unitType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 history = 5;
      private int history_ ;
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public boolean hasHistory() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public int getHistory() {
        return history_;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder setHistory(int value) {
        bitField0_ |= 0x00000010;
        history_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder clearHistory() {
        bitField0_ = (bitField0_ & ~0x00000010);
        history_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.FaultInfo)
    }

    static {
      defaultInstance = new FaultInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.FaultInfo)
  }

  public interface AppNoticeInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required string title = 2;
    /**
     * <code>required string title = 2;</code>
     *
     * <pre>
     *通知标题
     * </pre>
     */
    boolean hasTitle();
    /**
     * <code>required string title = 2;</code>
     *
     * <pre>
     *通知标题
     * </pre>
     */
    java.lang.String getTitle();
    /**
     * <code>required string title = 2;</code>
     *
     * <pre>
     *通知标题
     * </pre>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // required string content = 3;
    /**
     * <code>required string content = 3;</code>
     *
     * <pre>
     *通知内容
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>required string content = 3;</code>
     *
     * <pre>
     *通知内容
     * </pre>
     */
    java.lang.String getContent();
    /**
     * <code>required string content = 3;</code>
     *
     * <pre>
     *通知内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    // optional .gboss.GpsBaseInfo baseInfo = 4;
    /**
     * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    boolean hasBaseInfo();
    /**
     * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getBaseInfo();
    /**
     * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder();

    // optional .gboss.GpsReferPosition referPosition = 5;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    boolean hasReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder();

    // optional int32 cmdId = 6;
    /**
     * <code>optional int32 cmdId = 6;</code>
     *
     * <pre>
     *命令编号
     * </pre>
     */
    boolean hasCmdId();
    /**
     * <code>optional int32 cmdId = 6;</code>
     *
     * <pre>
     *命令编号
     * </pre>
     */
    int getCmdId();

    // optional int32 cmdretcode = 7;
    /**
     * <code>optional int32 cmdretcode = 7;</code>
     *
     * <pre>
     *命令执行结果(ResultCode)
     * </pre>
     */
    boolean hasCmdretcode();
    /**
     * <code>optional int32 cmdretcode = 7;</code>
     *
     * <pre>
     *命令执行结果(ResultCode)
     * </pre>
     */
    int getCmdretcode();

    // optional string cmdretmsg = 8;
    /**
     * <code>optional string cmdretmsg = 8;</code>
     *
     * <pre>
     *命令结果说明
     * </pre>
     */
    boolean hasCmdretmsg();
    /**
     * <code>optional string cmdretmsg = 8;</code>
     *
     * <pre>
     *命令结果说明
     * </pre>
     */
    java.lang.String getCmdretmsg();
    /**
     * <code>optional string cmdretmsg = 8;</code>
     *
     * <pre>
     *命令结果说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getCmdretmsgBytes();

    // optional int32 noticetype = 9;
    /**
     * <code>optional int32 noticetype = 9;</code>
     *
     * <pre>
     *警情或提醒类别
     * </pre>
     */
    boolean hasNoticetype();
    /**
     * <code>optional int32 noticetype = 9;</code>
     *
     * <pre>
     *警情或提醒类别
     * </pre>
     */
    int getNoticetype();

    // optional int32 alarmstatus = 10;
    /**
     * <code>optional int32 alarmstatus = 10;</code>
     *
     * <pre>
     *0x21: 点火上报
     *0x22: 熄火上报
     *0x23: 休眼上报
     *0x24: 关机上报
     *0x25: 警情上报
     *0x2B: 熄火未关灯上报
     *0x2C: 熄火未关门上报
     *0x2D: 熄火未锁门上报
     * </pre>
     */
    boolean hasAlarmstatus();
    /**
     * <code>optional int32 alarmstatus = 10;</code>
     *
     * <pre>
     *0x21: 点火上报
     *0x22: 熄火上报
     *0x23: 休眼上报
     *0x24: 关机上报
     *0x25: 警情上报
     *0x2B: 熄火未关灯上报
     *0x2C: 熄火未关门上报
     *0x2D: 熄火未锁门上报
     * </pre>
     */
    int getAlarmstatus();

    // optional string cmdsn = 11;
    /**
     * <code>optional string cmdsn = 11;</code>
     *
     * <pre>
     *命令SN
     * </pre>
     */
    boolean hasCmdsn();
    /**
     * <code>optional string cmdsn = 11;</code>
     *
     * <pre>
     *命令SN
     * </pre>
     */
    java.lang.String getCmdsn();
    /**
     * <code>optional string cmdsn = 11;</code>
     *
     * <pre>
     *命令SN
     * </pre>
     */
    com.google.protobuf.ByteString
        getCmdsnBytes();
  }
  /**
   * Protobuf type {@code gboss.AppNoticeInfo}
   *
   * <pre>
   *
   * APP通知信息, 写到ActiveMQ, 
   * </pre>
   */
  public static final class AppNoticeInfo extends
      com.google.protobuf.GeneratedMessage
      implements AppNoticeInfoOrBuilder {
    // Use AppNoticeInfo.newBuilder() to construct.
    private AppNoticeInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AppNoticeInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AppNoticeInfo defaultInstance;
    public static AppNoticeInfo getDefaultInstance() {
      return defaultInstance;
    }

    public AppNoticeInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AppNoticeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              title_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              content_ = input.readBytes();
              break;
            }
            case 34: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = baseInfo_.toBuilder();
              }
              baseInfo_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseInfo_);
                baseInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = referPosition_.toBuilder();
              }
              referPosition_ = input.readMessage(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referPosition_);
                referPosition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              cmdId_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              cmdretcode_ = input.readInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              cmdretmsg_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              noticetype_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              alarmstatus_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              cmdsn_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AppNoticeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AppNoticeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<AppNoticeInfo> PARSER =
        new com.google.protobuf.AbstractParser<AppNoticeInfo>() {
      public AppNoticeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AppNoticeInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AppNoticeInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string title = 2;
    public static final int TITLE_FIELD_NUMBER = 2;
    private java.lang.Object title_;
    /**
     * <code>required string title = 2;</code>
     *
     * <pre>
     *通知标题
     * </pre>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string title = 2;</code>
     *
     * <pre>
     *通知标题
     * </pre>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string title = 2;</code>
     *
     * <pre>
     *通知标题
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string content = 3;
    public static final int CONTENT_FIELD_NUMBER = 3;
    private java.lang.Object content_;
    /**
     * <code>required string content = 3;</code>
     *
     * <pre>
     *通知内容
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string content = 3;</code>
     *
     * <pre>
     *通知内容
     * </pre>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string content = 3;</code>
     *
     * <pre>
     *通知内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .gboss.GpsBaseInfo baseInfo = 4;
    public static final int BASEINFO_FIELD_NUMBER = 4;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo baseInfo_;
    /**
     * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public boolean hasBaseInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
      return baseInfo_;
    }
    /**
     * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
      return baseInfo_;
    }

    // optional .gboss.GpsReferPosition referPosition = 5;
    public static final int REFERPOSITION_FIELD_NUMBER = 5;
    private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition referPosition_;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public boolean hasReferPosition() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
      return referPosition_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
      return referPosition_;
    }

    // optional int32 cmdId = 6;
    public static final int CMDID_FIELD_NUMBER = 6;
    private int cmdId_;
    /**
     * <code>optional int32 cmdId = 6;</code>
     *
     * <pre>
     *命令编号
     * </pre>
     */
    public boolean hasCmdId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 cmdId = 6;</code>
     *
     * <pre>
     *命令编号
     * </pre>
     */
    public int getCmdId() {
      return cmdId_;
    }

    // optional int32 cmdretcode = 7;
    public static final int CMDRETCODE_FIELD_NUMBER = 7;
    private int cmdretcode_;
    /**
     * <code>optional int32 cmdretcode = 7;</code>
     *
     * <pre>
     *命令执行结果(ResultCode)
     * </pre>
     */
    public boolean hasCmdretcode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 cmdretcode = 7;</code>
     *
     * <pre>
     *命令执行结果(ResultCode)
     * </pre>
     */
    public int getCmdretcode() {
      return cmdretcode_;
    }

    // optional string cmdretmsg = 8;
    public static final int CMDRETMSG_FIELD_NUMBER = 8;
    private java.lang.Object cmdretmsg_;
    /**
     * <code>optional string cmdretmsg = 8;</code>
     *
     * <pre>
     *命令结果说明
     * </pre>
     */
    public boolean hasCmdretmsg() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string cmdretmsg = 8;</code>
     *
     * <pre>
     *命令结果说明
     * </pre>
     */
    public java.lang.String getCmdretmsg() {
      java.lang.Object ref = cmdretmsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cmdretmsg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cmdretmsg = 8;</code>
     *
     * <pre>
     *命令结果说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCmdretmsgBytes() {
      java.lang.Object ref = cmdretmsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cmdretmsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 noticetype = 9;
    public static final int NOTICETYPE_FIELD_NUMBER = 9;
    private int noticetype_;
    /**
     * <code>optional int32 noticetype = 9;</code>
     *
     * <pre>
     *警情或提醒类别
     * </pre>
     */
    public boolean hasNoticetype() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 noticetype = 9;</code>
     *
     * <pre>
     *警情或提醒类别
     * </pre>
     */
    public int getNoticetype() {
      return noticetype_;
    }

    // optional int32 alarmstatus = 10;
    public static final int ALARMSTATUS_FIELD_NUMBER = 10;
    private int alarmstatus_;
    /**
     * <code>optional int32 alarmstatus = 10;</code>
     *
     * <pre>
     *0x21: 点火上报
     *0x22: 熄火上报
     *0x23: 休眼上报
     *0x24: 关机上报
     *0x25: 警情上报
     *0x2B: 熄火未关灯上报
     *0x2C: 熄火未关门上报
     *0x2D: 熄火未锁门上报
     * </pre>
     */
    public boolean hasAlarmstatus() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 alarmstatus = 10;</code>
     *
     * <pre>
     *0x21: 点火上报
     *0x22: 熄火上报
     *0x23: 休眼上报
     *0x24: 关机上报
     *0x25: 警情上报
     *0x2B: 熄火未关灯上报
     *0x2C: 熄火未关门上报
     *0x2D: 熄火未锁门上报
     * </pre>
     */
    public int getAlarmstatus() {
      return alarmstatus_;
    }

    // optional string cmdsn = 11;
    public static final int CMDSN_FIELD_NUMBER = 11;
    private java.lang.Object cmdsn_;
    /**
     * <code>optional string cmdsn = 11;</code>
     *
     * <pre>
     *命令SN
     * </pre>
     */
    public boolean hasCmdsn() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string cmdsn = 11;</code>
     *
     * <pre>
     *命令SN
     * </pre>
     */
    public java.lang.String getCmdsn() {
      java.lang.Object ref = cmdsn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cmdsn_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cmdsn = 11;</code>
     *
     * <pre>
     *命令SN
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCmdsnBytes() {
      java.lang.Object ref = cmdsn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cmdsn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      callLetter_ = "";
      title_ = "";
      content_ = "";
      baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      cmdId_ = 0;
      cmdretcode_ = 0;
      cmdretmsg_ = "";
      noticetype_ = 0;
      alarmstatus_ = 0;
      cmdsn_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTitle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasContent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasBaseInfo()) {
        if (!getBaseInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasReferPosition()) {
        if (!getReferPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTitleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getContentBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, baseInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, referPosition_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, cmdId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, cmdretcode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getCmdretmsgBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, noticetype_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, alarmstatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getCmdsnBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTitleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getContentBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, baseInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, referPosition_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, cmdId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, cmdretcode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getCmdretmsgBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, noticetype_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, alarmstatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCmdsnBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.AppNoticeInfo}
     *
     * <pre>
     *
     * APP通知信息, 写到ActiveMQ, 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AppNoticeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AppNoticeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo.class, cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBaseInfoFieldBuilder();
          getReferPositionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        cmdId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        cmdretcode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        cmdretmsg_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        noticetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        alarmstatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        cmdsn_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_AppNoticeInfo_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo build() {
        cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo result = new cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (baseInfoBuilder_ == null) {
          result.baseInfo_ = baseInfo_;
        } else {
          result.baseInfo_ = baseInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (referPositionBuilder_ == null) {
          result.referPosition_ = referPosition_;
        } else {
          result.referPosition_ = referPositionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cmdId_ = cmdId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.cmdretcode_ = cmdretcode_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.cmdretmsg_ = cmdretmsg_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.noticetype_ = noticetype_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.alarmstatus_ = alarmstatus_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.cmdsn_ = cmdsn_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000002;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasContent()) {
          bitField0_ |= 0x00000004;
          content_ = other.content_;
          onChanged();
        }
        if (other.hasBaseInfo()) {
          mergeBaseInfo(other.getBaseInfo());
        }
        if (other.hasReferPosition()) {
          mergeReferPosition(other.getReferPosition());
        }
        if (other.hasCmdId()) {
          setCmdId(other.getCmdId());
        }
        if (other.hasCmdretcode()) {
          setCmdretcode(other.getCmdretcode());
        }
        if (other.hasCmdretmsg()) {
          bitField0_ |= 0x00000080;
          cmdretmsg_ = other.cmdretmsg_;
          onChanged();
        }
        if (other.hasNoticetype()) {
          setNoticetype(other.getNoticetype());
        }
        if (other.hasAlarmstatus()) {
          setAlarmstatus(other.getAlarmstatus());
        }
        if (other.hasCmdsn()) {
          bitField0_ |= 0x00000400;
          cmdsn_ = other.cmdsn_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasTitle()) {
          
          return false;
        }
        if (!hasContent()) {
          
          return false;
        }
        if (hasBaseInfo()) {
          if (!getBaseInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasReferPosition()) {
          if (!getReferPosition().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.AppNoticeInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required string title = 2;
      private java.lang.Object title_ = "";
      /**
       * <code>required string title = 2;</code>
       *
       * <pre>
       *通知标题
       * </pre>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string title = 2;</code>
       *
       * <pre>
       *通知标题
       * </pre>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string title = 2;</code>
       *
       * <pre>
       *通知标题
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string title = 2;</code>
       *
       * <pre>
       *通知标题
       * </pre>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string title = 2;</code>
       *
       * <pre>
       *通知标题
       * </pre>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>required string title = 2;</code>
       *
       * <pre>
       *通知标题
       * </pre>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        title_ = value;
        onChanged();
        return this;
      }

      // required string content = 3;
      private java.lang.Object content_ = "";
      /**
       * <code>required string content = 3;</code>
       *
       * <pre>
       *通知内容
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string content = 3;</code>
       *
       * <pre>
       *通知内容
       * </pre>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string content = 3;</code>
       *
       * <pre>
       *通知内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string content = 3;</code>
       *
       * <pre>
       *通知内容
       * </pre>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string content = 3;</code>
       *
       * <pre>
       *通知内容
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>required string content = 3;</code>
       *
       * <pre>
       *通知内容
       * </pre>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        content_ = value;
        onChanged();
        return this;
      }

      // optional .gboss.GpsBaseInfo baseInfo = 4;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> baseInfoBuilder_;
      /**
       * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public boolean hasBaseInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
        if (baseInfoBuilder_ == null) {
          return baseInfo_;
        } else {
          return baseInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseInfo_ = value;
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder mergeBaseInfo(cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              baseInfo_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            baseInfo_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.newBuilder(baseInfo_).mergeFrom(value).buildPartial();
          } else {
            baseInfo_ = value;
          }
          onChanged();
        } else {
          baseInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder clearBaseInfo() {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder getBaseInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
        if (baseInfoBuilder_ != null) {
          return baseInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseInfo_;
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo baseInfo = 4;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getBaseInfoFieldBuilder() {
        if (baseInfoBuilder_ == null) {
          baseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  baseInfo_,
                  getParentForChildren(),
                  isClean());
          baseInfo_ = null;
        }
        return baseInfoBuilder_;
      }

      // optional .gboss.GpsReferPosition referPosition = 5;
      private cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> referPositionBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public boolean hasReferPosition() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
        if (referPositionBuilder_ == null) {
          return referPosition_;
        } else {
          return referPositionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referPosition_ = value;
          onChanged();
        } else {
          referPositionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (referPositionBuilder_ == null) {
          referPosition_ = builderForValue.build();
          onChanged();
        } else {
          referPositionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder mergeReferPosition(cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              referPosition_ != cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            referPosition_ =
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.newBuilder(referPosition_).mergeFrom(value).buildPartial();
          } else {
            referPosition_ = value;
          }
          onChanged();
        } else {
          referPositionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder clearReferPosition() {
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder getReferPositionBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getReferPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
        if (referPositionBuilder_ != null) {
          return referPositionBuilder_.getMessageOrBuilder();
        } else {
          return referPosition_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 5;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getReferPositionFieldBuilder() {
        if (referPositionBuilder_ == null) {
          referPositionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gateway.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  referPosition_,
                  getParentForChildren(),
                  isClean());
          referPosition_ = null;
        }
        return referPositionBuilder_;
      }

      // optional int32 cmdId = 6;
      private int cmdId_ ;
      /**
       * <code>optional int32 cmdId = 6;</code>
       *
       * <pre>
       *命令编号
       * </pre>
       */
      public boolean hasCmdId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 cmdId = 6;</code>
       *
       * <pre>
       *命令编号
       * </pre>
       */
      public int getCmdId() {
        return cmdId_;
      }
      /**
       * <code>optional int32 cmdId = 6;</code>
       *
       * <pre>
       *命令编号
       * </pre>
       */
      public Builder setCmdId(int value) {
        bitField0_ |= 0x00000020;
        cmdId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cmdId = 6;</code>
       *
       * <pre>
       *命令编号
       * </pre>
       */
      public Builder clearCmdId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cmdId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cmdretcode = 7;
      private int cmdretcode_ ;
      /**
       * <code>optional int32 cmdretcode = 7;</code>
       *
       * <pre>
       *命令执行结果(ResultCode)
       * </pre>
       */
      public boolean hasCmdretcode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 cmdretcode = 7;</code>
       *
       * <pre>
       *命令执行结果(ResultCode)
       * </pre>
       */
      public int getCmdretcode() {
        return cmdretcode_;
      }
      /**
       * <code>optional int32 cmdretcode = 7;</code>
       *
       * <pre>
       *命令执行结果(ResultCode)
       * </pre>
       */
      public Builder setCmdretcode(int value) {
        bitField0_ |= 0x00000040;
        cmdretcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cmdretcode = 7;</code>
       *
       * <pre>
       *命令执行结果(ResultCode)
       * </pre>
       */
      public Builder clearCmdretcode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cmdretcode_ = 0;
        onChanged();
        return this;
      }

      // optional string cmdretmsg = 8;
      private java.lang.Object cmdretmsg_ = "";
      /**
       * <code>optional string cmdretmsg = 8;</code>
       *
       * <pre>
       *命令结果说明
       * </pre>
       */
      public boolean hasCmdretmsg() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string cmdretmsg = 8;</code>
       *
       * <pre>
       *命令结果说明
       * </pre>
       */
      public java.lang.String getCmdretmsg() {
        java.lang.Object ref = cmdretmsg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cmdretmsg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cmdretmsg = 8;</code>
       *
       * <pre>
       *命令结果说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCmdretmsgBytes() {
        java.lang.Object ref = cmdretmsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cmdretmsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cmdretmsg = 8;</code>
       *
       * <pre>
       *命令结果说明
       * </pre>
       */
      public Builder setCmdretmsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        cmdretmsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cmdretmsg = 8;</code>
       *
       * <pre>
       *命令结果说明
       * </pre>
       */
      public Builder clearCmdretmsg() {
        bitField0_ = (bitField0_ & ~0x00000080);
        cmdretmsg_ = getDefaultInstance().getCmdretmsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string cmdretmsg = 8;</code>
       *
       * <pre>
       *命令结果说明
       * </pre>
       */
      public Builder setCmdretmsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        cmdretmsg_ = value;
        onChanged();
        return this;
      }

      // optional int32 noticetype = 9;
      private int noticetype_ ;
      /**
       * <code>optional int32 noticetype = 9;</code>
       *
       * <pre>
       *警情或提醒类别
       * </pre>
       */
      public boolean hasNoticetype() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 noticetype = 9;</code>
       *
       * <pre>
       *警情或提醒类别
       * </pre>
       */
      public int getNoticetype() {
        return noticetype_;
      }
      /**
       * <code>optional int32 noticetype = 9;</code>
       *
       * <pre>
       *警情或提醒类别
       * </pre>
       */
      public Builder setNoticetype(int value) {
        bitField0_ |= 0x00000100;
        noticetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 noticetype = 9;</code>
       *
       * <pre>
       *警情或提醒类别
       * </pre>
       */
      public Builder clearNoticetype() {
        bitField0_ = (bitField0_ & ~0x00000100);
        noticetype_ = 0;
        onChanged();
        return this;
      }

      // optional int32 alarmstatus = 10;
      private int alarmstatus_ ;
      /**
       * <code>optional int32 alarmstatus = 10;</code>
       *
       * <pre>
       *0x21: 点火上报
       *0x22: 熄火上报
       *0x23: 休眼上报
       *0x24: 关机上报
       *0x25: 警情上报
       *0x2B: 熄火未关灯上报
       *0x2C: 熄火未关门上报
       *0x2D: 熄火未锁门上报
       * </pre>
       */
      public boolean hasAlarmstatus() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 alarmstatus = 10;</code>
       *
       * <pre>
       *0x21: 点火上报
       *0x22: 熄火上报
       *0x23: 休眼上报
       *0x24: 关机上报
       *0x25: 警情上报
       *0x2B: 熄火未关灯上报
       *0x2C: 熄火未关门上报
       *0x2D: 熄火未锁门上报
       * </pre>
       */
      public int getAlarmstatus() {
        return alarmstatus_;
      }
      /**
       * <code>optional int32 alarmstatus = 10;</code>
       *
       * <pre>
       *0x21: 点火上报
       *0x22: 熄火上报
       *0x23: 休眼上报
       *0x24: 关机上报
       *0x25: 警情上报
       *0x2B: 熄火未关灯上报
       *0x2C: 熄火未关门上报
       *0x2D: 熄火未锁门上报
       * </pre>
       */
      public Builder setAlarmstatus(int value) {
        bitField0_ |= 0x00000200;
        alarmstatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 alarmstatus = 10;</code>
       *
       * <pre>
       *0x21: 点火上报
       *0x22: 熄火上报
       *0x23: 休眼上报
       *0x24: 关机上报
       *0x25: 警情上报
       *0x2B: 熄火未关灯上报
       *0x2C: 熄火未关门上报
       *0x2D: 熄火未锁门上报
       * </pre>
       */
      public Builder clearAlarmstatus() {
        bitField0_ = (bitField0_ & ~0x00000200);
        alarmstatus_ = 0;
        onChanged();
        return this;
      }

      // optional string cmdsn = 11;
      private java.lang.Object cmdsn_ = "";
      /**
       * <code>optional string cmdsn = 11;</code>
       *
       * <pre>
       *命令SN
       * </pre>
       */
      public boolean hasCmdsn() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string cmdsn = 11;</code>
       *
       * <pre>
       *命令SN
       * </pre>
       */
      public java.lang.String getCmdsn() {
        java.lang.Object ref = cmdsn_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cmdsn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cmdsn = 11;</code>
       *
       * <pre>
       *命令SN
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCmdsnBytes() {
        java.lang.Object ref = cmdsn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cmdsn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cmdsn = 11;</code>
       *
       * <pre>
       *命令SN
       * </pre>
       */
      public Builder setCmdsn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        cmdsn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cmdsn = 11;</code>
       *
       * <pre>
       *命令SN
       * </pre>
       */
      public Builder clearCmdsn() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cmdsn_ = getDefaultInstance().getCmdsn();
        onChanged();
        return this;
      }
      /**
       * <code>optional string cmdsn = 11;</code>
       *
       * <pre>
       *命令SN
       * </pre>
       */
      public Builder setCmdsnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        cmdsn_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.AppNoticeInfo)
    }

    static {
      defaultInstance = new AppNoticeInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.AppNoticeInfo)
  }

  public interface ECUConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required int64 updateTime = 2;
    /**
     * <code>required int64 updateTime = 2;</code>
     *
     * <pre>
     *配置更新的时间(从1970-1-1 0:0:0开始的毫秒数，格林威治时间)
     * </pre>
     */
    boolean hasUpdateTime();
    /**
     * <code>required int64 updateTime = 2;</code>
     *
     * <pre>
     *配置更新的时间(从1970-1-1 0:0:0开始的毫秒数，格林威治时间)
     * </pre>
     */
    long getUpdateTime();

    // optional int32 checkFlag = 3;
    /**
     * <code>optional int32 checkFlag = 3;</code>
     *
     * <pre>
     *体检功能是否开启(0:关闭 1:开启)
     * </pre>
     */
    boolean hasCheckFlag();
    /**
     * <code>optional int32 checkFlag = 3;</code>
     *
     * <pre>
     *体检功能是否开启(0:关闭 1:开启)
     * </pre>
     */
    int getCheckFlag();

    // optional int32 abs = 4;
    /**
     * <code>optional int32 abs = 4;</code>
     *
     * <pre>
     *ABS配置
     * </pre>
     */
    boolean hasAbs();
    /**
     * <code>optional int32 abs = 4;</code>
     *
     * <pre>
     *ABS配置
     * </pre>
     */
    int getAbs();

    // optional int32 esp = 5;
    /**
     * <code>optional int32 esp = 5;</code>
     *
     * <pre>
     *ESP/DCU配置
     * </pre>
     */
    boolean hasEsp();
    /**
     * <code>optional int32 esp = 5;</code>
     *
     * <pre>
     *ESP/DCU配置
     * </pre>
     */
    int getEsp();

    // optional int32 peps = 6;
    /**
     * <code>optional int32 peps = 6;</code>
     *
     * <pre>
     *PEPS配置
     * </pre>
     */
    boolean hasPeps();
    /**
     * <code>optional int32 peps = 6;</code>
     *
     * <pre>
     *PEPS配置
     * </pre>
     */
    int getPeps();

    // optional int32 tpms = 7;
    /**
     * <code>optional int32 tpms = 7;</code>
     *
     * <pre>
     *TPMS配置
     * </pre>
     */
    boolean hasTpms();
    /**
     * <code>optional int32 tpms = 7;</code>
     *
     * <pre>
     *TPMS配置
     * </pre>
     */
    int getTpms();

    // optional int32 srs = 8;
    /**
     * <code>optional int32 srs = 8;</code>
     *
     * <pre>
     *SRS配置
     * </pre>
     */
    boolean hasSrs();
    /**
     * <code>optional int32 srs = 8;</code>
     *
     * <pre>
     *SRS配置
     * </pre>
     */
    int getSrs();

    // optional int32 eps = 9;
    /**
     * <code>optional int32 eps = 9;</code>
     *
     * <pre>
     *EPS配置
     * </pre>
     */
    boolean hasEps();
    /**
     * <code>optional int32 eps = 9;</code>
     *
     * <pre>
     *EPS配置
     * </pre>
     */
    int getEps();

    // optional int32 ems = 10;
    /**
     * <code>optional int32 ems = 10;</code>
     *
     * <pre>
     *EMS配置
     * </pre>
     */
    boolean hasEms();
    /**
     * <code>optional int32 ems = 10;</code>
     *
     * <pre>
     *EMS配置
     * </pre>
     */
    int getEms();

    // optional int32 immo = 11;
    /**
     * <code>optional int32 immo = 11;</code>
     *
     * <pre>
     *IMMO配置
     * </pre>
     */
    boolean hasImmo();
    /**
     * <code>optional int32 immo = 11;</code>
     *
     * <pre>
     *IMMO配置
     * </pre>
     */
    int getImmo();

    // optional int32 bcm = 12;
    /**
     * <code>optional int32 bcm = 12;</code>
     *
     * <pre>
     *BCM配置
     * </pre>
     */
    boolean hasBcm();
    /**
     * <code>optional int32 bcm = 12;</code>
     *
     * <pre>
     *BCM配置
     * </pre>
     */
    int getBcm();

    // optional int32 tcu = 13;
    /**
     * <code>optional int32 tcu = 13;</code>
     *
     * <pre>
     *TCU配置
     * </pre>
     */
    boolean hasTcu();
    /**
     * <code>optional int32 tcu = 13;</code>
     *
     * <pre>
     *TCU配置
     * </pre>
     */
    int getTcu();

    // optional int32 icm = 14;
    /**
     * <code>optional int32 icm = 14;</code>
     *
     * <pre>
     *ICM配置
     * </pre>
     */
    boolean hasIcm();
    /**
     * <code>optional int32 icm = 14;</code>
     *
     * <pre>
     *ICM配置
     * </pre>
     */
    int getIcm();

    // optional int32 apm = 15;
    /**
     * <code>optional int32 apm = 15;</code>
     *
     * <pre>
     *APM配置
     * </pre>
     */
    boolean hasApm();
    /**
     * <code>optional int32 apm = 15;</code>
     *
     * <pre>
     *APM配置
     * </pre>
     */
    int getApm();

    // optional bytes configContent = 16;
    /**
     * <code>optional bytes configContent = 16;</code>
     *
     * <pre>
     *电控单元配置的源码
     * </pre>
     */
    boolean hasConfigContent();
    /**
     * <code>optional bytes configContent = 16;</code>
     *
     * <pre>
     *电控单元配置的源码
     * </pre>
     */
    com.google.protobuf.ByteString getConfigContent();
  }
  /**
   * Protobuf type {@code gboss.ECUConfig}
   *
   * <pre>
   **
   * 电控单元配置
   * 各配置项的值 0:无此配置项  1:有此配置项
   * </pre>
   */
  public static final class ECUConfig extends
      com.google.protobuf.GeneratedMessage
      implements ECUConfigOrBuilder {
    // Use ECUConfig.newBuilder() to construct.
    private ECUConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ECUConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ECUConfig defaultInstance;
    public static ECUConfig getDefaultInstance() {
      return defaultInstance;
    }

    public ECUConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ECUConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              updateTime_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              checkFlag_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              abs_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              esp_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              peps_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              tpms_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              srs_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              eps_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              ems_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              immo_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              bcm_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              tcu_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              icm_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              apm_ = input.readInt32();
              break;
            }
            case 130: {
              bitField0_ |= 0x00008000;
              configContent_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ECUConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ECUConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig.class, cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<ECUConfig> PARSER =
        new com.google.protobuf.AbstractParser<ECUConfig>() {
      public ECUConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ECUConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ECUConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 updateTime = 2;
    public static final int UPDATETIME_FIELD_NUMBER = 2;
    private long updateTime_;
    /**
     * <code>required int64 updateTime = 2;</code>
     *
     * <pre>
     *配置更新的时间(从1970-1-1 0:0:0开始的毫秒数，格林威治时间)
     * </pre>
     */
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 updateTime = 2;</code>
     *
     * <pre>
     *配置更新的时间(从1970-1-1 0:0:0开始的毫秒数，格林威治时间)
     * </pre>
     */
    public long getUpdateTime() {
      return updateTime_;
    }

    // optional int32 checkFlag = 3;
    public static final int CHECKFLAG_FIELD_NUMBER = 3;
    private int checkFlag_;
    /**
     * <code>optional int32 checkFlag = 3;</code>
     *
     * <pre>
     *体检功能是否开启(0:关闭 1:开启)
     * </pre>
     */
    public boolean hasCheckFlag() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 checkFlag = 3;</code>
     *
     * <pre>
     *体检功能是否开启(0:关闭 1:开启)
     * </pre>
     */
    public int getCheckFlag() {
      return checkFlag_;
    }

    // optional int32 abs = 4;
    public static final int ABS_FIELD_NUMBER = 4;
    private int abs_;
    /**
     * <code>optional int32 abs = 4;</code>
     *
     * <pre>
     *ABS配置
     * </pre>
     */
    public boolean hasAbs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 abs = 4;</code>
     *
     * <pre>
     *ABS配置
     * </pre>
     */
    public int getAbs() {
      return abs_;
    }

    // optional int32 esp = 5;
    public static final int ESP_FIELD_NUMBER = 5;
    private int esp_;
    /**
     * <code>optional int32 esp = 5;</code>
     *
     * <pre>
     *ESP/DCU配置
     * </pre>
     */
    public boolean hasEsp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 esp = 5;</code>
     *
     * <pre>
     *ESP/DCU配置
     * </pre>
     */
    public int getEsp() {
      return esp_;
    }

    // optional int32 peps = 6;
    public static final int PEPS_FIELD_NUMBER = 6;
    private int peps_;
    /**
     * <code>optional int32 peps = 6;</code>
     *
     * <pre>
     *PEPS配置
     * </pre>
     */
    public boolean hasPeps() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 peps = 6;</code>
     *
     * <pre>
     *PEPS配置
     * </pre>
     */
    public int getPeps() {
      return peps_;
    }

    // optional int32 tpms = 7;
    public static final int TPMS_FIELD_NUMBER = 7;
    private int tpms_;
    /**
     * <code>optional int32 tpms = 7;</code>
     *
     * <pre>
     *TPMS配置
     * </pre>
     */
    public boolean hasTpms() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 tpms = 7;</code>
     *
     * <pre>
     *TPMS配置
     * </pre>
     */
    public int getTpms() {
      return tpms_;
    }

    // optional int32 srs = 8;
    public static final int SRS_FIELD_NUMBER = 8;
    private int srs_;
    /**
     * <code>optional int32 srs = 8;</code>
     *
     * <pre>
     *SRS配置
     * </pre>
     */
    public boolean hasSrs() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 srs = 8;</code>
     *
     * <pre>
     *SRS配置
     * </pre>
     */
    public int getSrs() {
      return srs_;
    }

    // optional int32 eps = 9;
    public static final int EPS_FIELD_NUMBER = 9;
    private int eps_;
    /**
     * <code>optional int32 eps = 9;</code>
     *
     * <pre>
     *EPS配置
     * </pre>
     */
    public boolean hasEps() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 eps = 9;</code>
     *
     * <pre>
     *EPS配置
     * </pre>
     */
    public int getEps() {
      return eps_;
    }

    // optional int32 ems = 10;
    public static final int EMS_FIELD_NUMBER = 10;
    private int ems_;
    /**
     * <code>optional int32 ems = 10;</code>
     *
     * <pre>
     *EMS配置
     * </pre>
     */
    public boolean hasEms() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 ems = 10;</code>
     *
     * <pre>
     *EMS配置
     * </pre>
     */
    public int getEms() {
      return ems_;
    }

    // optional int32 immo = 11;
    public static final int IMMO_FIELD_NUMBER = 11;
    private int immo_;
    /**
     * <code>optional int32 immo = 11;</code>
     *
     * <pre>
     *IMMO配置
     * </pre>
     */
    public boolean hasImmo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 immo = 11;</code>
     *
     * <pre>
     *IMMO配置
     * </pre>
     */
    public int getImmo() {
      return immo_;
    }

    // optional int32 bcm = 12;
    public static final int BCM_FIELD_NUMBER = 12;
    private int bcm_;
    /**
     * <code>optional int32 bcm = 12;</code>
     *
     * <pre>
     *BCM配置
     * </pre>
     */
    public boolean hasBcm() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 bcm = 12;</code>
     *
     * <pre>
     *BCM配置
     * </pre>
     */
    public int getBcm() {
      return bcm_;
    }

    // optional int32 tcu = 13;
    public static final int TCU_FIELD_NUMBER = 13;
    private int tcu_;
    /**
     * <code>optional int32 tcu = 13;</code>
     *
     * <pre>
     *TCU配置
     * </pre>
     */
    public boolean hasTcu() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 tcu = 13;</code>
     *
     * <pre>
     *TCU配置
     * </pre>
     */
    public int getTcu() {
      return tcu_;
    }

    // optional int32 icm = 14;
    public static final int ICM_FIELD_NUMBER = 14;
    private int icm_;
    /**
     * <code>optional int32 icm = 14;</code>
     *
     * <pre>
     *ICM配置
     * </pre>
     */
    public boolean hasIcm() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 icm = 14;</code>
     *
     * <pre>
     *ICM配置
     * </pre>
     */
    public int getIcm() {
      return icm_;
    }

    // optional int32 apm = 15;
    public static final int APM_FIELD_NUMBER = 15;
    private int apm_;
    /**
     * <code>optional int32 apm = 15;</code>
     *
     * <pre>
     *APM配置
     * </pre>
     */
    public boolean hasApm() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 apm = 15;</code>
     *
     * <pre>
     *APM配置
     * </pre>
     */
    public int getApm() {
      return apm_;
    }

    // optional bytes configContent = 16;
    public static final int CONFIGCONTENT_FIELD_NUMBER = 16;
    private com.google.protobuf.ByteString configContent_;
    /**
     * <code>optional bytes configContent = 16;</code>
     *
     * <pre>
     *电控单元配置的源码
     * </pre>
     */
    public boolean hasConfigContent() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bytes configContent = 16;</code>
     *
     * <pre>
     *电控单元配置的源码
     * </pre>
     */
    public com.google.protobuf.ByteString getConfigContent() {
      return configContent_;
    }

    private void initFields() {
      callLetter_ = "";
      updateTime_ = 0L;
      checkFlag_ = 0;
      abs_ = 0;
      esp_ = 0;
      peps_ = 0;
      tpms_ = 0;
      srs_ = 0;
      eps_ = 0;
      ems_ = 0;
      immo_ = 0;
      bcm_ = 0;
      tcu_ = 0;
      icm_ = 0;
      apm_ = 0;
      configContent_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUpdateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, updateTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, checkFlag_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, abs_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, esp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, peps_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, tpms_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, srs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, eps_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, ems_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, immo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, bcm_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, tcu_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, icm_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, apm_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(16, configContent_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, updateTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, checkFlag_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, abs_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, esp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, peps_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, tpms_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, srs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, eps_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, ems_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, immo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, bcm_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, tcu_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, icm_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, apm_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, configContent_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.ECUConfig}
     *
     * <pre>
     **
     * 电控单元配置
     * 各配置项的值 0:无此配置项  1:有此配置项
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gateway.buff.GBossDataBuff.ECUConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ECUConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ECUConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig.class, cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig.Builder.class);
      }

      // Construct using cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        updateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        checkFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        abs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        esp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        peps_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        tpms_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        srs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        eps_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ems_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        immo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        bcm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        tcu_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        icm_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        apm_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        configContent_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.internal_static_gboss_ECUConfig_descriptor;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig getDefaultInstanceForType() {
        return cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig.getDefaultInstance();
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig build() {
        cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig buildPartial() {
        cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig result = new cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.updateTime_ = updateTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.checkFlag_ = checkFlag_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.abs_ = abs_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.esp_ = esp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.peps_ = peps_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tpms_ = tpms_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.srs_ = srs_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.eps_ = eps_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ems_ = ems_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.immo_ = immo_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.bcm_ = bcm_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tcu_ = tcu_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.icm_ = icm_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.apm_ = apm_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.configContent_ = configContent_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig) {
          return mergeFrom((cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig other) {
        if (other == cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasUpdateTime()) {
          setUpdateTime(other.getUpdateTime());
        }
        if (other.hasCheckFlag()) {
          setCheckFlag(other.getCheckFlag());
        }
        if (other.hasAbs()) {
          setAbs(other.getAbs());
        }
        if (other.hasEsp()) {
          setEsp(other.getEsp());
        }
        if (other.hasPeps()) {
          setPeps(other.getPeps());
        }
        if (other.hasTpms()) {
          setTpms(other.getTpms());
        }
        if (other.hasSrs()) {
          setSrs(other.getSrs());
        }
        if (other.hasEps()) {
          setEps(other.getEps());
        }
        if (other.hasEms()) {
          setEms(other.getEms());
        }
        if (other.hasImmo()) {
          setImmo(other.getImmo());
        }
        if (other.hasBcm()) {
          setBcm(other.getBcm());
        }
        if (other.hasTcu()) {
          setTcu(other.getTcu());
        }
        if (other.hasIcm()) {
          setIcm(other.getIcm());
        }
        if (other.hasApm()) {
          setApm(other.getApm());
        }
        if (other.hasConfigContent()) {
          setConfigContent(other.getConfigContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasUpdateTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gateway.buff.GBossDataBuff.ECUConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required int64 updateTime = 2;
      private long updateTime_ ;
      /**
       * <code>required int64 updateTime = 2;</code>
       *
       * <pre>
       *配置更新的时间(从1970-1-1 0:0:0开始的毫秒数，格林威治时间)
       * </pre>
       */
      public boolean hasUpdateTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 updateTime = 2;</code>
       *
       * <pre>
       *配置更新的时间(从1970-1-1 0:0:0开始的毫秒数，格林威治时间)
       * </pre>
       */
      public long getUpdateTime() {
        return updateTime_;
      }
      /**
       * <code>required int64 updateTime = 2;</code>
       *
       * <pre>
       *配置更新的时间(从1970-1-1 0:0:0开始的毫秒数，格林威治时间)
       * </pre>
       */
      public Builder setUpdateTime(long value) {
        bitField0_ |= 0x00000002;
        updateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 updateTime = 2;</code>
       *
       * <pre>
       *配置更新的时间(从1970-1-1 0:0:0开始的毫秒数，格林威治时间)
       * </pre>
       */
      public Builder clearUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        updateTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 checkFlag = 3;
      private int checkFlag_ ;
      /**
       * <code>optional int32 checkFlag = 3;</code>
       *
       * <pre>
       *体检功能是否开启(0:关闭 1:开启)
       * </pre>
       */
      public boolean hasCheckFlag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 checkFlag = 3;</code>
       *
       * <pre>
       *体检功能是否开启(0:关闭 1:开启)
       * </pre>
       */
      public int getCheckFlag() {
        return checkFlag_;
      }
      /**
       * <code>optional int32 checkFlag = 3;</code>
       *
       * <pre>
       *体检功能是否开启(0:关闭 1:开启)
       * </pre>
       */
      public Builder setCheckFlag(int value) {
        bitField0_ |= 0x00000004;
        checkFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 checkFlag = 3;</code>
       *
       * <pre>
       *体检功能是否开启(0:关闭 1:开启)
       * </pre>
       */
      public Builder clearCheckFlag() {
        bitField0_ = (bitField0_ & ~0x00000004);
        checkFlag_ = 0;
        onChanged();
        return this;
      }

      // optional int32 abs = 4;
      private int abs_ ;
      /**
       * <code>optional int32 abs = 4;</code>
       *
       * <pre>
       *ABS配置
       * </pre>
       */
      public boolean hasAbs() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 abs = 4;</code>
       *
       * <pre>
       *ABS配置
       * </pre>
       */
      public int getAbs() {
        return abs_;
      }
      /**
       * <code>optional int32 abs = 4;</code>
       *
       * <pre>
       *ABS配置
       * </pre>
       */
      public Builder setAbs(int value) {
        bitField0_ |= 0x00000008;
        abs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 abs = 4;</code>
       *
       * <pre>
       *ABS配置
       * </pre>
       */
      public Builder clearAbs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        abs_ = 0;
        onChanged();
        return this;
      }

      // optional int32 esp = 5;
      private int esp_ ;
      /**
       * <code>optional int32 esp = 5;</code>
       *
       * <pre>
       *ESP/DCU配置
       * </pre>
       */
      public boolean hasEsp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 esp = 5;</code>
       *
       * <pre>
       *ESP/DCU配置
       * </pre>
       */
      public int getEsp() {
        return esp_;
      }
      /**
       * <code>optional int32 esp = 5;</code>
       *
       * <pre>
       *ESP/DCU配置
       * </pre>
       */
      public Builder setEsp(int value) {
        bitField0_ |= 0x00000010;
        esp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 esp = 5;</code>
       *
       * <pre>
       *ESP/DCU配置
       * </pre>
       */
      public Builder clearEsp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        esp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 peps = 6;
      private int peps_ ;
      /**
       * <code>optional int32 peps = 6;</code>
       *
       * <pre>
       *PEPS配置
       * </pre>
       */
      public boolean hasPeps() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 peps = 6;</code>
       *
       * <pre>
       *PEPS配置
       * </pre>
       */
      public int getPeps() {
        return peps_;
      }
      /**
       * <code>optional int32 peps = 6;</code>
       *
       * <pre>
       *PEPS配置
       * </pre>
       */
      public Builder setPeps(int value) {
        bitField0_ |= 0x00000020;
        peps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 peps = 6;</code>
       *
       * <pre>
       *PEPS配置
       * </pre>
       */
      public Builder clearPeps() {
        bitField0_ = (bitField0_ & ~0x00000020);
        peps_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tpms = 7;
      private int tpms_ ;
      /**
       * <code>optional int32 tpms = 7;</code>
       *
       * <pre>
       *TPMS配置
       * </pre>
       */
      public boolean hasTpms() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 tpms = 7;</code>
       *
       * <pre>
       *TPMS配置
       * </pre>
       */
      public int getTpms() {
        return tpms_;
      }
      /**
       * <code>optional int32 tpms = 7;</code>
       *
       * <pre>
       *TPMS配置
       * </pre>
       */
      public Builder setTpms(int value) {
        bitField0_ |= 0x00000040;
        tpms_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tpms = 7;</code>
       *
       * <pre>
       *TPMS配置
       * </pre>
       */
      public Builder clearTpms() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tpms_ = 0;
        onChanged();
        return this;
      }

      // optional int32 srs = 8;
      private int srs_ ;
      /**
       * <code>optional int32 srs = 8;</code>
       *
       * <pre>
       *SRS配置
       * </pre>
       */
      public boolean hasSrs() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 srs = 8;</code>
       *
       * <pre>
       *SRS配置
       * </pre>
       */
      public int getSrs() {
        return srs_;
      }
      /**
       * <code>optional int32 srs = 8;</code>
       *
       * <pre>
       *SRS配置
       * </pre>
       */
      public Builder setSrs(int value) {
        bitField0_ |= 0x00000080;
        srs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 srs = 8;</code>
       *
       * <pre>
       *SRS配置
       * </pre>
       */
      public Builder clearSrs() {
        bitField0_ = (bitField0_ & ~0x00000080);
        srs_ = 0;
        onChanged();
        return this;
      }

      // optional int32 eps = 9;
      private int eps_ ;
      /**
       * <code>optional int32 eps = 9;</code>
       *
       * <pre>
       *EPS配置
       * </pre>
       */
      public boolean hasEps() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 eps = 9;</code>
       *
       * <pre>
       *EPS配置
       * </pre>
       */
      public int getEps() {
        return eps_;
      }
      /**
       * <code>optional int32 eps = 9;</code>
       *
       * <pre>
       *EPS配置
       * </pre>
       */
      public Builder setEps(int value) {
        bitField0_ |= 0x00000100;
        eps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 eps = 9;</code>
       *
       * <pre>
       *EPS配置
       * </pre>
       */
      public Builder clearEps() {
        bitField0_ = (bitField0_ & ~0x00000100);
        eps_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ems = 10;
      private int ems_ ;
      /**
       * <code>optional int32 ems = 10;</code>
       *
       * <pre>
       *EMS配置
       * </pre>
       */
      public boolean hasEms() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 ems = 10;</code>
       *
       * <pre>
       *EMS配置
       * </pre>
       */
      public int getEms() {
        return ems_;
      }
      /**
       * <code>optional int32 ems = 10;</code>
       *
       * <pre>
       *EMS配置
       * </pre>
       */
      public Builder setEms(int value) {
        bitField0_ |= 0x00000200;
        ems_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ems = 10;</code>
       *
       * <pre>
       *EMS配置
       * </pre>
       */
      public Builder clearEms() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ems_ = 0;
        onChanged();
        return this;
      }

      // optional int32 immo = 11;
      private int immo_ ;
      /**
       * <code>optional int32 immo = 11;</code>
       *
       * <pre>
       *IMMO配置
       * </pre>
       */
      public boolean hasImmo() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 immo = 11;</code>
       *
       * <pre>
       *IMMO配置
       * </pre>
       */
      public int getImmo() {
        return immo_;
      }
      /**
       * <code>optional int32 immo = 11;</code>
       *
       * <pre>
       *IMMO配置
       * </pre>
       */
      public Builder setImmo(int value) {
        bitField0_ |= 0x00000400;
        immo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 immo = 11;</code>
       *
       * <pre>
       *IMMO配置
       * </pre>
       */
      public Builder clearImmo() {
        bitField0_ = (bitField0_ & ~0x00000400);
        immo_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bcm = 12;
      private int bcm_ ;
      /**
       * <code>optional int32 bcm = 12;</code>
       *
       * <pre>
       *BCM配置
       * </pre>
       */
      public boolean hasBcm() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 bcm = 12;</code>
       *
       * <pre>
       *BCM配置
       * </pre>
       */
      public int getBcm() {
        return bcm_;
      }
      /**
       * <code>optional int32 bcm = 12;</code>
       *
       * <pre>
       *BCM配置
       * </pre>
       */
      public Builder setBcm(int value) {
        bitField0_ |= 0x00000800;
        bcm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bcm = 12;</code>
       *
       * <pre>
       *BCM配置
       * </pre>
       */
      public Builder clearBcm() {
        bitField0_ = (bitField0_ & ~0x00000800);
        bcm_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tcu = 13;
      private int tcu_ ;
      /**
       * <code>optional int32 tcu = 13;</code>
       *
       * <pre>
       *TCU配置
       * </pre>
       */
      public boolean hasTcu() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 tcu = 13;</code>
       *
       * <pre>
       *TCU配置
       * </pre>
       */
      public int getTcu() {
        return tcu_;
      }
      /**
       * <code>optional int32 tcu = 13;</code>
       *
       * <pre>
       *TCU配置
       * </pre>
       */
      public Builder setTcu(int value) {
        bitField0_ |= 0x00001000;
        tcu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tcu = 13;</code>
       *
       * <pre>
       *TCU配置
       * </pre>
       */
      public Builder clearTcu() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tcu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 icm = 14;
      private int icm_ ;
      /**
       * <code>optional int32 icm = 14;</code>
       *
       * <pre>
       *ICM配置
       * </pre>
       */
      public boolean hasIcm() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 icm = 14;</code>
       *
       * <pre>
       *ICM配置
       * </pre>
       */
      public int getIcm() {
        return icm_;
      }
      /**
       * <code>optional int32 icm = 14;</code>
       *
       * <pre>
       *ICM配置
       * </pre>
       */
      public Builder setIcm(int value) {
        bitField0_ |= 0x00002000;
        icm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 icm = 14;</code>
       *
       * <pre>
       *ICM配置
       * </pre>
       */
      public Builder clearIcm() {
        bitField0_ = (bitField0_ & ~0x00002000);
        icm_ = 0;
        onChanged();
        return this;
      }

      // optional int32 apm = 15;
      private int apm_ ;
      /**
       * <code>optional int32 apm = 15;</code>
       *
       * <pre>
       *APM配置
       * </pre>
       */
      public boolean hasApm() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 apm = 15;</code>
       *
       * <pre>
       *APM配置
       * </pre>
       */
      public int getApm() {
        return apm_;
      }
      /**
       * <code>optional int32 apm = 15;</code>
       *
       * <pre>
       *APM配置
       * </pre>
       */
      public Builder setApm(int value) {
        bitField0_ |= 0x00004000;
        apm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 apm = 15;</code>
       *
       * <pre>
       *APM配置
       * </pre>
       */
      public Builder clearApm() {
        bitField0_ = (bitField0_ & ~0x00004000);
        apm_ = 0;
        onChanged();
        return this;
      }

      // optional bytes configContent = 16;
      private com.google.protobuf.ByteString configContent_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes configContent = 16;</code>
       *
       * <pre>
       *电控单元配置的源码
       * </pre>
       */
      public boolean hasConfigContent() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bytes configContent = 16;</code>
       *
       * <pre>
       *电控单元配置的源码
       * </pre>
       */
      public com.google.protobuf.ByteString getConfigContent() {
        return configContent_;
      }
      /**
       * <code>optional bytes configContent = 16;</code>
       *
       * <pre>
       *电控单元配置的源码
       * </pre>
       */
      public Builder setConfigContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        configContent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes configContent = 16;</code>
       *
       * <pre>
       *电控单元配置的源码
       * </pre>
       */
      public Builder clearConfigContent() {
        bitField0_ = (bitField0_ & ~0x00008000);
        configContent_ = getDefaultInstance().getConfigContent();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.ECUConfig)
    }

    static {
      defaultInstance = new ECUConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.ECUConfig)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_MapEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_MapEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_OBDInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_OBDInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsSimpleInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsSimpleInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_BaseStationInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_BaseStationInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_BaseStationAddress_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_BaseStationAddress_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_WifiAPInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_WifiAPInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_YDWInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_YDWInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_NodeLostInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_NodeLostInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_NodeFaultInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_NodeFaultInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_FaultLightStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_FaultLightStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_PengaodaGpsInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_PengaodaGpsInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_BeiJingInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_BeiJingInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_BatteryUnitInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_BatteryUnitInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_BatteryUnitVoltageInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_BatteryUnitVoltageInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_BatteryVoltageInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_BatteryVoltageInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_BatteryUnitTemperatureInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_BatteryUnitTemperatureInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_BatteryTemperatureInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_BatteryTemperatureInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_VehicleRegisterInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_VehicleRegisterInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_BatteryExtremumInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_BatteryExtremumInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_VKModBus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_VKModBus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_KeLongInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_KeLongInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsBaseInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsBaseInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsRoadInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsRoadInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsPointInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsPointInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsReferPosition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsReferPosition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_AlarmInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_AlarmInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_UnitVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_UnitVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_OperateDataBaseInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_OperateDataBaseInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_OperateData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_OperateData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_ShortMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_ShortMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_PengaodaTravelInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_PengaodaTravelInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_TravelInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_TravelInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_FaultDefine_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_FaultDefine_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_FaultInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_FaultInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_AppNoticeInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_AppNoticeInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_ECUConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_ECUConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013GBoss.proto\022\005gboss\"&\n\010MapEntry\022\013\n\003key\030" +
      "\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\327\006\n\007OBDInfo\022\021\n\trema" +
      "inOil\030\001 \001(\005\022\030\n\020remainPercentOil\030\002 \001(\005\022\022\n" +
      "\naverageOil\030\003 \001(\005\022\017\n\007hourOil\030\004 \001(\005\022\025\n\rto" +
      "talDistance\030\005 \001(\005\022\030\n\020waterTemperature\030\006 " +
      "\001(\005\022\021\n\treviseOil\030\007 \001(\005\022\025\n\rrotationSpeed\030" +
      "\010 \001(\005\022\034\n\024intakeAirTemperature\030\t \001(\005\022\024\n\014a" +
      "irDischange\030\n \001(\005\022\"\n\totherInfo\030\013 \003(\0132\017.g" +
      "boss.MapEntry\022\022\n\ncallLetter\030\014 \001(\t\022\017\n\007gps" +
      "Time\030\r \001(\003\022\r\n\005speed\030\016 \001(\005\022\026\n\016remainDista",
      "nce\030\017 \001(\005\022\020\n\010unitType\030\020 \001(\005\022\017\n\007history\030\021" +
      " \001(\005\022\026\n\016batteryVoltage\030\022 \001(\005\022\022\n\nengineLo" +
      "ad\030\023 \001(\005\022\r\n\005gears\030\024 \001(\005\022\017\n\007isdrive\030\025 \001(\010" +
      "\022\022\n\ndriveratio\030\026 \001(\005\022\017\n\007isbreak\030\027 \001(\010\022\022\n" +
      "\nbreakratio\030\030 \001(\005\022\024\n\014chargestatus\030\031 \001(\005\022" +
      "\034\n\024motorctrltemperature\030\032 \001(\005\022\030\n\020motorte" +
      "mperature\030\033 \001(\005\022\022\n\nmotorspeed\030\034 \001(\005\022\024\n\014m" +
      "otorvoltage\030\035 \001(\005\022\024\n\014motorcurrent\030\036 \001(\005\022" +
      "\031\n\021aircontemperature\030\037 \001(\005\022\033\n\023batterytot" +
      "alvoltage\030  \001(\005\022\033\n\023batterytotalcurrent\030!",
      " \001(\005\022\027\n\017remaindcapacity\030\" \001(\005\022\022\n\nresista" +
      "nce\030# \001(\005\022\020\n\010totalOil\030$ \001(\005\022\026\n\016totalDriv" +
      "eTime\030% \001(\005\022\031\n\021dashboardDistance\030& \001(\005\"\336" +
      "\001\n\rGpsSimpleInfo\022\017\n\007gpsTime\030\001 \002(\003\022\013\n\003loc" +
      "\030\002 \002(\010\022\013\n\003lat\030\003 \002(\005\022\013\n\003lng\030\004 \002(\005\022\r\n\005spee" +
      "d\030\005 \002(\005\022\016\n\006course\030\006 \002(\005\022\016\n\006status\030\007 \003(\005\022" +
      "\025\n\rtotalDistance\030\010 \001(\005\022\013\n\003oil\030\t \001(\005\022\030\n\020r" +
      "emainPercentOil\030\n \001(\005\022\020\n\010canspeed\030\013 \001(\005\022" +
      "\026\n\016remainDistance\030\014 \001(\005\"S\n\017BaseStationIn" +
      "fo\022\013\n\003mcc\030\001 \002(\t\022\013\n\003mnc\030\002 \002(\t\022\013\n\003lac\030\003 \002(",
      "\005\022\013\n\003cid\030\004 \002(\005\022\014\n\004bsss\030\005 \001(\005\"V\n\022BaseStat" +
      "ionAddress\022\013\n\003lat\030\001 \002(\005\022\013\n\003lng\030\002 \002(\005\022\021\n\t" +
      "precision\030\003 \001(\005\022\023\n\013addressDesc\030\004 \001(\t\"@\n\n" +
      "WifiAPInfo\022\014\n\004ssid\030\001 \002(\t\022\013\n\003mac\030\002 \002(\t\022\027\n" +
      "\017signalIntensity\030\003 \002(\005\"u\n\007YDWInfo\022\023\n\013tem" +
      "perature\030\001 \002(\005\022\023\n\013drivingTime\030\002 \002(\005\022\025\n\rt" +
      "otalDistance\030\003 \002(\005\022\021\n\tunitPower\030\004 \002(\005\022\026\n" +
      "\016bluetoothPower\030\005 \002(\005\"j\n\014NodeLostInfo\022\013\n" +
      "\003abs\030\001 \001(\005\022\013\n\003esp\030\002 \001(\005\022\013\n\003ems\030\003 \001(\005\022\014\n\004" +
      "peps\030\004 \001(\005\022\013\n\003tcu\030\005 \001(\005\022\013\n\003bcm\030\006 \001(\005\022\013\n\003",
      "icm\030\007 \001(\005\"y\n\rNodeFaultInfo\022\013\n\003ebd\030\001 \001(\005\022" +
      "\013\n\003abs\030\002 \001(\005\022\013\n\003esp\030\003 \001(\005\022\013\n\003svs\030\004 \001(\005\022\013" +
      "\n\003mil\030\005 \001(\005\022\013\n\003tcu\030\006 \001(\005\022\014\n\004peps\030\007 \001(\005\022\014" +
      "\n\004tbox\030\010 \001(\005\"j\n\020FaultLightStatus\022)\n\014node" +
      "LostInfo\030\001 \001(\0132\023.gboss.NodeLostInfo\022+\n\rn" +
      "odeFaultInfo\030\002 \001(\0132\024.gboss.NodeFaultInfo" +
      "\"\254\001\n\017PengaodaGpsInfo\022\026\n\016travelSerialNo\030\001" +
      " \001(\005\022\022\n\ndeviceUUID\030\002 \001(\005\022\033\n\023softHardware" +
      "Version\030\003 \001(\t\022\r\n\005gsmId\030\004 \001(\t\022\014\n\004imsi\030\005 \001" +
      "(\t\022\r\n\005iccid\030\006 \001(\t\022\013\n\003vin\030\007 \001(\t\022\027\n\017vehicl",
      "eDistance\030\010 \001(\005\"\344\002\n\013BeiJingInfo\022\r\n\005devid" +
      "\030\001 \001(\005\022\014\n\004rfid\030\002 \001(\005\022\017\n\007voltage\030\003 \001(\005\022\023\n" +
      "\013electricity\030\004 \001(\005\022\020\n\010gsmvalue\030\005 \001(\005\022\026\n\016" +
      "satellitecount\030\006 \001(\005\022\017\n\007mileage\030\007 \001(\005\022\024\n" +
      "\014chargeStatus\030\010 \001(\t\022\025\n\rfillGunStatus\030\t \001" +
      "(\t\022\021\n\taccStatus\030\n \001(\t\022\021\n\toilStatus\030\013 \001(\t" +
      "\022\024\n\014defendStatus\030\014 \001(\t\022\031\n\021centralLockSta" +
      "tus\030\r \001(\t\022\022\n\ndoorStatus\030\016 \001(\t\022\023\n\013lightSt" +
      "atus\030\017 \001(\t\022\024\n\014windowStatus\030\020 \001(\t\022\024\n\014smal" +
      "lVoltage\030\021 \001(\005\"\223\001\n\017BatteryUnitInfo\022\016\n\006un",
      "itsn\030\001 \002(\005\022\023\n\013batterytype\030\002 \002(\005\022\024\n\014manuf" +
      "acturer\030\003 \001(\t\022\026\n\016manufacturDate\030\004 \001(\003\022\027\n" +
      "\017nominalcapacity\030\005 \001(\005\022\024\n\014ratedvoltage\030\006" +
      " \001(\005\"@\n\026BatteryUnitVoltageInfo\022\016\n\006unitsn" +
      "\030\001 \002(\005\022\026\n\016batteryvoltage\030\002 \003(\005\"H\n\022Batter" +
      "yVoltageInfo\0222\n\013unitvoltage\030\001 \003(\0132\035.gbos" +
      "s.BatteryUnitVoltageInfo\"A\n\032BatteryUnitT" +
      "emperatureInfo\022\016\n\006unitsn\030\001 \002(\005\022\023\n\013temper" +
      "ature\030\002 \003(\005\"T\n\026BatteryTemperatureInfo\022:\n" +
      "\017unittemperature\030\001 \003(\0132!.gboss.BatteryUn",
      "itTemperatureInfo\"\250\001\n\023VehicleRegisterInf" +
      "o\022\024\n\014registerTime\030\001 \002(\003\022\022\n\ncallLetter\030\002 " +
      "\002(\t\022\017\n\007plateno\030\003 \001(\t\022\016\n\006unitno\030\004 \001(\t\022\013\n\003" +
      "vin\030\005 \001(\t\022\020\n\010engineno\030\006 \001(\t\022\'\n\007battery\030\007" +
      " \003(\0132\026.gboss.BatteryUnitInfo\"\315\002\n\023Battery" +
      "ExtremumInfo\022\022\n\nmaxvoltage\030\001 \001(\005\022\030\n\020maxv" +
      "oltageunitsn\030\002 \001(\005\022\030\n\020maxvoltagebodysn\030\003" +
      " \001(\005\022\022\n\nminvoltage\030\004 \001(\005\022\030\n\020minvoltageun" +
      "itsn\030\005 \001(\005\022\030\n\020minvoltagebodysn\030\006 \001(\005\022\026\n\016" +
      "maxtemperature\030\007 \001(\005\022\034\n\024maxtemperatureun",
      "itsn\030\010 \001(\005\022\034\n\024maxtemperaturebodysn\030\t \001(\005" +
      "\022\026\n\016mintemperature\030\n \001(\005\022\034\n\024mintemperatu" +
      "reunitsn\030\013 \001(\005\022\034\n\024mintemperaturebodysn\030\014" +
      " \001(\005\"\376\001\n\010VKModBus\022\017\n\007devType\030\001 \002(\t\022\r\n\005de" +
      "vID\030\002 \002(\t\022\016\n\006action\030\003 \001(\005\022\016\n\006devPWD\030\004 \001(" +
      "\t\022\017\n\007devLock\030\005 \001(\005\022\021\n\tdevStatus\030\006 \001(\005\022\025\n" +
      "\rsingleMeasure\030\007 \001(\005\022\024\n\014singleAmount\030\010 \001" +
      "(\005\022\021\n\tremainder\030\t \001(\005\022\024\n\014totalMeasure\030\n " +
      "\001(\003\022\023\n\013totalAmount\030\013 \001(\003\022\020\n\010workTime\030\014 \001" +
      "(\003\022\021\n\tworkCount\030\r \001(\005\"\261\001\n\nKeLongInfo\022\027\n\017",
      "quickBrakeCount\030\001 \001(\005\022\031\n\021quickSpeedUpCou" +
      "nt\030\002 \001(\005\022\026\n\016quickTurnCount\030\003 \001(\005\022\024\n\014coll" +
      "ideCount\030\004 \001(\005\022\031\n\021idleAlarmProperty\030\005 \001(" +
      "\005\022\020\n\010idleTime\030\006 \001(\005\022\024\n\014idleTotalOil\030\007 \001(" +
      "\005\"\253\007\n\013GpsBaseInfo\022\017\n\007gpsTime\030\001 \002(\003\022\013\n\003lo" +
      "c\030\002 \002(\010\022\013\n\003lat\030\003 \002(\005\022\013\n\003lng\030\004 \002(\005\022\r\n\005spe" +
      "ed\030\005 \002(\005\022\016\n\006course\030\006 \002(\005\022\016\n\006status\030\007 \003(\005" +
      "\022\025\n\rtotalDistance\030\010 \001(\005\022\013\n\003oil\030\t \001(\005\022\022\n\n" +
      "oilPercent\030\n \001(\005\022\024\n\014temperature1\030\013 \001(\005\022\024" +
      "\n\014temperature2\030\014 \001(\005\022%\n\014appendParams\030\r \003",
      "(\0132\017.gboss.MapEntry\022\037\n\007obdInfo\030\016 \001(\0132\016.g" +
      "boss.OBDInfo\022,\n\014baseStations\030\017 \003(\0132\026.gbo" +
      "ss.BaseStationInfo\022*\n\007address\030\020 \001(\0132\031.gb" +
      "oss.BaseStationAddress\022\037\n\007ydwInfo\030\021 \001(\0132" +
      "\016.gboss.YDWInfo\022\016\n\006signal\030\022 \001(\005\0221\n\020fault" +
      "LightStatus\030\023 \001(\0132\027.gboss.FaultLightStat" +
      "us\022\016\n\006height\030\024 \001(\005\022\'\n\007padInfo\030\025 \001(\0132\026.gb" +
      "oss.PengaodaGpsInfo\022\'\n\013beijingInfo\030\026 \001(\013" +
      "2\022.gboss.BeiJingInfo\022\022\n\nAccTimeLen\030\027 \001(\005" +
      "\0221\n\016batteryvoltage\030\030 \001(\0132\031.gboss.Battery",
      "VoltageInfo\0229\n\022batterytemperature\030\031 \001(\0132" +
      "\035.gboss.BatteryTemperatureInfo\0223\n\017batter" +
      "yextremum\030\032 \001(\0132\032.gboss.BatteryExtremumI" +
      "nfo\022!\n\010vkmodbus\030\033 \001(\0132\017.gboss.VKModBus\022\026" +
      "\n\016satelliteCount\030\034 \001(\005\022\014\n\004pdop\030\035 \001(\005\022\014\n\004" +
      "hdop\030\036 \001(\005\022\014\n\004vdop\030\037 \001(\005\022%\n\nkeLongInfo\030 " +
      " \001(\0132\021.gboss.KeLongInfo\022&\n\013wifiAPInfos\030!" +
      " \003(\0132\021.gboss.WifiAPInfo\"n\n\013GpsRoadInfo\022\014" +
      "\n\004name\030\001 \002(\t\022\r\n\005level\030\002 \002(\005\022\020\n\010distance\030" +
      "\003 \002(\005\022\n\n\002id\030\004 \001(\005\022\021\n\tlatOnRoad\030\005 \001(\005\022\021\n\t",
      "lngOnRoad\030\006 \001(\005\"H\n\014GpsPointInfo\022\014\n\004name\030" +
      "\001 \002(\t\022\014\n\004type\030\002 \002(\005\022\020\n\010distance\030\003 \002(\005\022\n\n" +
      "\002id\030\004 \001(\005\"\212\001\n\020GpsReferPosition\022\020\n\010provin" +
      "ce\030\001 \002(\t\022\014\n\004city\030\002 \002(\t\022\016\n\006county\030\003 \002(\t\022!" +
      "\n\005roads\030\004 \003(\0132\022.gboss.GpsRoadInfo\022#\n\006poi" +
      "nts\030\005 \003(\0132\023.gboss.GpsPointInfo\"\225\001\n\007GpsIn" +
      "fo\022\022\n\ncallLetter\030\001 \002(\t\022$\n\010baseInfo\030\002 \002(\013" +
      "2\022.gboss.GpsBaseInfo\022.\n\rreferPosition\030\003 " +
      "\001(\0132\027.gboss.GpsReferPosition\022\017\n\007content\030" +
      "\004 \001(\014\022\017\n\007history\030\005 \001(\005\"\272\001\n\tAlarmInfo\022\022\n\n",
      "callLetter\030\001 \002(\t\022$\n\010baseInfo\030\002 \002(\0132\022.gbo" +
      "ss.GpsBaseInfo\022.\n\rreferPosition\030\003 \001(\0132\027." +
      "gboss.GpsReferPosition\022\017\n\007content\030\004 \001(\014\022" +
      "\017\n\007history\030\005 \001(\005\022\020\n\010unittype\030\006 \001(\005\022\017\n\007tr" +
      "igger\030\007 \001(\005\"Q\n\013UnitVersion\022\022\n\ncallLetter" +
      "\030\001 \002(\t\022\017\n\007version\030\002 \002(\t\022\016\n\006result\030\003 \001(\005\022" +
      "\r\n\005canId\030\004 \001(\005\"\260\002\n\023OperateDataBaseInfo\022\r" +
      "\n\005price\030\001 \002(\005\022\021\n\tcountTime\030\002 \002(\005\022\024\n\014oper" +
      "ateMoney\030\003 \002(\005\022\023\n\013operateMile\030\004 \002(\005\022\020\n\010n" +
      "ullMile\030\005 \001(\005\022\025\n\roverSpeedMile\030\006 \001(\005\022\026\n\016",
      "overSpeedCount\030\007 \001(\005\022\025\n\rpowerOffCount\030\010 " +
      "\001(\005\022\024\n\014powerOffTime\030\t \001(\005\022\022\n\nsequenceNo\030" +
      "\n \001(\005\022%\n\014appendParams\030\013 \003(\0132\017.gboss.MapE" +
      "ntry\022\020\n\010perprice\030\014 \001(\005\022\021\n\tlicenseno\030\r \001(" +
      "\t\"\221\002\n\013OperateData\022\022\n\ncallLetter\030\001 \002(\t\022,\n" +
      "\010baseInfo\030\002 \002(\0132\032.gboss.OperateDataBaseI" +
      "nfo\022$\n\010startGps\030\003 \002(\0132\022.gboss.GpsBaseInf" +
      "o\022)\n\010startPoi\030\004 \001(\0132\027.gboss.GpsReferPosi" +
      "tion\022#\n\007stopGps\030\005 \002(\0132\022.gboss.GpsBaseInf" +
      "o\022(\n\007stopPoi\030\006 \001(\0132\027.gboss.GpsReferPosit",
      "ion\022\017\n\007content\030\007 \001(\014\022\017\n\007history\030\010 \001(\005\"A\n" +
      "\014ShortMessage\022\022\n\ncallLetter\030\001 \002(\t\022\013\n\003msg" +
      "\030\002 \002(\t\022\020\n\010recvTime\030\003 \001(\003\"\254\004\n\022PengaodaTra" +
      "velInfo\022\026\n\016speed0Distance\030\001 \001(\005\022\027\n\017speed" +
      "20Distance\030\002 \001(\005\022\027\n\017speed40Distance\030\003 \001(" +
      "\005\022\027\n\017speed60Distance\030\004 \001(\005\022\027\n\017speed80Dis" +
      "tance\030\005 \001(\005\022\030\n\020speed100Distance\030\006 \001(\005\022\030\n" +
      "\020speed120Distance\030\007 \001(\005\022\035\n\025rotationRate0" +
      "Distance\030\010 \001(\005\022 \n\030rotationRate1000Distan" +
      "ce\030\t \001(\005\022 \n\030rotationRate2000Distance\030\n \001",
      "(\005\022 \n\030rotationRate3000Distance\030\013 \001(\005\022 \n\030" +
      "rotationRate4000Distance\030\014 \001(\005\022 \n\030rotati" +
      "onRate5000Distance\030\r \001(\005\022\035\n\025throttleOpen" +
      "0Distance\030\016 \001(\005\022\036\n\026throttleOpen20Distanc" +
      "e\030\017 \001(\005\022\036\n\026throttleOpen40Distance\030\020 \001(\005\022" +
      "\036\n\026throttleOpen60Distance\030\021 \001(\005\022\036\n\026throt" +
      "tleOpen80Distance\030\022 \001(\005\"\302\006\n\nTravelInfo\022\022" +
      "\n\ncallLetter\030\001 \002(\t\022\021\n\tstartTime\030\002 \002(\003\022\017\n" +
      "\007endTime\030\003 \002(\003\022\020\n\010distance\030\004 \001(\005\022\020\n\010maxS" +
      "peed\030\005 \001(\005\022\025\n\roverSpeedTime\030\006 \001(\005\022\027\n\017qui",
      "ckBrakeCount\030\007 \001(\005\022\033\n\023emergencyBrakeCoun" +
      "t\030\010 \001(\005\022\031\n\021quickSpeedUpCount\030\t \001(\005\022\035\n\025em" +
      "ergencySpeedUpCount\030\n \001(\005\022\024\n\014averageSpee" +
      "d\030\013 \001(\005\022\033\n\023maxWaterTemperature\030\014 \001(\005\022\030\n\020" +
      "maxRotationSpeed\030\r \001(\005\022\017\n\007voltage\030\016 \001(\005\022" +
      "\020\n\010totalOil\030\017 \001(\005\022\022\n\naverageOil\030\020 \001(\005\022\030\n" +
      "\020tiredDrivingTime\030\021 \001(\005\022\024\n\014serialNumber\030" +
      "\022 \001(\005\022\034\n\024averageRotationSpeed\030\023 \001(\005\022\016\n\006m" +
      "axOil\030\024 \001(\005\022\020\n\010idleTime\030\025 \001(\005\022$\n\010startGp" +
      "s\030\026 \001(\0132\022.gboss.GpsBaseInfo\022.\n\rstartRefe",
      "rPos\030\027 \001(\0132\027.gboss.GpsReferPosition\022\"\n\006e" +
      "ndGps\030\030 \001(\0132\022.gboss.GpsBaseInfo\022,\n\013endRe" +
      "ferPos\030\031 \001(\0132\027.gboss.GpsReferPosition\022\017\n" +
      "\007history\030\032 \001(\005\022\026\n\016quickTurnCount\030\033 \001(\005\022\026" +
      "\n\016overSpeedCount\030\034 \001(\005\022\022\n\nBrakeCount\030\035 \001" +
      "(\005\022\027\n\017maxThrottleOpen\030\036 \001(\005\022\033\n\023averageTh" +
      "rottleOpen\030\037 \001(\005\022*\n\007padInfo\030  \001(\0132\031.gbos" +
      "s.PengaodaTravelInfo\"3\n\013FaultDefine\022\021\n\tf" +
      "aultType\030\001 \001(\005\022\021\n\tfaultCode\030\002 \003(\t\"y\n\tFau" +
      "ltInfo\022\022\n\ncallLetter\030\001 \002(\t\022\021\n\tfaultTime\030",
      "\002 \002(\003\022\"\n\006faults\030\003 \003(\0132\022.gboss.FaultDefin" +
      "e\022\020\n\010unitType\030\004 \001(\005\022\017\n\007history\030\005 \001(\005\"\207\002\n" +
      "\rAppNoticeInfo\022\022\n\ncallLetter\030\001 \002(\t\022\r\n\005ti" +
      "tle\030\002 \002(\t\022\017\n\007content\030\003 \002(\t\022$\n\010baseInfo\030\004" +
      " \001(\0132\022.gboss.GpsBaseInfo\022.\n\rreferPositio" +
      "n\030\005 \001(\0132\027.gboss.GpsReferPosition\022\r\n\005cmdI" +
      "d\030\006 \001(\005\022\022\n\ncmdretcode\030\007 \001(\005\022\021\n\tcmdretmsg" +
      "\030\010 \001(\t\022\022\n\nnoticetype\030\t \001(\005\022\023\n\013alarmstatu" +
      "s\030\n \001(\005\022\r\n\005cmdsn\030\013 \001(\t\"\374\001\n\tECUConfig\022\022\n\n" +
      "callLetter\030\001 \002(\t\022\022\n\nupdateTime\030\002 \002(\003\022\021\n\t",
      "checkFlag\030\003 \001(\005\022\013\n\003abs\030\004 \001(\005\022\013\n\003esp\030\005 \001(" +
      "\005\022\014\n\004peps\030\006 \001(\005\022\014\n\004tpms\030\007 \001(\005\022\013\n\003srs\030\010 \001" +
      "(\005\022\013\n\003eps\030\t \001(\005\022\013\n\003ems\030\n \001(\005\022\014\n\004immo\030\013 \001" +
      "(\005\022\013\n\003bcm\030\014 \001(\005\022\013\n\003tcu\030\r \001(\005\022\013\n\003icm\030\016 \001(" +
      "\005\022\013\n\003apm\030\017 \001(\005\022\025\n\rconfigContent\030\020 \001(\014B)\n" +
      "\030cc.chinagps.gateway.buffB\rGBossDataBuff"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_gboss_MapEntry_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_gboss_MapEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_MapEntry_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_gboss_OBDInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_gboss_OBDInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_OBDInfo_descriptor,
              new java.lang.String[] { "RemainOil", "RemainPercentOil", "AverageOil", "HourOil", "TotalDistance", "WaterTemperature", "ReviseOil", "RotationSpeed", "IntakeAirTemperature", "AirDischange", "OtherInfo", "CallLetter", "GpsTime", "Speed", "RemainDistance", "UnitType", "History", "BatteryVoltage", "EngineLoad", "Gears", "Isdrive", "Driveratio", "Isbreak", "Breakratio", "Chargestatus", "Motorctrltemperature", "Motortemperature", "Motorspeed", "Motorvoltage", "Motorcurrent", "Aircontemperature", "Batterytotalvoltage", "Batterytotalcurrent", "Remaindcapacity", "Resistance", "TotalOil", "TotalDriveTime", "DashboardDistance", });
          internal_static_gboss_GpsSimpleInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_gboss_GpsSimpleInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsSimpleInfo_descriptor,
              new java.lang.String[] { "GpsTime", "Loc", "Lat", "Lng", "Speed", "Course", "Status", "TotalDistance", "Oil", "RemainPercentOil", "Canspeed", "RemainDistance", });
          internal_static_gboss_BaseStationInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_gboss_BaseStationInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_BaseStationInfo_descriptor,
              new java.lang.String[] { "Mcc", "Mnc", "Lac", "Cid", "Bsss", });
          internal_static_gboss_BaseStationAddress_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_gboss_BaseStationAddress_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_BaseStationAddress_descriptor,
              new java.lang.String[] { "Lat", "Lng", "Precision", "AddressDesc", });
          internal_static_gboss_WifiAPInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_gboss_WifiAPInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_WifiAPInfo_descriptor,
              new java.lang.String[] { "Ssid", "Mac", "SignalIntensity", });
          internal_static_gboss_YDWInfo_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_gboss_YDWInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_YDWInfo_descriptor,
              new java.lang.String[] { "Temperature", "DrivingTime", "TotalDistance", "UnitPower", "BluetoothPower", });
          internal_static_gboss_NodeLostInfo_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_gboss_NodeLostInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_NodeLostInfo_descriptor,
              new java.lang.String[] { "Abs", "Esp", "Ems", "Peps", "Tcu", "Bcm", "Icm", });
          internal_static_gboss_NodeFaultInfo_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_gboss_NodeFaultInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_NodeFaultInfo_descriptor,
              new java.lang.String[] { "Ebd", "Abs", "Esp", "Svs", "Mil", "Tcu", "Peps", "Tbox", });
          internal_static_gboss_FaultLightStatus_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_gboss_FaultLightStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_FaultLightStatus_descriptor,
              new java.lang.String[] { "NodeLostInfo", "NodeFaultInfo", });
          internal_static_gboss_PengaodaGpsInfo_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_gboss_PengaodaGpsInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_PengaodaGpsInfo_descriptor,
              new java.lang.String[] { "TravelSerialNo", "DeviceUUID", "SoftHardwareVersion", "GsmId", "Imsi", "Iccid", "Vin", "VehicleDistance", });
          internal_static_gboss_BeiJingInfo_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_gboss_BeiJingInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_BeiJingInfo_descriptor,
              new java.lang.String[] { "Devid", "Rfid", "Voltage", "Electricity", "Gsmvalue", "Satellitecount", "Mileage", "ChargeStatus", "FillGunStatus", "AccStatus", "OilStatus", "DefendStatus", "CentralLockStatus", "DoorStatus", "LightStatus", "WindowStatus", "SmallVoltage", });
          internal_static_gboss_BatteryUnitInfo_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_gboss_BatteryUnitInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_BatteryUnitInfo_descriptor,
              new java.lang.String[] { "Unitsn", "Batterytype", "Manufacturer", "ManufacturDate", "Nominalcapacity", "Ratedvoltage", });
          internal_static_gboss_BatteryUnitVoltageInfo_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_gboss_BatteryUnitVoltageInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_BatteryUnitVoltageInfo_descriptor,
              new java.lang.String[] { "Unitsn", "Batteryvoltage", });
          internal_static_gboss_BatteryVoltageInfo_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_gboss_BatteryVoltageInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_BatteryVoltageInfo_descriptor,
              new java.lang.String[] { "Unitvoltage", });
          internal_static_gboss_BatteryUnitTemperatureInfo_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_gboss_BatteryUnitTemperatureInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_BatteryUnitTemperatureInfo_descriptor,
              new java.lang.String[] { "Unitsn", "Temperature", });
          internal_static_gboss_BatteryTemperatureInfo_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_gboss_BatteryTemperatureInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_BatteryTemperatureInfo_descriptor,
              new java.lang.String[] { "Unittemperature", });
          internal_static_gboss_VehicleRegisterInfo_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_gboss_VehicleRegisterInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_VehicleRegisterInfo_descriptor,
              new java.lang.String[] { "RegisterTime", "CallLetter", "Plateno", "Unitno", "Vin", "Engineno", "Battery", });
          internal_static_gboss_BatteryExtremumInfo_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_gboss_BatteryExtremumInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_BatteryExtremumInfo_descriptor,
              new java.lang.String[] { "Maxvoltage", "Maxvoltageunitsn", "Maxvoltagebodysn", "Minvoltage", "Minvoltageunitsn", "Minvoltagebodysn", "Maxtemperature", "Maxtemperatureunitsn", "Maxtemperaturebodysn", "Mintemperature", "Mintemperatureunitsn", "Mintemperaturebodysn", });
          internal_static_gboss_VKModBus_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_gboss_VKModBus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_VKModBus_descriptor,
              new java.lang.String[] { "DevType", "DevID", "Action", "DevPWD", "DevLock", "DevStatus", "SingleMeasure", "SingleAmount", "Remainder", "TotalMeasure", "TotalAmount", "WorkTime", "WorkCount", });
          internal_static_gboss_KeLongInfo_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_gboss_KeLongInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_KeLongInfo_descriptor,
              new java.lang.String[] { "QuickBrakeCount", "QuickSpeedUpCount", "QuickTurnCount", "CollideCount", "IdleAlarmProperty", "IdleTime", "IdleTotalOil", });
          internal_static_gboss_GpsBaseInfo_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_gboss_GpsBaseInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsBaseInfo_descriptor,
              new java.lang.String[] { "GpsTime", "Loc", "Lat", "Lng", "Speed", "Course", "Status", "TotalDistance", "Oil", "OilPercent", "Temperature1", "Temperature2", "AppendParams", "ObdInfo", "BaseStations", "Address", "YdwInfo", "Signal", "FaultLightStatus", "Height", "PadInfo", "BeijingInfo", "AccTimeLen", "Batteryvoltage", "Batterytemperature", "Batteryextremum", "Vkmodbus", "SatelliteCount", "Pdop", "Hdop", "Vdop", "KeLongInfo", "WifiAPInfos", });
          internal_static_gboss_GpsRoadInfo_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_gboss_GpsRoadInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsRoadInfo_descriptor,
              new java.lang.String[] { "Name", "Level", "Distance", "Id", "LatOnRoad", "LngOnRoad", });
          internal_static_gboss_GpsPointInfo_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_gboss_GpsPointInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsPointInfo_descriptor,
              new java.lang.String[] { "Name", "Type", "Distance", "Id", });
          internal_static_gboss_GpsReferPosition_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_gboss_GpsReferPosition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsReferPosition_descriptor,
              new java.lang.String[] { "Province", "City", "County", "Roads", "Points", });
          internal_static_gboss_GpsInfo_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_gboss_GpsInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsInfo_descriptor,
              new java.lang.String[] { "CallLetter", "BaseInfo", "ReferPosition", "Content", "History", });
          internal_static_gboss_AlarmInfo_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_gboss_AlarmInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_AlarmInfo_descriptor,
              new java.lang.String[] { "CallLetter", "BaseInfo", "ReferPosition", "Content", "History", "Unittype", "Trigger", });
          internal_static_gboss_UnitVersion_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_gboss_UnitVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_UnitVersion_descriptor,
              new java.lang.String[] { "CallLetter", "Version", "Result", "CanId", });
          internal_static_gboss_OperateDataBaseInfo_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_gboss_OperateDataBaseInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_OperateDataBaseInfo_descriptor,
              new java.lang.String[] { "Price", "CountTime", "OperateMoney", "OperateMile", "NullMile", "OverSpeedMile", "OverSpeedCount", "PowerOffCount", "PowerOffTime", "SequenceNo", "AppendParams", "Perprice", "Licenseno", });
          internal_static_gboss_OperateData_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_gboss_OperateData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_OperateData_descriptor,
              new java.lang.String[] { "CallLetter", "BaseInfo", "StartGps", "StartPoi", "StopGps", "StopPoi", "Content", "History", });
          internal_static_gboss_ShortMessage_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_gboss_ShortMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_ShortMessage_descriptor,
              new java.lang.String[] { "CallLetter", "Msg", "RecvTime", });
          internal_static_gboss_PengaodaTravelInfo_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_gboss_PengaodaTravelInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_PengaodaTravelInfo_descriptor,
              new java.lang.String[] { "Speed0Distance", "Speed20Distance", "Speed40Distance", "Speed60Distance", "Speed80Distance", "Speed100Distance", "Speed120Distance", "RotationRate0Distance", "RotationRate1000Distance", "RotationRate2000Distance", "RotationRate3000Distance", "RotationRate4000Distance", "RotationRate5000Distance", "ThrottleOpen0Distance", "ThrottleOpen20Distance", "ThrottleOpen40Distance", "ThrottleOpen60Distance", "ThrottleOpen80Distance", });
          internal_static_gboss_TravelInfo_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_gboss_TravelInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_TravelInfo_descriptor,
              new java.lang.String[] { "CallLetter", "StartTime", "EndTime", "Distance", "MaxSpeed", "OverSpeedTime", "QuickBrakeCount", "EmergencyBrakeCount", "QuickSpeedUpCount", "EmergencySpeedUpCount", "AverageSpeed", "MaxWaterTemperature", "MaxRotationSpeed", "Voltage", "TotalOil", "AverageOil", "TiredDrivingTime", "SerialNumber", "AverageRotationSpeed", "MaxOil", "IdleTime", "StartGps", "StartReferPos", "EndGps", "EndReferPos", "History", "QuickTurnCount", "OverSpeedCount", "BrakeCount", "MaxThrottleOpen", "AverageThrottleOpen", "PadInfo", });
          internal_static_gboss_FaultDefine_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_gboss_FaultDefine_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_FaultDefine_descriptor,
              new java.lang.String[] { "FaultType", "FaultCode", });
          internal_static_gboss_FaultInfo_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_gboss_FaultInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_FaultInfo_descriptor,
              new java.lang.String[] { "CallLetter", "FaultTime", "Faults", "UnitType", "History", });
          internal_static_gboss_AppNoticeInfo_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_gboss_AppNoticeInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_AppNoticeInfo_descriptor,
              new java.lang.String[] { "CallLetter", "Title", "Content", "BaseInfo", "ReferPosition", "CmdId", "Cmdretcode", "Cmdretmsg", "Noticetype", "Alarmstatus", "Cmdsn", });
          internal_static_gboss_ECUConfig_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_gboss_ECUConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_ECUConfig_descriptor,
              new java.lang.String[] { "CallLetter", "UpdateTime", "CheckFlag", "Abs", "Esp", "Peps", "Tpms", "Srs", "Eps", "Ems", "Immo", "Bcm", "Tcu", "Icm", "Apm", "ConfigContent", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
