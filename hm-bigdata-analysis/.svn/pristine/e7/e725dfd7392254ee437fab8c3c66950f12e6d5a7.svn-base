<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.0.xsd   
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/mvc  
		   http://www.springframework.org/schema/mvc/spring-mvc.xsd"  
	>

	<context:component-scan base-package="com.hm.bigdata">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true" />
	<context:property-placeholder location="classpath:hibernate.properties" ignore-unresolvable="true" />
	<context:property-placeholder location="classpath:system.properties" ignore-unresolvable="true" />
	
	<bean id="springContext" class="com.hm.bigdata.util.SpringContext"></bean>
	
	<!-- 自动代理的参数加入代理cglib的 ,则装载bean时，可以用实现类，不一定要用接口类-->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- mysql数据源 -->
	<bean id="mysql1DataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${jdbc_mysql1.driverClassName}" />
		<property name="driverUrl" value="${jdbc_mysql1.url}" />
		<property name="user" value="${jdbc_mysql1.username}"/>
		<property name="password" value="${jdbc_mysql1.password}" />
		<property name="alias" value="${jdbc_mysql1.alias}" />
		<property name="testBeforeUse">
			<value>false</value>
		</property>
    	<property name="houseKeepingSleepTime" value="${jdbc_mysql1.houseKeepingSleepTime}" />
		<property name="maximumConnectionCount" value="${jdbc_mysql1.maximum.connection.count}" />
		<property name="minimumConnectionCount" value="${jdbc_mysql1.minimum.connection.count}" />
		<property name="statistics" value="${jdbc_mysql1.statistics}" />
		<property name="simultaneousBuildThrottle" value="${jdbc_mysql1.simultaneous.build.throttle}" />
		<property name="houseKeepingTestSql"  value="${jdbc_mysql1.houseKeepingTestSql}"  />
		<property name="prototypeCount"  value="${jdbc_mysql1.prototypeCount}"  />
		<property name="trace"  value="${jdbc_mysql1.trace}"  />
		<property name="verbose"  value="${jdbc_mysql1.verbose}"  />
		<property name="maximumActiveTime" value="${jdbc_mysql1.maximumActiveTime}" />
		<property name="delegateProperties">
			<value>
			user=${jdbc_mysql1.username},password=${jdbc_mysql1.password}
			</value>
		</property>
	</bean>

	<!-- 配置sqlSessionFactory工厂 -->
	<bean id="mysql1SessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="mysql1DataSource" />
		<property name="packagesToScan" value="com.hm.bigdata" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.mysql1Dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
				<prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
<!-- 				<prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>
 -->				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}</prop>
				<prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>
			</props>
		</property>
	</bean>

<!-- ================================= 事务控制相关 ============================================= -->
	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true" />

	<!-- 开启注解事务 只对当前配置文件有效 -->
	<tx:annotation-driven transaction-manager="mysql1TxManager" />

	<bean id="mysql1TxManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="mysql1SessionFactory" />
	</bean>

	<tx:advice id="mysql1TxAdvice" transaction-manager="mysql1TxManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED" />
			<!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="mysql1TxPointcut"
			expression="execution(* com.hm.bigdata.service..*.*(..))" />
		<aop:advisor advice-ref="mysql1TxAdvice" pointcut-ref="mysql1TxPointcut" />
	</aop:config>

	<!-- AOP 日志 -->	


	<!-- spring quartz 定时任务-->
	<bean id="alarmFilter" class="com.hm.bigdata.util.hbase.AlarmFilterQuartz"></bean>
	
	<bean id="alarmFilterDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="alarmFilter"/>
		<property name="targetMethod" value="filterHbase"/>
	</bean> 
	
	<bean id="insertMysqlDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="alarmFilter"/>
		<property name="targetMethod" value="insertMysql"/>
	</bean> 
	<!-- trigger -->
	<bean id="alarmTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="alarmFilterDetail"/>
		<property name="cronExpression" value="0 28 14 * * ?"/>
		<!-- 0 55 10 * * ? 秒   分钟  小时  日期   月份  星期   年  --> 
	</bean>
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="insertMysqlDetail"/>
		<property name="repeatCount" value="0"/>
		<property name="repeatInterval" value="60000"/>
		<property name="startDelay" value="60000"/>
	</bean>
	
	<!-- scheduler -->
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<!-- 可以配置多个任务 -->
				<ref bean="alarmTrigger"/>
				<ref bean="simpleTrigger"/>
			</list>
		</property>
	</bean>


 <!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
     <!-- 指定所上传文件的总大小不能超过100m。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
     <property name="maxUploadSize">
        <value>104857600</value>
    </property>
    <property name="maxInMemorySize">
        <value>4096</value>
    </property>
    </bean> 
 
</beans>  