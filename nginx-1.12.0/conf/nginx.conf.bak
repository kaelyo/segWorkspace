#Nginx所用用户和组，window下不指定  
#user  niumd niumd;  

#工作的子进程数量（通常等于CPU数量或者2倍于CPU）  
worker_processes  2;  

#错误日志存放路径  
error_log  logs/error.log;  
error_log  logs/error.log  notice;  
error_log  logs/error.log  info;  

#指定pid存放文件  
pid        logs/nginx.pid;  

events {  
    #使用网络IO模型linux建议epoll，FreeBSD建议采用kqueue，window下不指定。  
    #use epoll;  

    #允许最大连接数  
    worker_connections  2048;  
}  

http {  
    include       mime.types;  
    default_type  application/octet-stream;  

        #定义日志格式  
    #log_format  main  '$remote_addr - $remote_user [$time_local] $request '  
    #                  '"$status" $body_bytes_sent "$http_referer" '  
    #                  '"$http_user_agent" "$http_x_forwarded_for"';  

    #access_log  off;  
    access_log  logs/access.log;  

    client_header_timeout  3m;  
    client_body_timeout    3m;  
    send_timeout           3m;  

    client_header_buffer_size    1k;  
    large_client_header_buffers  4 4k;  

    sendfile        on;  
    tcp_nopush      on;  
    tcp_nodelay     on;  

    #keepalive_timeout  75 20;  
    gzip  on;#启用Gizp压缩  
    #include    gzip.conf;  
    upstream localhost{  
      server localhost:8080 weight=1;  
      server localhost:9090 weight=1000;

     }  

    server {  
            listen       80;  
            server_name  test;     

            location / {  
                   proxy_connect_timeout 3; #nginx跟后端服务器连接超时时间(代理连接超时) 
                   proxy_send_timeout 30; #后端服务器数据回传时间(代理发送超时) 
                   proxy_read_timeout 30; #连接成功后，后端服务器响应时间(代理接收超时) 
                   proxy_pass http://localhost;

	    }  
	    location ~ \.(html|css|png|gif)$ {  
		    root html;  
	    } 
     }  
}