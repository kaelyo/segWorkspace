// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: seginterface.proto

package cc.chinagps.gboss.comcenter.buff;

public final class seginterfaceDataBuff {
  private seginterfaceDataBuff() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface LoginOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string username = 1;
    /**
     * <code>required string username = 1;</code>
     *
     * <pre>
     *用户名, 由赛格导航统一分配
     * </pre>
     */
    boolean hasUsername();
    /**
     * <code>required string username = 1;</code>
     *
     * <pre>
     *用户名, 由赛格导航统一分配
     * </pre>
     */
    java.lang.String getUsername();
    /**
     * <code>required string username = 1;</code>
     *
     * <pre>
     *用户名, 由赛格导航统一分配
     * </pre>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    // required string srcnode = 2;
    /**
     * <code>required string srcnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    boolean hasSrcnode();
    /**
     * <code>required string srcnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    java.lang.String getSrcnode();
    /**
     * <code>required string srcnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    com.google.protobuf.ByteString
        getSrcnodeBytes();

    // required string dstnode = 3;
    /**
     * <code>required string dstnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    boolean hasDstnode();
    /**
     * <code>required string dstnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    java.lang.String getDstnode();
    /**
     * <code>required string dstnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    com.google.protobuf.ByteString
        getDstnodeBytes();

    // required int64 logintime = 4;
    /**
     * <code>required int64 logintime = 4;</code>
     *
     * <pre>
     *登录时间,如果登录时间和服务器时间相差大于2小时，则失败，
     * </pre>
     */
    boolean hasLogintime();
    /**
     * <code>required int64 logintime = 4;</code>
     *
     * <pre>
     *登录时间,如果登录时间和服务器时间相差大于2小时，则失败，
     * </pre>
     */
    long getLogintime();

    // required string password = 5;
    /**
     * <code>required string password = 5;</code>
     *
     * <pre>
     *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    boolean hasPassword();
    /**
     * <code>required string password = 5;</code>
     *
     * <pre>
     *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    java.lang.String getPassword();
    /**
     * <code>required string password = 5;</code>
     *
     * <pre>
     *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    // required bytes rsamodules = 6;
    /**
     * <code>required bytes rsamodules = 6;</code>
     *
     * <pre>
     *加密算法：MD5（时间+原密码），再32位字符串中的第9位到19位（从0开始）
     *例如：
     * </pre>
     */
    boolean hasRsamodules();
    /**
     * <code>required bytes rsamodules = 6;</code>
     *
     * <pre>
     *加密算法：MD5（时间+原密码），再32位字符串中的第9位到19位（从0开始）
     *例如：
     * </pre>
     */
    com.google.protobuf.ByteString getRsamodules();

    // required bytes rsapublickey = 7;
    /**
     * <code>required bytes rsapublickey = 7;</code>
     *
     * <pre>
     *RSA公钥
     * </pre>
     */
    boolean hasRsapublickey();
    /**
     * <code>required bytes rsapublickey = 7;</code>
     *
     * <pre>
     *RSA公钥
     * </pre>
     */
    com.google.protobuf.ByteString getRsapublickey();
  }
  /**
   * Protobuf type {@code outinterface.Login}
   *
   * <pre>
   *************************************************************************************
   * 登录、登录应答内容
   ************************************************************************************
   * </pre>
   */
  public static final class Login extends
      com.google.protobuf.GeneratedMessage
      implements LoginOrBuilder {
    // Use Login.newBuilder() to construct.
    private Login(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Login(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Login defaultInstance;
    public static Login getDefaultInstance() {
      return defaultInstance;
    }

    public Login getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Login(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              username_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              srcnode_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              dstnode_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              logintime_ = input.readInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              password_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              rsamodules_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              rsapublickey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login.Builder.class);
    }

    public static com.google.protobuf.Parser<Login> PARSER =
        new com.google.protobuf.AbstractParser<Login>() {
      public Login parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Login(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Login> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string username = 1;
    public static final int USERNAME_FIELD_NUMBER = 1;
    private java.lang.Object username_;
    /**
     * <code>required string username = 1;</code>
     *
     * <pre>
     *用户名, 由赛格导航统一分配
     * </pre>
     */
    public boolean hasUsername() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string username = 1;</code>
     *
     * <pre>
     *用户名, 由赛格导航统一分配
     * </pre>
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          username_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string username = 1;</code>
     *
     * <pre>
     *用户名, 由赛格导航统一分配
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string srcnode = 2;
    public static final int SRCNODE_FIELD_NUMBER = 2;
    private java.lang.Object srcnode_;
    /**
     * <code>required string srcnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public boolean hasSrcnode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string srcnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public java.lang.String getSrcnode() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          srcnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string srcnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSrcnodeBytes() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string dstnode = 3;
    public static final int DSTNODE_FIELD_NUMBER = 3;
    private java.lang.Object dstnode_;
    /**
     * <code>required string dstnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public boolean hasDstnode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string dstnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public java.lang.String getDstnode() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dstnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dstnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDstnodeBytes() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 logintime = 4;
    public static final int LOGINTIME_FIELD_NUMBER = 4;
    private long logintime_;
    /**
     * <code>required int64 logintime = 4;</code>
     *
     * <pre>
     *登录时间,如果登录时间和服务器时间相差大于2小时，则失败，
     * </pre>
     */
    public boolean hasLogintime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 logintime = 4;</code>
     *
     * <pre>
     *登录时间,如果登录时间和服务器时间相差大于2小时，则失败，
     * </pre>
     */
    public long getLogintime() {
      return logintime_;
    }

    // required string password = 5;
    public static final int PASSWORD_FIELD_NUMBER = 5;
    private java.lang.Object password_;
    /**
     * <code>required string password = 5;</code>
     *
     * <pre>
     *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string password = 5;</code>
     *
     * <pre>
     *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string password = 5;</code>
     *
     * <pre>
     *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required bytes rsamodules = 6;
    public static final int RSAMODULES_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString rsamodules_;
    /**
     * <code>required bytes rsamodules = 6;</code>
     *
     * <pre>
     *加密算法：MD5（时间+原密码），再32位字符串中的第9位到19位（从0开始）
     *例如：
     * </pre>
     */
    public boolean hasRsamodules() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bytes rsamodules = 6;</code>
     *
     * <pre>
     *加密算法：MD5（时间+原密码），再32位字符串中的第9位到19位（从0开始）
     *例如：
     * </pre>
     */
    public com.google.protobuf.ByteString getRsamodules() {
      return rsamodules_;
    }

    // required bytes rsapublickey = 7;
    public static final int RSAPUBLICKEY_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString rsapublickey_;
    /**
     * <code>required bytes rsapublickey = 7;</code>
     *
     * <pre>
     *RSA公钥
     * </pre>
     */
    public boolean hasRsapublickey() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bytes rsapublickey = 7;</code>
     *
     * <pre>
     *RSA公钥
     * </pre>
     */
    public com.google.protobuf.ByteString getRsapublickey() {
      return rsapublickey_;
    }

    private void initFields() {
      username_ = "";
      srcnode_ = "";
      dstnode_ = "";
      logintime_ = 0L;
      password_ = "";
      rsamodules_ = com.google.protobuf.ByteString.EMPTY;
      rsapublickey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUsername()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSrcnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDstnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLogintime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPassword()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRsamodules()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRsapublickey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUsernameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDstnodeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, logintime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, rsamodules_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, rsapublickey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUsernameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDstnodeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, logintime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, rsamodules_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, rsapublickey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code outinterface.Login}
     *
     * <pre>
     *************************************************************************************
     * 登录、登录应答内容
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.LoginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        username_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        srcnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        dstnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        logintime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        rsamodules_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        rsapublickey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login build() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login buildPartial() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login result = new cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.username_ = username_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.srcnode_ = srcnode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dstnode_ = dstnode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.logintime_ = logintime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rsamodules_ = rsamodules_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rsapublickey_ = rsapublickey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login other) {
        if (other == cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login.getDefaultInstance()) return this;
        if (other.hasUsername()) {
          bitField0_ |= 0x00000001;
          username_ = other.username_;
          onChanged();
        }
        if (other.hasSrcnode()) {
          bitField0_ |= 0x00000002;
          srcnode_ = other.srcnode_;
          onChanged();
        }
        if (other.hasDstnode()) {
          bitField0_ |= 0x00000004;
          dstnode_ = other.dstnode_;
          onChanged();
        }
        if (other.hasLogintime()) {
          setLogintime(other.getLogintime());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000010;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasRsamodules()) {
          setRsamodules(other.getRsamodules());
        }
        if (other.hasRsapublickey()) {
          setRsapublickey(other.getRsapublickey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUsername()) {
          
          return false;
        }
        if (!hasSrcnode()) {
          
          return false;
        }
        if (!hasDstnode()) {
          
          return false;
        }
        if (!hasLogintime()) {
          
          return false;
        }
        if (!hasPassword()) {
          
          return false;
        }
        if (!hasRsamodules()) {
          
          return false;
        }
        if (!hasRsapublickey()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string username = 1;
      private java.lang.Object username_ = "";
      /**
       * <code>required string username = 1;</code>
       *
       * <pre>
       *用户名, 由赛格导航统一分配
       * </pre>
       */
      public boolean hasUsername() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string username = 1;</code>
       *
       * <pre>
       *用户名, 由赛格导航统一分配
       * </pre>
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string username = 1;</code>
       *
       * <pre>
       *用户名, 由赛格导航统一分配
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string username = 1;</code>
       *
       * <pre>
       *用户名, 由赛格导航统一分配
       * </pre>
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        username_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string username = 1;</code>
       *
       * <pre>
       *用户名, 由赛格导航统一分配
       * </pre>
       */
      public Builder clearUsername() {
        bitField0_ = (bitField0_ & ~0x00000001);
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      /**
       * <code>required string username = 1;</code>
       *
       * <pre>
       *用户名, 由赛格导航统一分配
       * </pre>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        username_ = value;
        onChanged();
        return this;
      }

      // required string srcnode = 2;
      private java.lang.Object srcnode_ = "";
      /**
       * <code>required string srcnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public boolean hasSrcnode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string srcnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public java.lang.String getSrcnode() {
        java.lang.Object ref = srcnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          srcnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string srcnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSrcnodeBytes() {
        java.lang.Object ref = srcnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string srcnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setSrcnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        srcnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder clearSrcnode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        srcnode_ = getDefaultInstance().getSrcnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setSrcnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        srcnode_ = value;
        onChanged();
        return this;
      }

      // required string dstnode = 3;
      private java.lang.Object dstnode_ = "";
      /**
       * <code>required string dstnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public boolean hasDstnode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string dstnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public java.lang.String getDstnode() {
        java.lang.Object ref = dstnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dstnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dstnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDstnodeBytes() {
        java.lang.Object ref = dstnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dstnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setDstnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        dstnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder clearDstnode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dstnode_ = getDefaultInstance().getDstnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setDstnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        dstnode_ = value;
        onChanged();
        return this;
      }

      // required int64 logintime = 4;
      private long logintime_ ;
      /**
       * <code>required int64 logintime = 4;</code>
       *
       * <pre>
       *登录时间,如果登录时间和服务器时间相差大于2小时，则失败，
       * </pre>
       */
      public boolean hasLogintime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 logintime = 4;</code>
       *
       * <pre>
       *登录时间,如果登录时间和服务器时间相差大于2小时，则失败，
       * </pre>
       */
      public long getLogintime() {
        return logintime_;
      }
      /**
       * <code>required int64 logintime = 4;</code>
       *
       * <pre>
       *登录时间,如果登录时间和服务器时间相差大于2小时，则失败，
       * </pre>
       */
      public Builder setLogintime(long value) {
        bitField0_ |= 0x00000008;
        logintime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 logintime = 4;</code>
       *
       * <pre>
       *登录时间,如果登录时间和服务器时间相差大于2小时，则失败，
       * </pre>
       */
      public Builder clearLogintime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        logintime_ = 0L;
        onChanged();
        return this;
      }

      // required string password = 5;
      private java.lang.Object password_ = "";
      /**
       * <code>required string password = 5;</code>
       *
       * <pre>
       *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string password = 5;</code>
       *
       * <pre>
       *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string password = 5;</code>
       *
       * <pre>
       *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string password = 5;</code>
       *
       * <pre>
       *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 5;</code>
       *
       * <pre>
       *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000010);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 5;</code>
       *
       * <pre>
       *时间在本协议中都是(从格林威治时间1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        password_ = value;
        onChanged();
        return this;
      }

      // required bytes rsamodules = 6;
      private com.google.protobuf.ByteString rsamodules_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes rsamodules = 6;</code>
       *
       * <pre>
       *加密算法：MD5（时间+原密码），再32位字符串中的第9位到19位（从0开始）
       *例如：
       * </pre>
       */
      public boolean hasRsamodules() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bytes rsamodules = 6;</code>
       *
       * <pre>
       *加密算法：MD5（时间+原密码），再32位字符串中的第9位到19位（从0开始）
       *例如：
       * </pre>
       */
      public com.google.protobuf.ByteString getRsamodules() {
        return rsamodules_;
      }
      /**
       * <code>required bytes rsamodules = 6;</code>
       *
       * <pre>
       *加密算法：MD5（时间+原密码），再32位字符串中的第9位到19位（从0开始）
       *例如：
       * </pre>
       */
      public Builder setRsamodules(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        rsamodules_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes rsamodules = 6;</code>
       *
       * <pre>
       *加密算法：MD5（时间+原密码），再32位字符串中的第9位到19位（从0开始）
       *例如：
       * </pre>
       */
      public Builder clearRsamodules() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rsamodules_ = getDefaultInstance().getRsamodules();
        onChanged();
        return this;
      }

      // required bytes rsapublickey = 7;
      private com.google.protobuf.ByteString rsapublickey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes rsapublickey = 7;</code>
       *
       * <pre>
       *RSA公钥
       * </pre>
       */
      public boolean hasRsapublickey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bytes rsapublickey = 7;</code>
       *
       * <pre>
       *RSA公钥
       * </pre>
       */
      public com.google.protobuf.ByteString getRsapublickey() {
        return rsapublickey_;
      }
      /**
       * <code>required bytes rsapublickey = 7;</code>
       *
       * <pre>
       *RSA公钥
       * </pre>
       */
      public Builder setRsapublickey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        rsapublickey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes rsapublickey = 7;</code>
       *
       * <pre>
       *RSA公钥
       * </pre>
       */
      public Builder clearRsapublickey() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rsapublickey_ = getDefaultInstance().getRsapublickey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:outinterface.Login)
    }

    static {
      defaultInstance = new Login(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:outinterface.Login)
  }

  public interface Login_ACKOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 retcode = 1;
    /**
     * <code>required int32 retcode = 1;</code>
     *
     * <pre>
     *登录结果(ResultCode)
     * </pre>
     */
    boolean hasRetcode();
    /**
     * <code>required int32 retcode = 1;</code>
     *
     * <pre>
     *登录结果(ResultCode)
     * </pre>
     */
    int getRetcode();

    // optional string retmsg = 2;
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    boolean hasRetmsg();
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    java.lang.String getRetmsg();
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getRetmsgBytes();

    // required string srcnode = 3;
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    boolean hasSrcnode();
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    java.lang.String getSrcnode();
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    com.google.protobuf.ByteString
        getSrcnodeBytes();

    // required string dstnode = 4;
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    boolean hasDstnode();
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    java.lang.String getDstnode();
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    com.google.protobuf.ByteString
        getDstnodeBytes();

    // optional bytes deskey = 5;
    /**
     * <code>optional bytes deskey = 5;</code>
     *
     * <pre>
     *通信加密的deskey, 用客户端公钥加密
     * </pre>
     */
    boolean hasDeskey();
    /**
     * <code>optional bytes deskey = 5;</code>
     *
     * <pre>
     *通信加密的deskey, 用客户端公钥加密
     * </pre>
     */
    com.google.protobuf.ByteString getDeskey();
  }
  /**
   * Protobuf type {@code outinterface.Login_ACK}
   */
  public static final class Login_ACK extends
      com.google.protobuf.GeneratedMessage
      implements Login_ACKOrBuilder {
    // Use Login_ACK.newBuilder() to construct.
    private Login_ACK(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Login_ACK(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Login_ACK defaultInstance;
    public static Login_ACK getDefaultInstance() {
      return defaultInstance;
    }

    public Login_ACK getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Login_ACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retcode_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              retmsg_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              srcnode_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              dstnode_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              deskey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_ACK_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_ACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK.Builder.class);
    }

    public static com.google.protobuf.Parser<Login_ACK> PARSER =
        new com.google.protobuf.AbstractParser<Login_ACK>() {
      public Login_ACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Login_ACK(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Login_ACK> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 retcode = 1;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retcode_;
    /**
     * <code>required int32 retcode = 1;</code>
     *
     * <pre>
     *登录结果(ResultCode)
     * </pre>
     */
    public boolean hasRetcode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 retcode = 1;</code>
     *
     * <pre>
     *登录结果(ResultCode)
     * </pre>
     */
    public int getRetcode() {
      return retcode_;
    }

    // optional string retmsg = 2;
    public static final int RETMSG_FIELD_NUMBER = 2;
    private java.lang.Object retmsg_;
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    public boolean hasRetmsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    public java.lang.String getRetmsg() {
      java.lang.Object ref = retmsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          retmsg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRetmsgBytes() {
      java.lang.Object ref = retmsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        retmsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string srcnode = 3;
    public static final int SRCNODE_FIELD_NUMBER = 3;
    private java.lang.Object srcnode_;
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public boolean hasSrcnode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public java.lang.String getSrcnode() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          srcnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSrcnodeBytes() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string dstnode = 4;
    public static final int DSTNODE_FIELD_NUMBER = 4;
    private java.lang.Object dstnode_;
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public boolean hasDstnode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public java.lang.String getDstnode() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dstnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDstnodeBytes() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes deskey = 5;
    public static final int DESKEY_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString deskey_;
    /**
     * <code>optional bytes deskey = 5;</code>
     *
     * <pre>
     *通信加密的deskey, 用客户端公钥加密
     * </pre>
     */
    public boolean hasDeskey() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes deskey = 5;</code>
     *
     * <pre>
     *通信加密的deskey, 用客户端公钥加密
     * </pre>
     */
    public com.google.protobuf.ByteString getDeskey() {
      return deskey_;
    }

    private void initFields() {
      retcode_ = 0;
      retmsg_ = "";
      srcnode_ = "";
      dstnode_ = "";
      deskey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRetcode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSrcnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDstnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, retcode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getRetmsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getDstnodeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, deskey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, retcode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getRetmsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDstnodeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, deskey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code outinterface.Login_ACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_ACK_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_ACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retcode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        retmsg_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        srcnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        dstnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        deskey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Login_ACK_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK build() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK buildPartial() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK result = new cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retcode_ = retcode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.retmsg_ = retmsg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.srcnode_ = srcnode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dstnode_ = dstnode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.deskey_ = deskey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK other) {
        if (other == cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK.getDefaultInstance()) return this;
        if (other.hasRetcode()) {
          setRetcode(other.getRetcode());
        }
        if (other.hasRetmsg()) {
          bitField0_ |= 0x00000002;
          retmsg_ = other.retmsg_;
          onChanged();
        }
        if (other.hasSrcnode()) {
          bitField0_ |= 0x00000004;
          srcnode_ = other.srcnode_;
          onChanged();
        }
        if (other.hasDstnode()) {
          bitField0_ |= 0x00000008;
          dstnode_ = other.dstnode_;
          onChanged();
        }
        if (other.hasDeskey()) {
          setDeskey(other.getDeskey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetcode()) {
          
          return false;
        }
        if (!hasSrcnode()) {
          
          return false;
        }
        if (!hasDstnode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Login_ACK) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 retcode = 1;
      private int retcode_ ;
      /**
       * <code>required int32 retcode = 1;</code>
       *
       * <pre>
       *登录结果(ResultCode)
       * </pre>
       */
      public boolean hasRetcode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 retcode = 1;</code>
       *
       * <pre>
       *登录结果(ResultCode)
       * </pre>
       */
      public int getRetcode() {
        return retcode_;
      }
      /**
       * <code>required int32 retcode = 1;</code>
       *
       * <pre>
       *登录结果(ResultCode)
       * </pre>
       */
      public Builder setRetcode(int value) {
        bitField0_ |= 0x00000001;
        retcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 retcode = 1;</code>
       *
       * <pre>
       *登录结果(ResultCode)
       * </pre>
       */
      public Builder clearRetcode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retcode_ = 0;
        onChanged();
        return this;
      }

      // optional string retmsg = 2;
      private java.lang.Object retmsg_ = "";
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public boolean hasRetmsg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public java.lang.String getRetmsg() {
        java.lang.Object ref = retmsg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          retmsg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRetmsgBytes() {
        java.lang.Object ref = retmsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          retmsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public Builder setRetmsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        retmsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public Builder clearRetmsg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        retmsg_ = getDefaultInstance().getRetmsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public Builder setRetmsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        retmsg_ = value;
        onChanged();
        return this;
      }

      // required string srcnode = 3;
      private java.lang.Object srcnode_ = "";
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public boolean hasSrcnode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public java.lang.String getSrcnode() {
        java.lang.Object ref = srcnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          srcnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSrcnodeBytes() {
        java.lang.Object ref = srcnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setSrcnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        srcnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder clearSrcnode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        srcnode_ = getDefaultInstance().getSrcnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setSrcnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        srcnode_ = value;
        onChanged();
        return this;
      }

      // required string dstnode = 4;
      private java.lang.Object dstnode_ = "";
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public boolean hasDstnode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public java.lang.String getDstnode() {
        java.lang.Object ref = dstnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dstnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDstnodeBytes() {
        java.lang.Object ref = dstnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setDstnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        dstnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder clearDstnode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dstnode_ = getDefaultInstance().getDstnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setDstnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        dstnode_ = value;
        onChanged();
        return this;
      }

      // optional bytes deskey = 5;
      private com.google.protobuf.ByteString deskey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes deskey = 5;</code>
       *
       * <pre>
       *通信加密的deskey, 用客户端公钥加密
       * </pre>
       */
      public boolean hasDeskey() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes deskey = 5;</code>
       *
       * <pre>
       *通信加密的deskey, 用客户端公钥加密
       * </pre>
       */
      public com.google.protobuf.ByteString getDeskey() {
        return deskey_;
      }
      /**
       * <code>optional bytes deskey = 5;</code>
       *
       * <pre>
       *通信加密的deskey, 用客户端公钥加密
       * </pre>
       */
      public Builder setDeskey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        deskey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes deskey = 5;</code>
       *
       * <pre>
       *通信加密的deskey, 用客户端公钥加密
       * </pre>
       */
      public Builder clearDeskey() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deskey_ = getDefaultInstance().getDeskey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:outinterface.Login_ACK)
    }

    static {
      defaultInstance = new Login_ACK(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:outinterface.Login_ACK)
  }

  public interface LogoutOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string srcnode = 1;
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    boolean hasSrcnode();
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    java.lang.String getSrcnode();
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    com.google.protobuf.ByteString
        getSrcnodeBytes();

    // required string dstnode = 2;
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    boolean hasDstnode();
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    java.lang.String getDstnode();
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    com.google.protobuf.ByteString
        getDstnodeBytes();
  }
  /**
   * Protobuf type {@code outinterface.Logout}
   *
   * <pre>
   *************************************************************************************
   * 退录、退录应答没有内容, 只有消息ID
   ************************************************************************************
   * </pre>
   */
  public static final class Logout extends
      com.google.protobuf.GeneratedMessage
      implements LogoutOrBuilder {
    // Use Logout.newBuilder() to construct.
    private Logout(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Logout(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Logout defaultInstance;
    public static Logout getDefaultInstance() {
      return defaultInstance;
    }

    public Logout getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Logout(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              srcnode_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              dstnode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout.Builder.class);
    }

    public static com.google.protobuf.Parser<Logout> PARSER =
        new com.google.protobuf.AbstractParser<Logout>() {
      public Logout parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Logout(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Logout> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string srcnode = 1;
    public static final int SRCNODE_FIELD_NUMBER = 1;
    private java.lang.Object srcnode_;
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public boolean hasSrcnode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public java.lang.String getSrcnode() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          srcnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSrcnodeBytes() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string dstnode = 2;
    public static final int DSTNODE_FIELD_NUMBER = 2;
    private java.lang.Object dstnode_;
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public boolean hasDstnode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public java.lang.String getDstnode() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dstnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDstnodeBytes() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      srcnode_ = "";
      dstnode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSrcnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDstnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDstnodeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDstnodeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code outinterface.Logout}
     *
     * <pre>
     *************************************************************************************
     * 退录、退录应答没有内容, 只有消息ID
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.LogoutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        srcnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        dstnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout build() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout buildPartial() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout result = new cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.srcnode_ = srcnode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dstnode_ = dstnode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout other) {
        if (other == cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout.getDefaultInstance()) return this;
        if (other.hasSrcnode()) {
          bitField0_ |= 0x00000001;
          srcnode_ = other.srcnode_;
          onChanged();
        }
        if (other.hasDstnode()) {
          bitField0_ |= 0x00000002;
          dstnode_ = other.dstnode_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSrcnode()) {
          
          return false;
        }
        if (!hasDstnode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string srcnode = 1;
      private java.lang.Object srcnode_ = "";
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public boolean hasSrcnode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public java.lang.String getSrcnode() {
        java.lang.Object ref = srcnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          srcnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSrcnodeBytes() {
        java.lang.Object ref = srcnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setSrcnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        srcnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder clearSrcnode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        srcnode_ = getDefaultInstance().getSrcnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setSrcnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        srcnode_ = value;
        onChanged();
        return this;
      }

      // required string dstnode = 2;
      private java.lang.Object dstnode_ = "";
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public boolean hasDstnode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public java.lang.String getDstnode() {
        java.lang.Object ref = dstnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dstnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDstnodeBytes() {
        java.lang.Object ref = dstnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setDstnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dstnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder clearDstnode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dstnode_ = getDefaultInstance().getDstnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setDstnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dstnode_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:outinterface.Logout)
    }

    static {
      defaultInstance = new Logout(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:outinterface.Logout)
  }

  public interface Logout_ACKOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 retcode = 1;
    /**
     * <code>required int32 retcode = 1;</code>
     *
     * <pre>
     *退录结果(ResultCode)
     * </pre>
     */
    boolean hasRetcode();
    /**
     * <code>required int32 retcode = 1;</code>
     *
     * <pre>
     *退录结果(ResultCode)
     * </pre>
     */
    int getRetcode();

    // optional string retmsg = 2;
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    boolean hasRetmsg();
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    java.lang.String getRetmsg();
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getRetmsgBytes();

    // required string srcnode = 3;
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    boolean hasSrcnode();
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    java.lang.String getSrcnode();
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    com.google.protobuf.ByteString
        getSrcnodeBytes();

    // required string dstnode = 4;
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    boolean hasDstnode();
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    java.lang.String getDstnode();
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    com.google.protobuf.ByteString
        getDstnodeBytes();
  }
  /**
   * Protobuf type {@code outinterface.Logout_ACK}
   */
  public static final class Logout_ACK extends
      com.google.protobuf.GeneratedMessage
      implements Logout_ACKOrBuilder {
    // Use Logout_ACK.newBuilder() to construct.
    private Logout_ACK(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Logout_ACK(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Logout_ACK defaultInstance;
    public static Logout_ACK getDefaultInstance() {
      return defaultInstance;
    }

    public Logout_ACK getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Logout_ACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retcode_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              retmsg_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              srcnode_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              dstnode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_ACK_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_ACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK.Builder.class);
    }

    public static com.google.protobuf.Parser<Logout_ACK> PARSER =
        new com.google.protobuf.AbstractParser<Logout_ACK>() {
      public Logout_ACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Logout_ACK(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Logout_ACK> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 retcode = 1;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retcode_;
    /**
     * <code>required int32 retcode = 1;</code>
     *
     * <pre>
     *退录结果(ResultCode)
     * </pre>
     */
    public boolean hasRetcode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 retcode = 1;</code>
     *
     * <pre>
     *退录结果(ResultCode)
     * </pre>
     */
    public int getRetcode() {
      return retcode_;
    }

    // optional string retmsg = 2;
    public static final int RETMSG_FIELD_NUMBER = 2;
    private java.lang.Object retmsg_;
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    public boolean hasRetmsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    public java.lang.String getRetmsg() {
      java.lang.Object ref = retmsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          retmsg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string retmsg = 2;</code>
     *
     * <pre>
     *结果说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRetmsgBytes() {
      java.lang.Object ref = retmsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        retmsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string srcnode = 3;
    public static final int SRCNODE_FIELD_NUMBER = 3;
    private java.lang.Object srcnode_;
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public boolean hasSrcnode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public java.lang.String getSrcnode() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          srcnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string srcnode = 3;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSrcnodeBytes() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string dstnode = 4;
    public static final int DSTNODE_FIELD_NUMBER = 4;
    private java.lang.Object dstnode_;
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public boolean hasDstnode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public java.lang.String getDstnode() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dstnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dstnode = 4;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDstnodeBytes() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      retcode_ = 0;
      retmsg_ = "";
      srcnode_ = "";
      dstnode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRetcode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSrcnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDstnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, retcode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getRetmsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getDstnodeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, retcode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getRetmsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDstnodeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code outinterface.Logout_ACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_ACK_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_ACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retcode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        retmsg_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        srcnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        dstnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_Logout_ACK_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK build() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK buildPartial() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK result = new cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retcode_ = retcode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.retmsg_ = retmsg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.srcnode_ = srcnode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dstnode_ = dstnode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK other) {
        if (other == cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK.getDefaultInstance()) return this;
        if (other.hasRetcode()) {
          setRetcode(other.getRetcode());
        }
        if (other.hasRetmsg()) {
          bitField0_ |= 0x00000002;
          retmsg_ = other.retmsg_;
          onChanged();
        }
        if (other.hasSrcnode()) {
          bitField0_ |= 0x00000004;
          srcnode_ = other.srcnode_;
          onChanged();
        }
        if (other.hasDstnode()) {
          bitField0_ |= 0x00000008;
          dstnode_ = other.dstnode_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetcode()) {
          
          return false;
        }
        if (!hasSrcnode()) {
          
          return false;
        }
        if (!hasDstnode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.Logout_ACK) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 retcode = 1;
      private int retcode_ ;
      /**
       * <code>required int32 retcode = 1;</code>
       *
       * <pre>
       *退录结果(ResultCode)
       * </pre>
       */
      public boolean hasRetcode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 retcode = 1;</code>
       *
       * <pre>
       *退录结果(ResultCode)
       * </pre>
       */
      public int getRetcode() {
        return retcode_;
      }
      /**
       * <code>required int32 retcode = 1;</code>
       *
       * <pre>
       *退录结果(ResultCode)
       * </pre>
       */
      public Builder setRetcode(int value) {
        bitField0_ |= 0x00000001;
        retcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 retcode = 1;</code>
       *
       * <pre>
       *退录结果(ResultCode)
       * </pre>
       */
      public Builder clearRetcode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retcode_ = 0;
        onChanged();
        return this;
      }

      // optional string retmsg = 2;
      private java.lang.Object retmsg_ = "";
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public boolean hasRetmsg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public java.lang.String getRetmsg() {
        java.lang.Object ref = retmsg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          retmsg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRetmsgBytes() {
        java.lang.Object ref = retmsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          retmsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public Builder setRetmsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        retmsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public Builder clearRetmsg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        retmsg_ = getDefaultInstance().getRetmsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string retmsg = 2;</code>
       *
       * <pre>
       *结果说明
       * </pre>
       */
      public Builder setRetmsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        retmsg_ = value;
        onChanged();
        return this;
      }

      // required string srcnode = 3;
      private java.lang.Object srcnode_ = "";
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public boolean hasSrcnode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public java.lang.String getSrcnode() {
        java.lang.Object ref = srcnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          srcnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSrcnodeBytes() {
        java.lang.Object ref = srcnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setSrcnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        srcnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder clearSrcnode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        srcnode_ = getDefaultInstance().getSrcnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 3;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setSrcnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        srcnode_ = value;
        onChanged();
        return this;
      }

      // required string dstnode = 4;
      private java.lang.Object dstnode_ = "";
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public boolean hasDstnode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public java.lang.String getDstnode() {
        java.lang.Object ref = dstnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dstnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDstnodeBytes() {
        java.lang.Object ref = dstnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setDstnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        dstnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder clearDstnode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dstnode_ = getDefaultInstance().getDstnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 4;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setDstnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        dstnode_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:outinterface.Logout_ACK)
    }

    static {
      defaultInstance = new Logout_ACK(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:outinterface.Logout_ACK)
  }

  public interface ActiveTestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string srcnode = 1;
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    boolean hasSrcnode();
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    java.lang.String getSrcnode();
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    com.google.protobuf.ByteString
        getSrcnodeBytes();

    // required string dstnode = 2;
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    boolean hasDstnode();
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    java.lang.String getDstnode();
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    com.google.protobuf.ByteString
        getDstnodeBytes();
  }
  /**
   * Protobuf type {@code outinterface.ActiveTest}
   *
   * <pre>
   *************************************************************************************
   * 链路检测（心跳）、链路检测（心跳）应答没有内容, 只有消息ID
   ************************************************************************************
   * </pre>
   */
  public static final class ActiveTest extends
      com.google.protobuf.GeneratedMessage
      implements ActiveTestOrBuilder {
    // Use ActiveTest.newBuilder() to construct.
    private ActiveTest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ActiveTest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ActiveTest defaultInstance;
    public static ActiveTest getDefaultInstance() {
      return defaultInstance;
    }

    public ActiveTest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ActiveTest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              srcnode_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              dstnode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest.Builder.class);
    }

    public static com.google.protobuf.Parser<ActiveTest> PARSER =
        new com.google.protobuf.AbstractParser<ActiveTest>() {
      public ActiveTest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActiveTest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ActiveTest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string srcnode = 1;
    public static final int SRCNODE_FIELD_NUMBER = 1;
    private java.lang.Object srcnode_;
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public boolean hasSrcnode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public java.lang.String getSrcnode() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          srcnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSrcnodeBytes() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string dstnode = 2;
    public static final int DSTNODE_FIELD_NUMBER = 2;
    private java.lang.Object dstnode_;
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public boolean hasDstnode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public java.lang.String getDstnode() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dstnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDstnodeBytes() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      srcnode_ = "";
      dstnode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSrcnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDstnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDstnodeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDstnodeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code outinterface.ActiveTest}
     *
     * <pre>
     *************************************************************************************
     * 链路检测（心跳）、链路检测（心跳）应答没有内容, 只有消息ID
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        srcnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        dstnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest build() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest buildPartial() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest result = new cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.srcnode_ = srcnode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dstnode_ = dstnode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest other) {
        if (other == cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest.getDefaultInstance()) return this;
        if (other.hasSrcnode()) {
          bitField0_ |= 0x00000001;
          srcnode_ = other.srcnode_;
          onChanged();
        }
        if (other.hasDstnode()) {
          bitField0_ |= 0x00000002;
          dstnode_ = other.dstnode_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSrcnode()) {
          
          return false;
        }
        if (!hasDstnode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string srcnode = 1;
      private java.lang.Object srcnode_ = "";
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public boolean hasSrcnode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public java.lang.String getSrcnode() {
        java.lang.Object ref = srcnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          srcnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSrcnodeBytes() {
        java.lang.Object ref = srcnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setSrcnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        srcnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder clearSrcnode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        srcnode_ = getDefaultInstance().getSrcnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setSrcnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        srcnode_ = value;
        onChanged();
        return this;
      }

      // required string dstnode = 2;
      private java.lang.Object dstnode_ = "";
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public boolean hasDstnode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public java.lang.String getDstnode() {
        java.lang.Object ref = dstnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dstnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDstnodeBytes() {
        java.lang.Object ref = dstnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setDstnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dstnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder clearDstnode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dstnode_ = getDefaultInstance().getDstnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setDstnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dstnode_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:outinterface.ActiveTest)
    }

    static {
      defaultInstance = new ActiveTest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:outinterface.ActiveTest)
  }

  public interface ActiveTest_ACKOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string srcnode = 1;
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    boolean hasSrcnode();
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    java.lang.String getSrcnode();
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    com.google.protobuf.ByteString
        getSrcnodeBytes();

    // required string dstnode = 2;
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    boolean hasDstnode();
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    java.lang.String getDstnode();
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    com.google.protobuf.ByteString
        getDstnodeBytes();
  }
  /**
   * Protobuf type {@code outinterface.ActiveTest_ACK}
   */
  public static final class ActiveTest_ACK extends
      com.google.protobuf.GeneratedMessage
      implements ActiveTest_ACKOrBuilder {
    // Use ActiveTest_ACK.newBuilder() to construct.
    private ActiveTest_ACK(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ActiveTest_ACK(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ActiveTest_ACK defaultInstance;
    public static ActiveTest_ACK getDefaultInstance() {
      return defaultInstance;
    }

    public ActiveTest_ACK getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ActiveTest_ACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              srcnode_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              dstnode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_ACK_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_ACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK.Builder.class);
    }

    public static com.google.protobuf.Parser<ActiveTest_ACK> PARSER =
        new com.google.protobuf.AbstractParser<ActiveTest_ACK>() {
      public ActiveTest_ACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActiveTest_ACK(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ActiveTest_ACK> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string srcnode = 1;
    public static final int SRCNODE_FIELD_NUMBER = 1;
    private java.lang.Object srcnode_;
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public boolean hasSrcnode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public java.lang.String getSrcnode() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          srcnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string srcnode = 1;</code>
     *
     * <pre>
     *服务端编号（接口中心为COMCENTER）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSrcnodeBytes() {
      java.lang.Object ref = srcnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string dstnode = 2;
    public static final int DSTNODE_FIELD_NUMBER = 2;
    private java.lang.Object dstnode_;
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public boolean hasDstnode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public java.lang.String getDstnode() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dstnode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dstnode = 2;</code>
     *
     * <pre>
     *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDstnodeBytes() {
      java.lang.Object ref = dstnode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstnode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      srcnode_ = "";
      dstnode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSrcnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDstnode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDstnodeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSrcnodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDstnodeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code outinterface.ActiveTest_ACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_ACK_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_ACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK.class, cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        srcnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        dstnode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.internal_static_outinterface_ActiveTest_ACK_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK build() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK buildPartial() {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK result = new cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.srcnode_ = srcnode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dstnode_ = dstnode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK other) {
        if (other == cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK.getDefaultInstance()) return this;
        if (other.hasSrcnode()) {
          bitField0_ |= 0x00000001;
          srcnode_ = other.srcnode_;
          onChanged();
        }
        if (other.hasDstnode()) {
          bitField0_ |= 0x00000002;
          dstnode_ = other.dstnode_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSrcnode()) {
          
          return false;
        }
        if (!hasDstnode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.seginterfaceDataBuff.ActiveTest_ACK) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string srcnode = 1;
      private java.lang.Object srcnode_ = "";
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public boolean hasSrcnode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public java.lang.String getSrcnode() {
        java.lang.Object ref = srcnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          srcnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSrcnodeBytes() {
        java.lang.Object ref = srcnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setSrcnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        srcnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder clearSrcnode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        srcnode_ = getDefaultInstance().getSrcnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string srcnode = 1;</code>
       *
       * <pre>
       *服务端编号（接口中心为COMCENTER）
       * </pre>
       */
      public Builder setSrcnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        srcnode_ = value;
        onChanged();
        return this;
      }

      // required string dstnode = 2;
      private java.lang.Object dstnode_ = "";
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public boolean hasDstnode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public java.lang.String getDstnode() {
        java.lang.Object ref = dstnode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dstnode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDstnodeBytes() {
        java.lang.Object ref = dstnode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstnode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setDstnode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dstnode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder clearDstnode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dstnode_ = getDefaultInstance().getDstnode();
        onChanged();
        return this;
      }
      /**
       * <code>required string dstnode = 2;</code>
       *
       * <pre>
       *客户端(接口程序)编号，编号由赛格导航统一分配，一个编号只能用于一个客户端
       * </pre>
       */
      public Builder setDstnodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dstnode_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:outinterface.ActiveTest_ACK)
    }

    static {
      defaultInstance = new ActiveTest_ACK(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:outinterface.ActiveTest_ACK)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_outinterface_Login_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_outinterface_Login_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_outinterface_Login_ACK_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_outinterface_Login_ACK_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_outinterface_Logout_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_outinterface_Logout_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_outinterface_Logout_ACK_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_outinterface_Logout_ACK_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_outinterface_ActiveTest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_outinterface_ActiveTest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_outinterface_ActiveTest_ACK_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_outinterface_ActiveTest_ACK_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022seginterface.proto\022\014outinterface\032\013GBos" +
      "s.proto\032\017comcenter.proto\"\212\001\n\005Login\022\020\n\010us" +
      "ername\030\001 \002(\t\022\017\n\007srcnode\030\002 \002(\t\022\017\n\007dstnode" +
      "\030\003 \002(\t\022\021\n\tlogintime\030\004 \002(\003\022\020\n\010password\030\005 " +
      "\002(\t\022\022\n\nrsamodules\030\006 \002(\014\022\024\n\014rsapublickey\030" +
      "\007 \002(\014\"^\n\tLogin_ACK\022\017\n\007retcode\030\001 \002(\005\022\016\n\006r" +
      "etmsg\030\002 \001(\t\022\017\n\007srcnode\030\003 \002(\t\022\017\n\007dstnode\030" +
      "\004 \002(\t\022\016\n\006deskey\030\005 \001(\014\"*\n\006Logout\022\017\n\007srcno" +
      "de\030\001 \002(\t\022\017\n\007dstnode\030\002 \002(\t\"O\n\nLogout_ACK\022" +
      "\017\n\007retcode\030\001 \002(\005\022\016\n\006retmsg\030\002 \001(\t\022\017\n\007srcn",
      "ode\030\003 \002(\t\022\017\n\007dstnode\030\004 \002(\t\".\n\nActiveTest" +
      "\022\017\n\007srcnode\030\001 \002(\t\022\017\n\007dstnode\030\002 \002(\t\"2\n\016Ac" +
      "tiveTest_ACK\022\017\n\007srcnode\030\001 \002(\t\022\017\n\007dstnode" +
      "\030\002 \002(\tB8\n cc.chinagps.gboss.comcenter.bu" +
      "ffB\024seginterfaceDataBuff"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_outinterface_Login_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_outinterface_Login_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_outinterface_Login_descriptor,
              new java.lang.String[] { "Username", "Srcnode", "Dstnode", "Logintime", "Password", "Rsamodules", "Rsapublickey", });
          internal_static_outinterface_Login_ACK_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_outinterface_Login_ACK_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_outinterface_Login_ACK_descriptor,
              new java.lang.String[] { "Retcode", "Retmsg", "Srcnode", "Dstnode", "Deskey", });
          internal_static_outinterface_Logout_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_outinterface_Logout_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_outinterface_Logout_descriptor,
              new java.lang.String[] { "Srcnode", "Dstnode", });
          internal_static_outinterface_Logout_ACK_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_outinterface_Logout_ACK_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_outinterface_Logout_ACK_descriptor,
              new java.lang.String[] { "Retcode", "Retmsg", "Srcnode", "Dstnode", });
          internal_static_outinterface_ActiveTest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_outinterface_ActiveTest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_outinterface_ActiveTest_descriptor,
              new java.lang.String[] { "Srcnode", "Dstnode", });
          internal_static_outinterface_ActiveTest_ACK_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_outinterface_ActiveTest_ACK_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_outinterface_ActiveTest_ACK_descriptor,
              new java.lang.String[] { "Srcnode", "Dstnode", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.getDescriptor(),
          cc.chinagps.gboss.comcenter.buff.ComCenterDataBuff.getDescriptor(),
        }, assigner);
  }
  // @@protoc_insertion_point(outer_class_scope)
}
