// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: obd.proto

package hbasedemo;

public final class DemoOBDBuff {
  private DemoOBDBuff() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MapEntryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string key = 1;
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    java.lang.String getKey();
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    // required string value = 2;
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    java.lang.String getValue();
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code gboss.MapEntry}
   *
   * <pre>
   *
   * 附加信息
   * </pre>
   */
  public static final class MapEntry extends
      com.google.protobuf.GeneratedMessage
      implements MapEntryOrBuilder {
    // Use MapEntry.newBuilder() to construct.
    private MapEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapEntry defaultInstance;
    public static MapEntry getDefaultInstance() {
      return defaultInstance;
    }

    public MapEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              key_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hbasedemo.DemoOBDBuff.internal_static_gboss_MapEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hbasedemo.DemoOBDBuff.internal_static_gboss_MapEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hbasedemo.DemoOBDBuff.MapEntry.class, hbasedemo.DemoOBDBuff.MapEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<MapEntry> PARSER =
        new com.google.protobuf.AbstractParser<MapEntry>() {
      public MapEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.Object value_;
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      key_ = "";
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hbasedemo.DemoOBDBuff.MapEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hbasedemo.DemoOBDBuff.MapEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hbasedemo.DemoOBDBuff.MapEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hbasedemo.DemoOBDBuff.MapEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hbasedemo.DemoOBDBuff.MapEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hbasedemo.DemoOBDBuff.MapEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hbasedemo.DemoOBDBuff.MapEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hbasedemo.DemoOBDBuff.MapEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hbasedemo.DemoOBDBuff.MapEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hbasedemo.DemoOBDBuff.MapEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hbasedemo.DemoOBDBuff.MapEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.MapEntry}
     *
     * <pre>
     *
     * 附加信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hbasedemo.DemoOBDBuff.MapEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hbasedemo.DemoOBDBuff.internal_static_gboss_MapEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hbasedemo.DemoOBDBuff.internal_static_gboss_MapEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hbasedemo.DemoOBDBuff.MapEntry.class, hbasedemo.DemoOBDBuff.MapEntry.Builder.class);
      }

      // Construct using hbasedemo.OBDBuff.MapEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hbasedemo.DemoOBDBuff.internal_static_gboss_MapEntry_descriptor;
      }

      public hbasedemo.DemoOBDBuff.MapEntry getDefaultInstanceForType() {
        return hbasedemo.DemoOBDBuff.MapEntry.getDefaultInstance();
      }

      public hbasedemo.DemoOBDBuff.MapEntry build() {
        hbasedemo.DemoOBDBuff.MapEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hbasedemo.DemoOBDBuff.MapEntry buildPartial() {
        hbasedemo.DemoOBDBuff.MapEntry result = new hbasedemo.DemoOBDBuff.MapEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hbasedemo.DemoOBDBuff.MapEntry) {
          return mergeFrom((hbasedemo.DemoOBDBuff.MapEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hbasedemo.DemoOBDBuff.MapEntry other) {
        if (other == hbasedemo.DemoOBDBuff.MapEntry.getDefaultInstance()) return this;
        if (other.hasKey()) {
          bitField0_ |= 0x00000001;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hbasedemo.DemoOBDBuff.MapEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hbasedemo.DemoOBDBuff.MapEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string key = 1;
      private java.lang.Object key_ = "";
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }

      // required string value = 2;
      private java.lang.Object value_ = "";
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.MapEntry)
    }

    static {
      defaultInstance = new MapEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.MapEntry)
  }

  public interface OBDInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 remainOil = 1;
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    boolean hasRemainOil();
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    int getRemainOil();

    // optional int32 remainPercentOil = 2;
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    boolean hasRemainPercentOil();
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    int getRemainPercentOil();

    // optional int32 averageOil = 3;
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    boolean hasAverageOil();
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    int getAverageOil();

    // optional int32 hourOil = 4;
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *小时油耗（单位：0.01升/小时）
     * </pre>
     */
    boolean hasHourOil();
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *小时油耗（单位：0.01升/小时）
     * </pre>
     */
    int getHourOil();

    // optional int32 totalDistance = 5;
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    boolean hasTotalDistance();
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    int getTotalDistance();

    // optional int32 waterTemperature = 6;
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *水温（单位：℃）
     * </pre>
     */
    boolean hasWaterTemperature();
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *水温（单位：℃）
     * </pre>
     */
    int getWaterTemperature();

    // optional int32 reviseOil = 7;
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    boolean hasReviseOil();
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    int getReviseOil();

    // optional int32 rotationSpeed = 8;
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    boolean hasRotationSpeed();
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    int getRotationSpeed();

    // optional int32 intakeAirTemperature = 9;
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    boolean hasIntakeAirTemperature();
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    int getIntakeAirTemperature();

    // optional int32 airDischange = 10;
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    boolean hasAirDischange();
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    int getAirDischange();

    // repeated .gboss.MapEntry otherInfoes = 11;
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    java.util.List<hbasedemo.DemoOBDBuff.MapEntry> 
        getOtherInfoesList();
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    hbasedemo.DemoOBDBuff.MapEntry getOtherInfoes(int index);
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    int getOtherInfoesCount();
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    java.util.List<? extends hbasedemo.DemoOBDBuff.MapEntryOrBuilder> 
        getOtherInfoesOrBuilderList();
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    hbasedemo.DemoOBDBuff.MapEntryOrBuilder getOtherInfoesOrBuilder(
        int index);

    // optional string callLetter = 12;
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // optional int64 gpsTime = 13;
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    boolean hasGpsTime();
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    long getGpsTime();
  }
  /**
   * Protobuf type {@code gboss.OBDInfo}
   *
   * <pre>
   **
   * GPS实时OBD信息(OBD)
   * </pre>
   */
  public static final class OBDInfo extends
      com.google.protobuf.GeneratedMessage
      implements OBDInfoOrBuilder {
    // Use OBDInfo.newBuilder() to construct.
    private OBDInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OBDInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OBDInfo defaultInstance;
    public static OBDInfo getDefaultInstance() {
      return defaultInstance;
    }

    public OBDInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OBDInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              remainOil_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              remainPercentOil_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              averageOil_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              hourOil_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              totalDistance_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              waterTemperature_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              reviseOil_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              rotationSpeed_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              intakeAirTemperature_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              airDischange_ = input.readInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                otherInfoes_ = new java.util.ArrayList<hbasedemo.DemoOBDBuff.MapEntry>();
                mutable_bitField0_ |= 0x00000400;
              }
              otherInfoes_.add(input.readMessage(hbasedemo.DemoOBDBuff.MapEntry.PARSER, extensionRegistry));
              break;
            }
            case 98: {
              bitField0_ |= 0x00000400;
              callLetter_ = input.readBytes();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              gpsTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          otherInfoes_ = java.util.Collections.unmodifiableList(otherInfoes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hbasedemo.DemoOBDBuff.internal_static_gboss_OBDInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hbasedemo.DemoOBDBuff.internal_static_gboss_OBDInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hbasedemo.DemoOBDBuff.OBDInfo.class, hbasedemo.DemoOBDBuff.OBDInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<OBDInfo> PARSER =
        new com.google.protobuf.AbstractParser<OBDInfo>() {
      public OBDInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OBDInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OBDInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 remainOil = 1;
    public static final int REMAINOIL_FIELD_NUMBER = 1;
    private int remainOil_;
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    public boolean hasRemainOil() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    public int getRemainOil() {
      return remainOil_;
    }

    // optional int32 remainPercentOil = 2;
    public static final int REMAINPERCENTOIL_FIELD_NUMBER = 2;
    private int remainPercentOil_;
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public boolean hasRemainPercentOil() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public int getRemainPercentOil() {
      return remainPercentOil_;
    }

    // optional int32 averageOil = 3;
    public static final int AVERAGEOIL_FIELD_NUMBER = 3;
    private int averageOil_;
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public boolean hasAverageOil() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public int getAverageOil() {
      return averageOil_;
    }

    // optional int32 hourOil = 4;
    public static final int HOUROIL_FIELD_NUMBER = 4;
    private int hourOil_;
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *小时油耗（单位：0.01升/小时）
     * </pre>
     */
    public boolean hasHourOil() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *小时油耗（单位：0.01升/小时）
     * </pre>
     */
    public int getHourOil() {
      return hourOil_;
    }

    // optional int32 totalDistance = 5;
    public static final int TOTALDISTANCE_FIELD_NUMBER = 5;
    private int totalDistance_;
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public boolean hasTotalDistance() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public int getTotalDistance() {
      return totalDistance_;
    }

    // optional int32 waterTemperature = 6;
    public static final int WATERTEMPERATURE_FIELD_NUMBER = 6;
    private int waterTemperature_;
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *水温（单位：℃）
     * </pre>
     */
    public boolean hasWaterTemperature() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *水温（单位：℃）
     * </pre>
     */
    public int getWaterTemperature() {
      return waterTemperature_;
    }

    // optional int32 reviseOil = 7;
    public static final int REVISEOIL_FIELD_NUMBER = 7;
    private int reviseOil_;
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    public boolean hasReviseOil() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    public int getReviseOil() {
      return reviseOil_;
    }

    // optional int32 rotationSpeed = 8;
    public static final int ROTATIONSPEED_FIELD_NUMBER = 8;
    private int rotationSpeed_;
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    public boolean hasRotationSpeed() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    public int getRotationSpeed() {
      return rotationSpeed_;
    }

    // optional int32 intakeAirTemperature = 9;
    public static final int INTAKEAIRTEMPERATURE_FIELD_NUMBER = 9;
    private int intakeAirTemperature_;
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    public boolean hasIntakeAirTemperature() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    public int getIntakeAirTemperature() {
      return intakeAirTemperature_;
    }

    // optional int32 airDischange = 10;
    public static final int AIRDISCHANGE_FIELD_NUMBER = 10;
    private int airDischange_;
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    public boolean hasAirDischange() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    public int getAirDischange() {
      return airDischange_;
    }

    // repeated .gboss.MapEntry otherInfoes = 11;
    public static final int OTHERINFOES_FIELD_NUMBER = 11;
    private java.util.List<hbasedemo.DemoOBDBuff.MapEntry> otherInfoes_;
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public java.util.List<hbasedemo.DemoOBDBuff.MapEntry> getOtherInfoesList() {
      return otherInfoes_;
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public java.util.List<? extends hbasedemo.DemoOBDBuff.MapEntryOrBuilder> 
        getOtherInfoesOrBuilderList() {
      return otherInfoes_;
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public int getOtherInfoesCount() {
      return otherInfoes_.size();
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public hbasedemo.DemoOBDBuff.MapEntry getOtherInfoes(int index) {
      return otherInfoes_.get(index);
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public hbasedemo.DemoOBDBuff.MapEntryOrBuilder getOtherInfoesOrBuilder(
        int index) {
      return otherInfoes_.get(index);
    }

    // optional string callLetter = 12;
    public static final int CALLLETTER_FIELD_NUMBER = 12;
    private java.lang.Object callLetter_;
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 gpsTime = 13;
    public static final int GPSTIME_FIELD_NUMBER = 13;
    private long gpsTime_;
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    public long getGpsTime() {
      return gpsTime_;
    }

    private void initFields() {
      remainOil_ = 0;
      remainPercentOil_ = 0;
      averageOil_ = 0;
      hourOil_ = 0;
      totalDistance_ = 0;
      waterTemperature_ = 0;
      reviseOil_ = 0;
      rotationSpeed_ = 0;
      intakeAirTemperature_ = 0;
      airDischange_ = 0;
      otherInfoes_ = java.util.Collections.emptyList();
      callLetter_ = "";
      gpsTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getOtherInfoesCount(); i++) {
        if (!getOtherInfoes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, remainOil_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, averageOil_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, hourOil_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, totalDistance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, waterTemperature_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, reviseOil_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, rotationSpeed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, intakeAirTemperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, airDischange_);
      }
      for (int i = 0; i < otherInfoes_.size(); i++) {
        output.writeMessage(11, otherInfoes_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(13, gpsTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, remainOil_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, averageOil_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, hourOil_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, totalDistance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, waterTemperature_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, reviseOil_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, rotationSpeed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, intakeAirTemperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, airDischange_);
      }
      for (int i = 0; i < otherInfoes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, otherInfoes_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, gpsTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hbasedemo.DemoOBDBuff.OBDInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hbasedemo.DemoOBDBuff.OBDInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hbasedemo.DemoOBDBuff.OBDInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hbasedemo.DemoOBDBuff.OBDInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hbasedemo.DemoOBDBuff.OBDInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hbasedemo.DemoOBDBuff.OBDInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hbasedemo.DemoOBDBuff.OBDInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hbasedemo.DemoOBDBuff.OBDInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hbasedemo.DemoOBDBuff.OBDInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hbasedemo.DemoOBDBuff.OBDInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hbasedemo.DemoOBDBuff.OBDInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.OBDInfo}
     *
     * <pre>
     **
     * GPS实时OBD信息(OBD)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hbasedemo.DemoOBDBuff.OBDInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hbasedemo.DemoOBDBuff.internal_static_gboss_OBDInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hbasedemo.DemoOBDBuff.internal_static_gboss_OBDInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hbasedemo.DemoOBDBuff.OBDInfo.class, hbasedemo.DemoOBDBuff.OBDInfo.Builder.class);
      }

      // Construct using hbasedemo.OBDBuff.OBDInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOtherInfoesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        remainOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        remainPercentOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        averageOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        hourOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        totalDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        waterTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        reviseOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        rotationSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        intakeAirTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        airDischange_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (otherInfoesBuilder_ == null) {
          otherInfoes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          otherInfoesBuilder_.clear();
        }
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hbasedemo.DemoOBDBuff.internal_static_gboss_OBDInfo_descriptor;
      }

      public hbasedemo.DemoOBDBuff.OBDInfo getDefaultInstanceForType() {
        return hbasedemo.DemoOBDBuff.OBDInfo.getDefaultInstance();
      }

      public hbasedemo.DemoOBDBuff.OBDInfo build() {
        hbasedemo.DemoOBDBuff.OBDInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hbasedemo.DemoOBDBuff.OBDInfo buildPartial() {
        hbasedemo.DemoOBDBuff.OBDInfo result = new hbasedemo.DemoOBDBuff.OBDInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.remainOil_ = remainOil_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.remainPercentOil_ = remainPercentOil_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.averageOil_ = averageOil_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hourOil_ = hourOil_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.totalDistance_ = totalDistance_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.waterTemperature_ = waterTemperature_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.reviseOil_ = reviseOil_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rotationSpeed_ = rotationSpeed_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.intakeAirTemperature_ = intakeAirTemperature_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.airDischange_ = airDischange_;
        if (otherInfoesBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            otherInfoes_ = java.util.Collections.unmodifiableList(otherInfoes_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.otherInfoes_ = otherInfoes_;
        } else {
          result.otherInfoes_ = otherInfoesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.gpsTime_ = gpsTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hbasedemo.DemoOBDBuff.OBDInfo) {
          return mergeFrom((hbasedemo.DemoOBDBuff.OBDInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hbasedemo.DemoOBDBuff.OBDInfo other) {
        if (other == hbasedemo.DemoOBDBuff.OBDInfo.getDefaultInstance()) return this;
        if (other.hasRemainOil()) {
          setRemainOil(other.getRemainOil());
        }
        if (other.hasRemainPercentOil()) {
          setRemainPercentOil(other.getRemainPercentOil());
        }
        if (other.hasAverageOil()) {
          setAverageOil(other.getAverageOil());
        }
        if (other.hasHourOil()) {
          setHourOil(other.getHourOil());
        }
        if (other.hasTotalDistance()) {
          setTotalDistance(other.getTotalDistance());
        }
        if (other.hasWaterTemperature()) {
          setWaterTemperature(other.getWaterTemperature());
        }
        if (other.hasReviseOil()) {
          setReviseOil(other.getReviseOil());
        }
        if (other.hasRotationSpeed()) {
          setRotationSpeed(other.getRotationSpeed());
        }
        if (other.hasIntakeAirTemperature()) {
          setIntakeAirTemperature(other.getIntakeAirTemperature());
        }
        if (other.hasAirDischange()) {
          setAirDischange(other.getAirDischange());
        }
        if (otherInfoesBuilder_ == null) {
          if (!other.otherInfoes_.isEmpty()) {
            if (otherInfoes_.isEmpty()) {
              otherInfoes_ = other.otherInfoes_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureOtherInfoesIsMutable();
              otherInfoes_.addAll(other.otherInfoes_);
            }
            onChanged();
          }
        } else {
          if (!other.otherInfoes_.isEmpty()) {
            if (otherInfoesBuilder_.isEmpty()) {
              otherInfoesBuilder_.dispose();
              otherInfoesBuilder_ = null;
              otherInfoes_ = other.otherInfoes_;
              bitField0_ = (bitField0_ & ~0x00000400);
              otherInfoesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOtherInfoesFieldBuilder() : null;
            } else {
              otherInfoesBuilder_.addAllMessages(other.otherInfoes_);
            }
          }
        }
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000800;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getOtherInfoesCount(); i++) {
          if (!getOtherInfoes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hbasedemo.DemoOBDBuff.OBDInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hbasedemo.DemoOBDBuff.OBDInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 remainOil = 1;
      private int remainOil_ ;
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public boolean hasRemainOil() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public int getRemainOil() {
        return remainOil_;
      }
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public Builder setRemainOil(int value) {
        bitField0_ |= 0x00000001;
        remainOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public Builder clearRemainOil() {
        bitField0_ = (bitField0_ & ~0x00000001);
        remainOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainPercentOil = 2;
      private int remainPercentOil_ ;
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public boolean hasRemainPercentOil() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public int getRemainPercentOil() {
        return remainPercentOil_;
      }
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder setRemainPercentOil(int value) {
        bitField0_ |= 0x00000002;
        remainPercentOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder clearRemainPercentOil() {
        bitField0_ = (bitField0_ & ~0x00000002);
        remainPercentOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageOil = 3;
      private int averageOil_ ;
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public boolean hasAverageOil() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public int getAverageOil() {
        return averageOil_;
      }
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder setAverageOil(int value) {
        bitField0_ |= 0x00000004;
        averageOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder clearAverageOil() {
        bitField0_ = (bitField0_ & ~0x00000004);
        averageOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hourOil = 4;
      private int hourOil_ ;
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *小时油耗（单位：0.01升/小时）
       * </pre>
       */
      public boolean hasHourOil() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *小时油耗（单位：0.01升/小时）
       * </pre>
       */
      public int getHourOil() {
        return hourOil_;
      }
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *小时油耗（单位：0.01升/小时）
       * </pre>
       */
      public Builder setHourOil(int value) {
        bitField0_ |= 0x00000008;
        hourOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *小时油耗（单位：0.01升/小时）
       * </pre>
       */
      public Builder clearHourOil() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hourOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalDistance = 5;
      private int totalDistance_ ;
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public boolean hasTotalDistance() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public int getTotalDistance() {
        return totalDistance_;
      }
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder setTotalDistance(int value) {
        bitField0_ |= 0x00000010;
        totalDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder clearTotalDistance() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalDistance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 waterTemperature = 6;
      private int waterTemperature_ ;
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *水温（单位：℃）
       * </pre>
       */
      public boolean hasWaterTemperature() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *水温（单位：℃）
       * </pre>
       */
      public int getWaterTemperature() {
        return waterTemperature_;
      }
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *水温（单位：℃）
       * </pre>
       */
      public Builder setWaterTemperature(int value) {
        bitField0_ |= 0x00000020;
        waterTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *水温（单位：℃）
       * </pre>
       */
      public Builder clearWaterTemperature() {
        bitField0_ = (bitField0_ & ~0x00000020);
        waterTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reviseOil = 7;
      private int reviseOil_ ;
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public boolean hasReviseOil() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public int getReviseOil() {
        return reviseOil_;
      }
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public Builder setReviseOil(int value) {
        bitField0_ |= 0x00000040;
        reviseOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public Builder clearReviseOil() {
        bitField0_ = (bitField0_ & ~0x00000040);
        reviseOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotationSpeed = 8;
      private int rotationSpeed_ ;
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public boolean hasRotationSpeed() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public int getRotationSpeed() {
        return rotationSpeed_;
      }
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public Builder setRotationSpeed(int value) {
        bitField0_ |= 0x00000080;
        rotationSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public Builder clearRotationSpeed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rotationSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 intakeAirTemperature = 9;
      private int intakeAirTemperature_ ;
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public boolean hasIntakeAirTemperature() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public int getIntakeAirTemperature() {
        return intakeAirTemperature_;
      }
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public Builder setIntakeAirTemperature(int value) {
        bitField0_ |= 0x00000100;
        intakeAirTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public Builder clearIntakeAirTemperature() {
        bitField0_ = (bitField0_ & ~0x00000100);
        intakeAirTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 airDischange = 10;
      private int airDischange_ ;
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public boolean hasAirDischange() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public int getAirDischange() {
        return airDischange_;
      }
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public Builder setAirDischange(int value) {
        bitField0_ |= 0x00000200;
        airDischange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public Builder clearAirDischange() {
        bitField0_ = (bitField0_ & ~0x00000200);
        airDischange_ = 0;
        onChanged();
        return this;
      }

      // repeated .gboss.MapEntry otherInfoes = 11;
      private java.util.List<hbasedemo.DemoOBDBuff.MapEntry> otherInfoes_ =
        java.util.Collections.emptyList();
      private void ensureOtherInfoesIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          otherInfoes_ = new java.util.ArrayList<hbasedemo.DemoOBDBuff.MapEntry>(otherInfoes_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          hbasedemo.DemoOBDBuff.MapEntry, hbasedemo.DemoOBDBuff.MapEntry.Builder, hbasedemo.DemoOBDBuff.MapEntryOrBuilder> otherInfoesBuilder_;

      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public java.util.List<hbasedemo.DemoOBDBuff.MapEntry> getOtherInfoesList() {
        if (otherInfoesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(otherInfoes_);
        } else {
          return otherInfoesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public int getOtherInfoesCount() {
        if (otherInfoesBuilder_ == null) {
          return otherInfoes_.size();
        } else {
          return otherInfoesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public hbasedemo.DemoOBDBuff.MapEntry getOtherInfoes(int index) {
        if (otherInfoesBuilder_ == null) {
          return otherInfoes_.get(index);
        } else {
          return otherInfoesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder setOtherInfoes(
          int index, hbasedemo.DemoOBDBuff.MapEntry value) {
        if (otherInfoesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherInfoesIsMutable();
          otherInfoes_.set(index, value);
          onChanged();
        } else {
          otherInfoesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder setOtherInfoes(
          int index, hbasedemo.DemoOBDBuff.MapEntry.Builder builderForValue) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          otherInfoes_.set(index, builderForValue.build());
          onChanged();
        } else {
          otherInfoesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfoes(hbasedemo.DemoOBDBuff.MapEntry value) {
        if (otherInfoesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherInfoesIsMutable();
          otherInfoes_.add(value);
          onChanged();
        } else {
          otherInfoesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfoes(
          int index, hbasedemo.DemoOBDBuff.MapEntry value) {
        if (otherInfoesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherInfoesIsMutable();
          otherInfoes_.add(index, value);
          onChanged();
        } else {
          otherInfoesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfoes(
          hbasedemo.DemoOBDBuff.MapEntry.Builder builderForValue) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          otherInfoes_.add(builderForValue.build());
          onChanged();
        } else {
          otherInfoesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfoes(
          int index, hbasedemo.DemoOBDBuff.MapEntry.Builder builderForValue) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          otherInfoes_.add(index, builderForValue.build());
          onChanged();
        } else {
          otherInfoesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addAllOtherInfoes(
          java.lang.Iterable<? extends hbasedemo.DemoOBDBuff.MapEntry> values) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          super.addAll(values, otherInfoes_);
          onChanged();
        } else {
          otherInfoesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder clearOtherInfoes() {
        if (otherInfoesBuilder_ == null) {
          otherInfoes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          otherInfoesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder removeOtherInfoes(int index) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          otherInfoes_.remove(index);
          onChanged();
        } else {
          otherInfoesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public hbasedemo.DemoOBDBuff.MapEntry.Builder getOtherInfoesBuilder(
          int index) {
        return getOtherInfoesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public hbasedemo.DemoOBDBuff.MapEntryOrBuilder getOtherInfoesOrBuilder(
          int index) {
        if (otherInfoesBuilder_ == null) {
          return otherInfoes_.get(index);  } else {
          return otherInfoesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public java.util.List<? extends hbasedemo.DemoOBDBuff.MapEntryOrBuilder> 
           getOtherInfoesOrBuilderList() {
        if (otherInfoesBuilder_ != null) {
          return otherInfoesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(otherInfoes_);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public hbasedemo.DemoOBDBuff.MapEntry.Builder addOtherInfoesBuilder() {
        return getOtherInfoesFieldBuilder().addBuilder(
            hbasedemo.DemoOBDBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public hbasedemo.DemoOBDBuff.MapEntry.Builder addOtherInfoesBuilder(
          int index) {
        return getOtherInfoesFieldBuilder().addBuilder(
            index, hbasedemo.DemoOBDBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public java.util.List<hbasedemo.DemoOBDBuff.MapEntry.Builder> 
           getOtherInfoesBuilderList() {
        return getOtherInfoesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hbasedemo.DemoOBDBuff.MapEntry, hbasedemo.DemoOBDBuff.MapEntry.Builder, hbasedemo.DemoOBDBuff.MapEntryOrBuilder> 
          getOtherInfoesFieldBuilder() {
        if (otherInfoesBuilder_ == null) {
          otherInfoesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hbasedemo.DemoOBDBuff.MapEntry, hbasedemo.DemoOBDBuff.MapEntry.Builder, hbasedemo.DemoOBDBuff.MapEntryOrBuilder>(
                  otherInfoes_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          otherInfoes_ = null;
        }
        return otherInfoesBuilder_;
      }

      // optional string callLetter = 12;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000800);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // optional int64 gpsTime = 13;
      private long gpsTime_ ;
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public long getGpsTime() {
        return gpsTime_;
      }
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00001000;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.OBDInfo)
    }

    static {
      defaultInstance = new OBDInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.OBDInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_MapEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_MapEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_OBDInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_OBDInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tobd.proto\022\005gboss\"&\n\010MapEntry\022\013\n\003key\030\001 " +
      "\002(\t\022\r\n\005value\030\002 \002(\t\"\265\002\n\007OBDInfo\022\021\n\tremain" +
      "Oil\030\001 \001(\005\022\030\n\020remainPercentOil\030\002 \001(\005\022\022\n\na" +
      "verageOil\030\003 \001(\005\022\017\n\007hourOil\030\004 \001(\005\022\025\n\rtota" +
      "lDistance\030\005 \001(\005\022\030\n\020waterTemperature\030\006 \001(" +
      "\005\022\021\n\treviseOil\030\007 \001(\005\022\025\n\rrotationSpeed\030\010 " +
      "\001(\005\022\034\n\024intakeAirTemperature\030\t \001(\005\022\024\n\014air" +
      "Dischange\030\n \001(\005\022$\n\013otherInfoes\030\013 \003(\0132\017.g" +
      "boss.MapEntry\022\022\n\ncallLetter\030\014 \001(\t\022\017\n\007gps" +
      "Time\030\r \001(\003B\024\n\thbasedemoB\007OBDBuff"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_gboss_MapEntry_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_gboss_MapEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_MapEntry_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_gboss_OBDInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_gboss_OBDInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_OBDInfo_descriptor,
              new java.lang.String[] { "RemainOil", "RemainPercentOil", "AverageOil", "HourOil", "TotalDistance", "WaterTemperature", "ReviseOil", "RotationSpeed", "IntakeAirTemperature", "AirDischange", "OtherInfoes", "CallLetter", "GpsTime", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
