<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.test.dubbo</groupId>
  <artifactId>dubboProvider</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <properties>
		<spring.version>3.2.9.RELEASE</spring.version>
  </properties>
  
  <dependencies>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-core</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-beans</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-web</artifactId>
		    <version>${spring.version}</version>
		</dependency>
  
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-log4j12</artifactId>
		    <version>1.7.9</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.zookeeper</groupId>
		    <artifactId>zookeeper</artifactId>
		    <version>3.4.9</version>
		</dependency>
		
		<dependency>
		    <groupId>io.netty</groupId>
		    <artifactId>netty</artifactId>
		    <version>3.7.0.Final</version>
		</dependency>
		
		<dependency>
		    <groupId>com.101tec</groupId>
		    <artifactId>zkclient</artifactId>
		    <version>0.10</version>
		</dependency>
		<dependency>
		    <groupId>org.javassist</groupId>
		    <artifactId>javassist</artifactId>
		    <version>3.18.2-GA</version>
		</dependency>
		<dependency>
		    <groupId>com.esotericsoftware.kryo</groupId>
		    <artifactId>kryo</artifactId>
		    <version>2.24.0</version>
		</dependency>
		<dependency>
		    <groupId>de.javakaffee</groupId>
		    <artifactId>kryo-serializers</artifactId>
		    <version>0.26</version>
		</dependency>
		<dependency>
		    <groupId>javax.ws.rs</groupId>
		    <artifactId>javax.ws.rs-api</artifactId>
		    <version>2.0</version>
		</dependency>
		<dependency>
		    <groupId>javax.validation</groupId>
		    <artifactId>validation-api</artifactId>
		    <version>1.0.0.GA</version>
		</dependency>
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-core-asl</artifactId>
		    <version>1.9.12</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		    <version>4.3.1</version>
		</dependency>
		<!-- rest风格 start -->
		<dependency>
		    <groupId>org.jboss.resteasy</groupId>
		    <artifactId>resteasy-client</artifactId>
		    <version>3.0.7.Final</version>
		</dependency>
		<dependency>
		    <groupId>org.jboss.resteasy</groupId>
		    <artifactId>resteasy-jackson-provider</artifactId>
		    <version>3.0.7.Final</version>
		</dependency>
		<dependency>
		    <groupId>org.jboss.resteasy</groupId>
		    <artifactId>resteasy-jaxb-provider</artifactId>
		    <version>3.0.7.Final</version>
		</dependency>
		<dependency>
		    <groupId>org.jboss.resteasy</groupId>
		    <artifactId>resteasy-jdk-http</artifactId>
		    <version>3.0.7.Final</version>
		</dependency>
		<dependency>
		    <groupId>org.jboss.resteasy</groupId>
		    <artifactId>resteasy-netty</artifactId>
		    <version>3.0.7.Final</version>
		</dependency>
		
		<!-- rest风格end -->
		<dependency>
		    <groupId>javax.annotation</groupId>
		    <artifactId>javax.annotation-api</artifactId>
		    <version>1.2</version>
		</dependency>
		
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.1.0</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.tomcat.embed</groupId>
		    <artifactId>tomcat-embed-core</artifactId>
		    <version>8.5.8</version>
		</dependency>
		<dependency>
		    <groupId>com.thoughtworks.xstream</groupId>
		    <artifactId>xstream</artifactId>
		    <version>1.4.2</version>
		</dependency>
		
		<!-- 使用内置jetty start -->
		<dependency>
		    <groupId>org.mortbay.jetty</groupId>
		    <artifactId>jetty</artifactId>
		    <version>6.1.26</version>
		    <exclusions>
		    	<exclusion>
		    		<groupId>org.mortbay.jetty</groupId>
		    		<artifactId>servlet-api</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
		<dependency>
		    <groupId>org.mortbay.jetty</groupId>
		    <artifactId>jetty-util</artifactId>
		    <version>6.1.26</version>
		</dependency>
		<!-- 使用内置jetty end -->
		
		<!-- 使用内置tomcat start -->
		 <dependency>
		    <groupId>org.apache.tomcat</groupId>
		    <artifactId>tomcat-catalina</artifactId>
		    <version>8.0.21</version>
		</dependency>
		 <dependency>
		    <groupId>org.apache.tomcat.embed</groupId>
		    <artifactId>tomcat-embed-core</artifactId>
		    <version>8.0.21</version>
		</dependency>
		<!-- 使用内置tomcat end -->
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>14.0.1</version>
		</dependency>
		
  </dependencies>
  
<!--  <build>
		<finalName>dubboProvider</finalName>
		配置文件 
		<resources>
			<resource>
				<targetPath>${project.build.directory}/classes</targetPath>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
		</resources>	 -->
		
		<!-- <pluginManagement>
			<plugins>
				解决Maven插件在Eclipse内执行了一系列的生命周期引起冲突
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement> -->
		<!-- <plugins>
			打包jar文件时，配置manifest文件，加入lib包的jar依赖
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<classesDirectory>target/classes/</classesDirectory>
					<archive>
						<manifest>
							<mainClass>test.ProviderTest</mainClass>
							打包时 MANIFEST.MF文件不记录的时间戳版本
							<useUniqueVersions>false</useUniqueVersions>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			把项目依赖的jar导出到target目录下面的lib文件当中
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<type>jar</type>
							<includeTypes>jar</includeTypes>
							<useUniqueVersions>false</useUniqueVersions>
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>   -->
  
</project>