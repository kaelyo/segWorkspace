// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Lease.proto

package com.ysy.hbase;

public final class LeaseDataBuff {
  private LeaseDataBuff() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DeliverLeaseAlarmInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required int64 gpsTime = 2;
    /**
     * <code>required int64 gpsTime = 2;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    boolean hasGpsTime();
    /**
     * <code>required int64 gpsTime = 2;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    long getGpsTime();

    // repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    java.util.List<com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo> 
        getLeaseAlarmInfosList();
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo getLeaseAlarmInfos(int index);
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    int getLeaseAlarmInfosCount();
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    java.util.List<? extends com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder> 
        getLeaseAlarmInfosOrBuilderList();
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder getLeaseAlarmInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gboss.DeliverLeaseAlarmInfo}
   */
  public static final class DeliverLeaseAlarmInfo extends
      com.google.protobuf.GeneratedMessage
      implements DeliverLeaseAlarmInfoOrBuilder {
    // Use DeliverLeaseAlarmInfo.newBuilder() to construct.
    private DeliverLeaseAlarmInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeliverLeaseAlarmInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeliverLeaseAlarmInfo defaultInstance;
    public static DeliverLeaseAlarmInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DeliverLeaseAlarmInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeliverLeaseAlarmInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gpsTime_ = input.readInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                leaseAlarmInfos_ = new java.util.ArrayList<com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              leaseAlarmInfos_.add(input.readMessage(com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          leaseAlarmInfos_ = java.util.Collections.unmodifiableList(leaseAlarmInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_DeliverLeaseAlarmInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_DeliverLeaseAlarmInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo.class, com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DeliverLeaseAlarmInfo> PARSER =
        new com.google.protobuf.AbstractParser<DeliverLeaseAlarmInfo>() {
      public DeliverLeaseAlarmInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeliverLeaseAlarmInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeliverLeaseAlarmInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 gpsTime = 2;
    public static final int GPSTIME_FIELD_NUMBER = 2;
    private long gpsTime_;
    /**
     * <code>required int64 gpsTime = 2;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 gpsTime = 2;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public long getGpsTime() {
      return gpsTime_;
    }

    // repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;
    public static final int LEASEALARMINFOS_FIELD_NUMBER = 3;
    private java.util.List<com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo> leaseAlarmInfos_;
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    public java.util.List<com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo> getLeaseAlarmInfosList() {
      return leaseAlarmInfos_;
    }
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    public java.util.List<? extends com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder> 
        getLeaseAlarmInfosOrBuilderList() {
      return leaseAlarmInfos_;
    }
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    public int getLeaseAlarmInfosCount() {
      return leaseAlarmInfos_.size();
    }
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo getLeaseAlarmInfos(int index) {
      return leaseAlarmInfos_.get(index);
    }
    /**
     * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
     *
     * <pre>
     *同一个时间点可能多个报警
     * </pre>
     */
    public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder getLeaseAlarmInfosOrBuilder(
        int index) {
      return leaseAlarmInfos_.get(index);
    }

    private void initFields() {
      callLetter_ = "";
      gpsTime_ = 0L;
      leaseAlarmInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGpsTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, gpsTime_);
      }
      for (int i = 0; i < leaseAlarmInfos_.size(); i++) {
        output.writeMessage(3, leaseAlarmInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, gpsTime_);
      }
      for (int i = 0; i < leaseAlarmInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, leaseAlarmInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.DeliverLeaseAlarmInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_DeliverLeaseAlarmInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_DeliverLeaseAlarmInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo.class, com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo.Builder.class);
      }

      // Construct using com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLeaseAlarmInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (leaseAlarmInfosBuilder_ == null) {
          leaseAlarmInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          leaseAlarmInfosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_DeliverLeaseAlarmInfo_descriptor;
      }

      public com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo getDefaultInstanceForType() {
        return com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo.getDefaultInstance();
      }

      public com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo build() {
        com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo buildPartial() {
        com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo result = new com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gpsTime_ = gpsTime_;
        if (leaseAlarmInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            leaseAlarmInfos_ = java.util.Collections.unmodifiableList(leaseAlarmInfos_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.leaseAlarmInfos_ = leaseAlarmInfos_;
        } else {
          result.leaseAlarmInfos_ = leaseAlarmInfosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo) {
          return mergeFrom((com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo other) {
        if (other == com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (leaseAlarmInfosBuilder_ == null) {
          if (!other.leaseAlarmInfos_.isEmpty()) {
            if (leaseAlarmInfos_.isEmpty()) {
              leaseAlarmInfos_ = other.leaseAlarmInfos_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLeaseAlarmInfosIsMutable();
              leaseAlarmInfos_.addAll(other.leaseAlarmInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.leaseAlarmInfos_.isEmpty()) {
            if (leaseAlarmInfosBuilder_.isEmpty()) {
              leaseAlarmInfosBuilder_.dispose();
              leaseAlarmInfosBuilder_ = null;
              leaseAlarmInfos_ = other.leaseAlarmInfos_;
              bitField0_ = (bitField0_ & ~0x00000004);
              leaseAlarmInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLeaseAlarmInfosFieldBuilder() : null;
            } else {
              leaseAlarmInfosBuilder_.addAllMessages(other.leaseAlarmInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasGpsTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ysy.hbase.LeaseDataBuff.DeliverLeaseAlarmInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required int64 gpsTime = 2;
      private long gpsTime_ ;
      /**
       * <code>required int64 gpsTime = 2;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 gpsTime = 2;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public long getGpsTime() {
        return gpsTime_;
      }
      /**
       * <code>required int64 gpsTime = 2;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00000002;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 gpsTime = 2;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;
      private java.util.List<com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo> leaseAlarmInfos_ =
        java.util.Collections.emptyList();
      private void ensureLeaseAlarmInfosIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          leaseAlarmInfos_ = new java.util.ArrayList<com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo>(leaseAlarmInfos_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder> leaseAlarmInfosBuilder_;

      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public java.util.List<com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo> getLeaseAlarmInfosList() {
        if (leaseAlarmInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leaseAlarmInfos_);
        } else {
          return leaseAlarmInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public int getLeaseAlarmInfosCount() {
        if (leaseAlarmInfosBuilder_ == null) {
          return leaseAlarmInfos_.size();
        } else {
          return leaseAlarmInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo getLeaseAlarmInfos(int index) {
        if (leaseAlarmInfosBuilder_ == null) {
          return leaseAlarmInfos_.get(index);
        } else {
          return leaseAlarmInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public Builder setLeaseAlarmInfos(
          int index, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo value) {
        if (leaseAlarmInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaseAlarmInfosIsMutable();
          leaseAlarmInfos_.set(index, value);
          onChanged();
        } else {
          leaseAlarmInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public Builder setLeaseAlarmInfos(
          int index, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder builderForValue) {
        if (leaseAlarmInfosBuilder_ == null) {
          ensureLeaseAlarmInfosIsMutable();
          leaseAlarmInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          leaseAlarmInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public Builder addLeaseAlarmInfos(com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo value) {
        if (leaseAlarmInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaseAlarmInfosIsMutable();
          leaseAlarmInfos_.add(value);
          onChanged();
        } else {
          leaseAlarmInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public Builder addLeaseAlarmInfos(
          int index, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo value) {
        if (leaseAlarmInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaseAlarmInfosIsMutable();
          leaseAlarmInfos_.add(index, value);
          onChanged();
        } else {
          leaseAlarmInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public Builder addLeaseAlarmInfos(
          com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder builderForValue) {
        if (leaseAlarmInfosBuilder_ == null) {
          ensureLeaseAlarmInfosIsMutable();
          leaseAlarmInfos_.add(builderForValue.build());
          onChanged();
        } else {
          leaseAlarmInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public Builder addLeaseAlarmInfos(
          int index, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder builderForValue) {
        if (leaseAlarmInfosBuilder_ == null) {
          ensureLeaseAlarmInfosIsMutable();
          leaseAlarmInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          leaseAlarmInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public Builder addAllLeaseAlarmInfos(
          java.lang.Iterable<? extends com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo> values) {
        if (leaseAlarmInfosBuilder_ == null) {
          ensureLeaseAlarmInfosIsMutable();
          super.addAll(values, leaseAlarmInfos_);
          onChanged();
        } else {
          leaseAlarmInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public Builder clearLeaseAlarmInfos() {
        if (leaseAlarmInfosBuilder_ == null) {
          leaseAlarmInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          leaseAlarmInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public Builder removeLeaseAlarmInfos(int index) {
        if (leaseAlarmInfosBuilder_ == null) {
          ensureLeaseAlarmInfosIsMutable();
          leaseAlarmInfos_.remove(index);
          onChanged();
        } else {
          leaseAlarmInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder getLeaseAlarmInfosBuilder(
          int index) {
        return getLeaseAlarmInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder getLeaseAlarmInfosOrBuilder(
          int index) {
        if (leaseAlarmInfosBuilder_ == null) {
          return leaseAlarmInfos_.get(index);  } else {
          return leaseAlarmInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public java.util.List<? extends com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder> 
           getLeaseAlarmInfosOrBuilderList() {
        if (leaseAlarmInfosBuilder_ != null) {
          return leaseAlarmInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leaseAlarmInfos_);
        }
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder addLeaseAlarmInfosBuilder() {
        return getLeaseAlarmInfosFieldBuilder().addBuilder(
            com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder addLeaseAlarmInfosBuilder(
          int index) {
        return getLeaseAlarmInfosFieldBuilder().addBuilder(
            index, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.LeaseAlarmInfo leaseAlarmInfos = 3;</code>
       *
       * <pre>
       *同一个时间点可能多个报警
       * </pre>
       */
      public java.util.List<com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder> 
           getLeaseAlarmInfosBuilderList() {
        return getLeaseAlarmInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder> 
          getLeaseAlarmInfosFieldBuilder() {
        if (leaseAlarmInfosBuilder_ == null) {
          leaseAlarmInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder>(
                  leaseAlarmInfos_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          leaseAlarmInfos_ = null;
        }
        return leaseAlarmInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.DeliverLeaseAlarmInfo)
    }

    static {
      defaultInstance = new DeliverLeaseAlarmInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.DeliverLeaseAlarmInfo)
  }

  public interface LeaseAlarmInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 alarm_id = 1;
    /**
     * <code>optional int64 alarm_id = 1;</code>
     *
     * <pre>
     *对应租赁数据库中的alarm_id，可不赋值
     * </pre>
     */
    boolean hasAlarmId();
    /**
     * <code>optional int64 alarm_id = 1;</code>
     *
     * <pre>
     *对应租赁数据库中的alarm_id，可不赋值
     * </pre>
     */
    long getAlarmId();

    // optional int32 deel_type = 2;
    /**
     * <code>optional int32 deel_type = 2;</code>
     *
     * <pre>
     *处理类型：1不清楚、2检修、3系统误报、4误操作、5维修、6真实报警、7用户自测
     * </pre>
     */
    boolean hasDeelType();
    /**
     * <code>optional int32 deel_type = 2;</code>
     *
     * <pre>
     *处理类型：1不清楚、2检修、3系统误报、4误操作、5维修、6真实报警、7用户自测
     * </pre>
     */
    int getDeelType();

    // optional string remark = 3;
    /**
     * <code>optional string remark = 3;</code>
     *
     * <pre>
     * 处理建议
     * </pre>
     */
    boolean hasRemark();
    /**
     * <code>optional string remark = 3;</code>
     *
     * <pre>
     * 处理建议
     * </pre>
     */
    java.lang.String getRemark();
    /**
     * <code>optional string remark = 3;</code>
     *
     * <pre>
     * 处理建议
     * </pre>
     */
    com.google.protobuf.ByteString
        getRemarkBytes();

    // optional int64 cus_id = 4;
    /**
     * <code>optional int64 cus_id = 4;</code>
     *
     * <pre>
     *处理人编号
     * </pre>
     */
    boolean hasCusId();
    /**
     * <code>optional int64 cus_id = 4;</code>
     *
     * <pre>
     *处理人编号
     * </pre>
     */
    long getCusId();

    // optional string cus_name = 5;
    /**
     * <code>optional string cus_name = 5;</code>
     *
     * <pre>
     *处理人名称
     * </pre>
     */
    boolean hasCusName();
    /**
     * <code>optional string cus_name = 5;</code>
     *
     * <pre>
     *处理人名称
     * </pre>
     */
    java.lang.String getCusName();
    /**
     * <code>optional string cus_name = 5;</code>
     *
     * <pre>
     *处理人名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getCusNameBytes();

    // optional int32 is_deel = 6;
    /**
     * <code>optional int32 is_deel = 6;</code>
     *
     * <pre>
     *处理状态:0=未处理;1=已处理
     * </pre>
     */
    boolean hasIsDeel();
    /**
     * <code>optional int32 is_deel = 6;</code>
     *
     * <pre>
     *处理状态:0=未处理;1=已处理
     * </pre>
     */
    int getIsDeel();

    // optional int64 unit_id = 7;
    /**
     * <code>optional int64 unit_id = 7;</code>
     *
     * <pre>
     *车台编号,对应租赁数据库中的unit_id，可不赋值
     * </pre>
     */
    boolean hasUnitId();
    /**
     * <code>optional int64 unit_id = 7;</code>
     *
     * <pre>
     *车台编号,对应租赁数据库中的unit_id，可不赋值
     * </pre>
     */
    long getUnitId();

    // optional string number_plate = 8;
    /**
     * <code>optional string number_plate = 8;</code>
     *
     * <pre>
     *车牌号码
     * </pre>
     */
    boolean hasNumberPlate();
    /**
     * <code>optional string number_plate = 8;</code>
     *
     * <pre>
     *车牌号码
     * </pre>
     */
    java.lang.String getNumberPlate();
    /**
     * <code>optional string number_plate = 8;</code>
     *
     * <pre>
     *车牌号码
     * </pre>
     */
    com.google.protobuf.ByteString
        getNumberPlateBytes();

    // optional int32 lon1 = 9;
    /**
     * <code>optional int32 lon1 = 9;</code>
     *
     * <pre>
     *经度1:开始点经度，单位：百万分之一度
     * </pre>
     */
    boolean hasLon1();
    /**
     * <code>optional int32 lon1 = 9;</code>
     *
     * <pre>
     *经度1:开始点经度，单位：百万分之一度
     * </pre>
     */
    int getLon1();

    // optional int32 lon2 = 10;
    /**
     * <code>optional int32 lon2 = 10;</code>
     *
     * <pre>
     *经度2:结束点经度，单位：百万分之一度
     * </pre>
     */
    boolean hasLon2();
    /**
     * <code>optional int32 lon2 = 10;</code>
     *
     * <pre>
     *经度2:结束点经度，单位：百万分之一度
     * </pre>
     */
    int getLon2();

    // optional int32 lat1 = 11;
    /**
     * <code>optional int32 lat1 = 11;</code>
     *
     * <pre>
     *纬度1:开始点纬度，单位：百万分之一度
     * </pre>
     */
    boolean hasLat1();
    /**
     * <code>optional int32 lat1 = 11;</code>
     *
     * <pre>
     *纬度1:开始点纬度，单位：百万分之一度
     * </pre>
     */
    int getLat1();

    // optional int32 lat2 = 12;
    /**
     * <code>optional int32 lat2 = 12;</code>
     *
     * <pre>
     *纬度2:结束点纬度，单位：百万分之一度
     * </pre>
     */
    boolean hasLat2();
    /**
     * <code>optional int32 lat2 = 12;</code>
     *
     * <pre>
     *纬度2:结束点纬度，单位：百万分之一度
     * </pre>
     */
    int getLat2();

    // optional string refer1 = 13;
    /**
     * <code>optional string refer1 = 13;</code>
     *
     * <pre>
     *参考位置1
     * </pre>
     */
    boolean hasRefer1();
    /**
     * <code>optional string refer1 = 13;</code>
     *
     * <pre>
     *参考位置1
     * </pre>
     */
    java.lang.String getRefer1();
    /**
     * <code>optional string refer1 = 13;</code>
     *
     * <pre>
     *参考位置1
     * </pre>
     */
    com.google.protobuf.ByteString
        getRefer1Bytes();

    // optional string refer2 = 14;
    /**
     * <code>optional string refer2 = 14;</code>
     *
     * <pre>
     *参考位置2
     * </pre>
     */
    boolean hasRefer2();
    /**
     * <code>optional string refer2 = 14;</code>
     *
     * <pre>
     *参考位置2
     * </pre>
     */
    java.lang.String getRefer2();
    /**
     * <code>optional string refer2 = 14;</code>
     *
     * <pre>
     *参考位置2
     * </pre>
     */
    com.google.protobuf.ByteString
        getRefer2Bytes();

    // optional int64 gpsTime1 = 15;
    /**
     * <code>optional int64 gpsTime1 = 15;</code>
     *
     * <pre>
     *GPS时间1(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    boolean hasGpsTime1();
    /**
     * <code>optional int64 gpsTime1 = 15;</code>
     *
     * <pre>
     *GPS时间1(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    long getGpsTime1();

    // optional int64 gpsTime2 = 16;
    /**
     * <code>optional int64 gpsTime2 = 16;</code>
     *
     * <pre>
     *GPS时间2(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    boolean hasGpsTime2();
    /**
     * <code>optional int64 gpsTime2 = 16;</code>
     *
     * <pre>
     *GPS时间2(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    long getGpsTime2();

    // optional int64 begin_stamp = 17;
    /**
     * <code>optional int64 begin_stamp = 17;</code>
     *
     * <pre>
     *开始时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    boolean hasBeginStamp();
    /**
     * <code>optional int64 begin_stamp = 17;</code>
     *
     * <pre>
     *开始时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    long getBeginStamp();

    // optional int64 end_stamp = 18;
    /**
     * <code>optional int64 end_stamp = 18;</code>
     *
     * <pre>
     *结束时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    boolean hasEndStamp();
    /**
     * <code>optional int64 end_stamp = 18;</code>
     *
     * <pre>
     *结束时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    long getEndStamp();

    // optional int32 course1 = 19;
    /**
     * <code>optional int32 course1 = 19;</code>
     *
     * <pre>
     *方向1
     * </pre>
     */
    boolean hasCourse1();
    /**
     * <code>optional int32 course1 = 19;</code>
     *
     * <pre>
     *方向1
     * </pre>
     */
    int getCourse1();

    // optional int32 course2 = 20;
    /**
     * <code>optional int32 course2 = 20;</code>
     *
     * <pre>
     *方向2
     * </pre>
     */
    boolean hasCourse2();
    /**
     * <code>optional int32 course2 = 20;</code>
     *
     * <pre>
     *方向2
     * </pre>
     */
    int getCourse2();

    // optional int32 speed = 21;
    /**
     * <code>optional int32 speed = 21;</code>
     *
     * <pre>
     *车速,单位：百米/小时
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional int32 speed = 21;</code>
     *
     * <pre>
     *车速,单位：百米/小时
     * </pre>
     */
    int getSpeed();

    // optional int32 alarm_type = 22;
    /**
     * <code>optional int32 alarm_type = 22;</code>
     *
     * <pre>
     *警情类型
     * </pre>
     */
    boolean hasAlarmType();
    /**
     * <code>optional int32 alarm_type = 22;</code>
     *
     * <pre>
     *警情类型
     * </pre>
     */
    int getAlarmType();

    // optional int32 is_delete = 23;
    /**
     * <code>optional int32 is_delete = 23;</code>
     *
     * <pre>
     *0=未删除;1=已删除
     * </pre>
     */
    boolean hasIsDelete();
    /**
     * <code>optional int32 is_delete = 23;</code>
     *
     * <pre>
     *0=未删除;1=已删除
     * </pre>
     */
    int getIsDelete();

    // optional int64 add_stamp = 24;
    /**
     * <code>optional int64 add_stamp = 24;</code>
     *
     * <pre>
     *入库时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    boolean hasAddStamp();
    /**
     * <code>optional int64 add_stamp = 24;</code>
     *
     * <pre>
     *入库时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    long getAddStamp();

    // optional int32 area_id = 25;
    /**
     * <code>optional int32 area_id = 25;</code>
     *
     * <pre>
     *发生越界警情的区域id
     * </pre>
     */
    boolean hasAreaId();
    /**
     * <code>optional int32 area_id = 25;</code>
     *
     * <pre>
     *发生越界警情的区域id
     * </pre>
     */
    int getAreaId();
  }
  /**
   * Protobuf type {@code gboss.LeaseAlarmInfo}
   */
  public static final class LeaseAlarmInfo extends
      com.google.protobuf.GeneratedMessage
      implements LeaseAlarmInfoOrBuilder {
    // Use LeaseAlarmInfo.newBuilder() to construct.
    private LeaseAlarmInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LeaseAlarmInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LeaseAlarmInfo defaultInstance;
    public static LeaseAlarmInfo getDefaultInstance() {
      return defaultInstance;
    }

    public LeaseAlarmInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LeaseAlarmInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              alarmId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              deelType_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              remark_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cusId_ = input.readInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              cusName_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isDeel_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              unitId_ = input.readInt64();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              numberPlate_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              lon1_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              lon2_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              lat1_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              lat2_ = input.readInt32();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              refer1_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              refer2_ = input.readBytes();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              gpsTime1_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              gpsTime2_ = input.readInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              beginStamp_ = input.readInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              endStamp_ = input.readInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              course1_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              course2_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              speed_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              alarmType_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              isDelete_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              addStamp_ = input.readInt64();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              areaId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_LeaseAlarmInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_LeaseAlarmInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.class, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<LeaseAlarmInfo> PARSER =
        new com.google.protobuf.AbstractParser<LeaseAlarmInfo>() {
      public LeaseAlarmInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LeaseAlarmInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LeaseAlarmInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 alarm_id = 1;
    public static final int ALARM_ID_FIELD_NUMBER = 1;
    private long alarmId_;
    /**
     * <code>optional int64 alarm_id = 1;</code>
     *
     * <pre>
     *对应租赁数据库中的alarm_id，可不赋值
     * </pre>
     */
    public boolean hasAlarmId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 alarm_id = 1;</code>
     *
     * <pre>
     *对应租赁数据库中的alarm_id，可不赋值
     * </pre>
     */
    public long getAlarmId() {
      return alarmId_;
    }

    // optional int32 deel_type = 2;
    public static final int DEEL_TYPE_FIELD_NUMBER = 2;
    private int deelType_;
    /**
     * <code>optional int32 deel_type = 2;</code>
     *
     * <pre>
     *处理类型：1不清楚、2检修、3系统误报、4误操作、5维修、6真实报警、7用户自测
     * </pre>
     */
    public boolean hasDeelType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 deel_type = 2;</code>
     *
     * <pre>
     *处理类型：1不清楚、2检修、3系统误报、4误操作、5维修、6真实报警、7用户自测
     * </pre>
     */
    public int getDeelType() {
      return deelType_;
    }

    // optional string remark = 3;
    public static final int REMARK_FIELD_NUMBER = 3;
    private java.lang.Object remark_;
    /**
     * <code>optional string remark = 3;</code>
     *
     * <pre>
     * 处理建议
     * </pre>
     */
    public boolean hasRemark() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string remark = 3;</code>
     *
     * <pre>
     * 处理建议
     * </pre>
     */
    public java.lang.String getRemark() {
      java.lang.Object ref = remark_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          remark_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string remark = 3;</code>
     *
     * <pre>
     * 处理建议
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRemarkBytes() {
      java.lang.Object ref = remark_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        remark_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 cus_id = 4;
    public static final int CUS_ID_FIELD_NUMBER = 4;
    private long cusId_;
    /**
     * <code>optional int64 cus_id = 4;</code>
     *
     * <pre>
     *处理人编号
     * </pre>
     */
    public boolean hasCusId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 cus_id = 4;</code>
     *
     * <pre>
     *处理人编号
     * </pre>
     */
    public long getCusId() {
      return cusId_;
    }

    // optional string cus_name = 5;
    public static final int CUS_NAME_FIELD_NUMBER = 5;
    private java.lang.Object cusName_;
    /**
     * <code>optional string cus_name = 5;</code>
     *
     * <pre>
     *处理人名称
     * </pre>
     */
    public boolean hasCusName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string cus_name = 5;</code>
     *
     * <pre>
     *处理人名称
     * </pre>
     */
    public java.lang.String getCusName() {
      java.lang.Object ref = cusName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cusName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cus_name = 5;</code>
     *
     * <pre>
     *处理人名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCusNameBytes() {
      java.lang.Object ref = cusName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cusName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 is_deel = 6;
    public static final int IS_DEEL_FIELD_NUMBER = 6;
    private int isDeel_;
    /**
     * <code>optional int32 is_deel = 6;</code>
     *
     * <pre>
     *处理状态:0=未处理;1=已处理
     * </pre>
     */
    public boolean hasIsDeel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 is_deel = 6;</code>
     *
     * <pre>
     *处理状态:0=未处理;1=已处理
     * </pre>
     */
    public int getIsDeel() {
      return isDeel_;
    }

    // optional int64 unit_id = 7;
    public static final int UNIT_ID_FIELD_NUMBER = 7;
    private long unitId_;
    /**
     * <code>optional int64 unit_id = 7;</code>
     *
     * <pre>
     *车台编号,对应租赁数据库中的unit_id，可不赋值
     * </pre>
     */
    public boolean hasUnitId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 unit_id = 7;</code>
     *
     * <pre>
     *车台编号,对应租赁数据库中的unit_id，可不赋值
     * </pre>
     */
    public long getUnitId() {
      return unitId_;
    }

    // optional string number_plate = 8;
    public static final int NUMBER_PLATE_FIELD_NUMBER = 8;
    private java.lang.Object numberPlate_;
    /**
     * <code>optional string number_plate = 8;</code>
     *
     * <pre>
     *车牌号码
     * </pre>
     */
    public boolean hasNumberPlate() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string number_plate = 8;</code>
     *
     * <pre>
     *车牌号码
     * </pre>
     */
    public java.lang.String getNumberPlate() {
      java.lang.Object ref = numberPlate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          numberPlate_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string number_plate = 8;</code>
     *
     * <pre>
     *车牌号码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNumberPlateBytes() {
      java.lang.Object ref = numberPlate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        numberPlate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 lon1 = 9;
    public static final int LON1_FIELD_NUMBER = 9;
    private int lon1_;
    /**
     * <code>optional int32 lon1 = 9;</code>
     *
     * <pre>
     *经度1:开始点经度，单位：百万分之一度
     * </pre>
     */
    public boolean hasLon1() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 lon1 = 9;</code>
     *
     * <pre>
     *经度1:开始点经度，单位：百万分之一度
     * </pre>
     */
    public int getLon1() {
      return lon1_;
    }

    // optional int32 lon2 = 10;
    public static final int LON2_FIELD_NUMBER = 10;
    private int lon2_;
    /**
     * <code>optional int32 lon2 = 10;</code>
     *
     * <pre>
     *经度2:结束点经度，单位：百万分之一度
     * </pre>
     */
    public boolean hasLon2() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 lon2 = 10;</code>
     *
     * <pre>
     *经度2:结束点经度，单位：百万分之一度
     * </pre>
     */
    public int getLon2() {
      return lon2_;
    }

    // optional int32 lat1 = 11;
    public static final int LAT1_FIELD_NUMBER = 11;
    private int lat1_;
    /**
     * <code>optional int32 lat1 = 11;</code>
     *
     * <pre>
     *纬度1:开始点纬度，单位：百万分之一度
     * </pre>
     */
    public boolean hasLat1() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 lat1 = 11;</code>
     *
     * <pre>
     *纬度1:开始点纬度，单位：百万分之一度
     * </pre>
     */
    public int getLat1() {
      return lat1_;
    }

    // optional int32 lat2 = 12;
    public static final int LAT2_FIELD_NUMBER = 12;
    private int lat2_;
    /**
     * <code>optional int32 lat2 = 12;</code>
     *
     * <pre>
     *纬度2:结束点纬度，单位：百万分之一度
     * </pre>
     */
    public boolean hasLat2() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 lat2 = 12;</code>
     *
     * <pre>
     *纬度2:结束点纬度，单位：百万分之一度
     * </pre>
     */
    public int getLat2() {
      return lat2_;
    }

    // optional string refer1 = 13;
    public static final int REFER1_FIELD_NUMBER = 13;
    private java.lang.Object refer1_;
    /**
     * <code>optional string refer1 = 13;</code>
     *
     * <pre>
     *参考位置1
     * </pre>
     */
    public boolean hasRefer1() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string refer1 = 13;</code>
     *
     * <pre>
     *参考位置1
     * </pre>
     */
    public java.lang.String getRefer1() {
      java.lang.Object ref = refer1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          refer1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string refer1 = 13;</code>
     *
     * <pre>
     *参考位置1
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRefer1Bytes() {
      java.lang.Object ref = refer1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        refer1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string refer2 = 14;
    public static final int REFER2_FIELD_NUMBER = 14;
    private java.lang.Object refer2_;
    /**
     * <code>optional string refer2 = 14;</code>
     *
     * <pre>
     *参考位置2
     * </pre>
     */
    public boolean hasRefer2() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string refer2 = 14;</code>
     *
     * <pre>
     *参考位置2
     * </pre>
     */
    public java.lang.String getRefer2() {
      java.lang.Object ref = refer2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          refer2_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string refer2 = 14;</code>
     *
     * <pre>
     *参考位置2
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRefer2Bytes() {
      java.lang.Object ref = refer2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        refer2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 gpsTime1 = 15;
    public static final int GPSTIME1_FIELD_NUMBER = 15;
    private long gpsTime1_;
    /**
     * <code>optional int64 gpsTime1 = 15;</code>
     *
     * <pre>
     *GPS时间1(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public boolean hasGpsTime1() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 gpsTime1 = 15;</code>
     *
     * <pre>
     *GPS时间1(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public long getGpsTime1() {
      return gpsTime1_;
    }

    // optional int64 gpsTime2 = 16;
    public static final int GPSTIME2_FIELD_NUMBER = 16;
    private long gpsTime2_;
    /**
     * <code>optional int64 gpsTime2 = 16;</code>
     *
     * <pre>
     *GPS时间2(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public boolean hasGpsTime2() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 gpsTime2 = 16;</code>
     *
     * <pre>
     *GPS时间2(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public long getGpsTime2() {
      return gpsTime2_;
    }

    // optional int64 begin_stamp = 17;
    public static final int BEGIN_STAMP_FIELD_NUMBER = 17;
    private long beginStamp_;
    /**
     * <code>optional int64 begin_stamp = 17;</code>
     *
     * <pre>
     *开始时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public boolean hasBeginStamp() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 begin_stamp = 17;</code>
     *
     * <pre>
     *开始时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public long getBeginStamp() {
      return beginStamp_;
    }

    // optional int64 end_stamp = 18;
    public static final int END_STAMP_FIELD_NUMBER = 18;
    private long endStamp_;
    /**
     * <code>optional int64 end_stamp = 18;</code>
     *
     * <pre>
     *结束时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public boolean hasEndStamp() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 end_stamp = 18;</code>
     *
     * <pre>
     *结束时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public long getEndStamp() {
      return endStamp_;
    }

    // optional int32 course1 = 19;
    public static final int COURSE1_FIELD_NUMBER = 19;
    private int course1_;
    /**
     * <code>optional int32 course1 = 19;</code>
     *
     * <pre>
     *方向1
     * </pre>
     */
    public boolean hasCourse1() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 course1 = 19;</code>
     *
     * <pre>
     *方向1
     * </pre>
     */
    public int getCourse1() {
      return course1_;
    }

    // optional int32 course2 = 20;
    public static final int COURSE2_FIELD_NUMBER = 20;
    private int course2_;
    /**
     * <code>optional int32 course2 = 20;</code>
     *
     * <pre>
     *方向2
     * </pre>
     */
    public boolean hasCourse2() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 course2 = 20;</code>
     *
     * <pre>
     *方向2
     * </pre>
     */
    public int getCourse2() {
      return course2_;
    }

    // optional int32 speed = 21;
    public static final int SPEED_FIELD_NUMBER = 21;
    private int speed_;
    /**
     * <code>optional int32 speed = 21;</code>
     *
     * <pre>
     *车速,单位：百米/小时
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 speed = 21;</code>
     *
     * <pre>
     *车速,单位：百米/小时
     * </pre>
     */
    public int getSpeed() {
      return speed_;
    }

    // optional int32 alarm_type = 22;
    public static final int ALARM_TYPE_FIELD_NUMBER = 22;
    private int alarmType_;
    /**
     * <code>optional int32 alarm_type = 22;</code>
     *
     * <pre>
     *警情类型
     * </pre>
     */
    public boolean hasAlarmType() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 alarm_type = 22;</code>
     *
     * <pre>
     *警情类型
     * </pre>
     */
    public int getAlarmType() {
      return alarmType_;
    }

    // optional int32 is_delete = 23;
    public static final int IS_DELETE_FIELD_NUMBER = 23;
    private int isDelete_;
    /**
     * <code>optional int32 is_delete = 23;</code>
     *
     * <pre>
     *0=未删除;1=已删除
     * </pre>
     */
    public boolean hasIsDelete() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 is_delete = 23;</code>
     *
     * <pre>
     *0=未删除;1=已删除
     * </pre>
     */
    public int getIsDelete() {
      return isDelete_;
    }

    // optional int64 add_stamp = 24;
    public static final int ADD_STAMP_FIELD_NUMBER = 24;
    private long addStamp_;
    /**
     * <code>optional int64 add_stamp = 24;</code>
     *
     * <pre>
     *入库时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public boolean hasAddStamp() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 add_stamp = 24;</code>
     *
     * <pre>
     *入库时间(从1970-1-1 0:0:0开始的毫秒数)
     * </pre>
     */
    public long getAddStamp() {
      return addStamp_;
    }

    // optional int32 area_id = 25;
    public static final int AREA_ID_FIELD_NUMBER = 25;
    private int areaId_;
    /**
     * <code>optional int32 area_id = 25;</code>
     *
     * <pre>
     *发生越界警情的区域id
     * </pre>
     */
    public boolean hasAreaId() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 area_id = 25;</code>
     *
     * <pre>
     *发生越界警情的区域id
     * </pre>
     */
    public int getAreaId() {
      return areaId_;
    }

    private void initFields() {
      alarmId_ = 0L;
      deelType_ = 0;
      remark_ = "";
      cusId_ = 0L;
      cusName_ = "";
      isDeel_ = 0;
      unitId_ = 0L;
      numberPlate_ = "";
      lon1_ = 0;
      lon2_ = 0;
      lat1_ = 0;
      lat2_ = 0;
      refer1_ = "";
      refer2_ = "";
      gpsTime1_ = 0L;
      gpsTime2_ = 0L;
      beginStamp_ = 0L;
      endStamp_ = 0L;
      course1_ = 0;
      course2_ = 0;
      speed_ = 0;
      alarmType_ = 0;
      isDelete_ = 0;
      addStamp_ = 0L;
      areaId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, alarmId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, deelType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getRemarkBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, cusId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getCusNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, isDeel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, unitId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getNumberPlateBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, lon1_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, lon2_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, lat1_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, lat2_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getRefer1Bytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getRefer2Bytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, gpsTime1_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, gpsTime2_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(17, beginStamp_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(18, endStamp_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, course1_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, course2_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, speed_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, alarmType_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, isDelete_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(24, addStamp_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, areaId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, alarmId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, deelType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getRemarkBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, cusId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCusNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, isDeel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, unitId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getNumberPlateBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, lon1_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, lon2_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, lat1_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, lat2_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getRefer1Bytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getRefer2Bytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, gpsTime1_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, gpsTime2_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, beginStamp_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, endStamp_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, course1_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, course2_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, speed_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, alarmType_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, isDelete_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, addStamp_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, areaId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.LeaseAlarmInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_LeaseAlarmInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_LeaseAlarmInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.class, com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.Builder.class);
      }

      // Construct using com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        alarmId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        deelType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        remark_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        cusId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        cusName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        isDeel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        unitId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        numberPlate_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        lon1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        lon2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        lat1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        lat2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        refer1_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        refer2_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        gpsTime1_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        gpsTime2_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        beginStamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        endStamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        course1_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        course2_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        alarmType_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        isDelete_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        addStamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        areaId_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ysy.hbase.LeaseDataBuff.internal_static_gboss_LeaseAlarmInfo_descriptor;
      }

      public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo getDefaultInstanceForType() {
        return com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.getDefaultInstance();
      }

      public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo build() {
        com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo buildPartial() {
        com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo result = new com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alarmId_ = alarmId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deelType_ = deelType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.remark_ = remark_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cusId_ = cusId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cusName_ = cusName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isDeel_ = isDeel_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.unitId_ = unitId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.numberPlate_ = numberPlate_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.lon1_ = lon1_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.lon2_ = lon2_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.lat1_ = lat1_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.lat2_ = lat2_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.refer1_ = refer1_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.refer2_ = refer2_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.gpsTime1_ = gpsTime1_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.gpsTime2_ = gpsTime2_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.beginStamp_ = beginStamp_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.endStamp_ = endStamp_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.course1_ = course1_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.course2_ = course2_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.alarmType_ = alarmType_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.isDelete_ = isDelete_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.addStamp_ = addStamp_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.areaId_ = areaId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo) {
          return mergeFrom((com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo other) {
        if (other == com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo.getDefaultInstance()) return this;
        if (other.hasAlarmId()) {
          setAlarmId(other.getAlarmId());
        }
        if (other.hasDeelType()) {
          setDeelType(other.getDeelType());
        }
        if (other.hasRemark()) {
          bitField0_ |= 0x00000004;
          remark_ = other.remark_;
          onChanged();
        }
        if (other.hasCusId()) {
          setCusId(other.getCusId());
        }
        if (other.hasCusName()) {
          bitField0_ |= 0x00000010;
          cusName_ = other.cusName_;
          onChanged();
        }
        if (other.hasIsDeel()) {
          setIsDeel(other.getIsDeel());
        }
        if (other.hasUnitId()) {
          setUnitId(other.getUnitId());
        }
        if (other.hasNumberPlate()) {
          bitField0_ |= 0x00000080;
          numberPlate_ = other.numberPlate_;
          onChanged();
        }
        if (other.hasLon1()) {
          setLon1(other.getLon1());
        }
        if (other.hasLon2()) {
          setLon2(other.getLon2());
        }
        if (other.hasLat1()) {
          setLat1(other.getLat1());
        }
        if (other.hasLat2()) {
          setLat2(other.getLat2());
        }
        if (other.hasRefer1()) {
          bitField0_ |= 0x00001000;
          refer1_ = other.refer1_;
          onChanged();
        }
        if (other.hasRefer2()) {
          bitField0_ |= 0x00002000;
          refer2_ = other.refer2_;
          onChanged();
        }
        if (other.hasGpsTime1()) {
          setGpsTime1(other.getGpsTime1());
        }
        if (other.hasGpsTime2()) {
          setGpsTime2(other.getGpsTime2());
        }
        if (other.hasBeginStamp()) {
          setBeginStamp(other.getBeginStamp());
        }
        if (other.hasEndStamp()) {
          setEndStamp(other.getEndStamp());
        }
        if (other.hasCourse1()) {
          setCourse1(other.getCourse1());
        }
        if (other.hasCourse2()) {
          setCourse2(other.getCourse2());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasAlarmType()) {
          setAlarmType(other.getAlarmType());
        }
        if (other.hasIsDelete()) {
          setIsDelete(other.getIsDelete());
        }
        if (other.hasAddStamp()) {
          setAddStamp(other.getAddStamp());
        }
        if (other.hasAreaId()) {
          setAreaId(other.getAreaId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ysy.hbase.LeaseDataBuff.LeaseAlarmInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 alarm_id = 1;
      private long alarmId_ ;
      /**
       * <code>optional int64 alarm_id = 1;</code>
       *
       * <pre>
       *对应租赁数据库中的alarm_id，可不赋值
       * </pre>
       */
      public boolean hasAlarmId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 alarm_id = 1;</code>
       *
       * <pre>
       *对应租赁数据库中的alarm_id，可不赋值
       * </pre>
       */
      public long getAlarmId() {
        return alarmId_;
      }
      /**
       * <code>optional int64 alarm_id = 1;</code>
       *
       * <pre>
       *对应租赁数据库中的alarm_id，可不赋值
       * </pre>
       */
      public Builder setAlarmId(long value) {
        bitField0_ |= 0x00000001;
        alarmId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 alarm_id = 1;</code>
       *
       * <pre>
       *对应租赁数据库中的alarm_id，可不赋值
       * </pre>
       */
      public Builder clearAlarmId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alarmId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 deel_type = 2;
      private int deelType_ ;
      /**
       * <code>optional int32 deel_type = 2;</code>
       *
       * <pre>
       *处理类型：1不清楚、2检修、3系统误报、4误操作、5维修、6真实报警、7用户自测
       * </pre>
       */
      public boolean hasDeelType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 deel_type = 2;</code>
       *
       * <pre>
       *处理类型：1不清楚、2检修、3系统误报、4误操作、5维修、6真实报警、7用户自测
       * </pre>
       */
      public int getDeelType() {
        return deelType_;
      }
      /**
       * <code>optional int32 deel_type = 2;</code>
       *
       * <pre>
       *处理类型：1不清楚、2检修、3系统误报、4误操作、5维修、6真实报警、7用户自测
       * </pre>
       */
      public Builder setDeelType(int value) {
        bitField0_ |= 0x00000002;
        deelType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deel_type = 2;</code>
       *
       * <pre>
       *处理类型：1不清楚、2检修、3系统误报、4误操作、5维修、6真实报警、7用户自测
       * </pre>
       */
      public Builder clearDeelType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deelType_ = 0;
        onChanged();
        return this;
      }

      // optional string remark = 3;
      private java.lang.Object remark_ = "";
      /**
       * <code>optional string remark = 3;</code>
       *
       * <pre>
       * 处理建议
       * </pre>
       */
      public boolean hasRemark() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string remark = 3;</code>
       *
       * <pre>
       * 处理建议
       * </pre>
       */
      public java.lang.String getRemark() {
        java.lang.Object ref = remark_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          remark_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string remark = 3;</code>
       *
       * <pre>
       * 处理建议
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRemarkBytes() {
        java.lang.Object ref = remark_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          remark_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string remark = 3;</code>
       *
       * <pre>
       * 处理建议
       * </pre>
       */
      public Builder setRemark(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        remark_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string remark = 3;</code>
       *
       * <pre>
       * 处理建议
       * </pre>
       */
      public Builder clearRemark() {
        bitField0_ = (bitField0_ & ~0x00000004);
        remark_ = getDefaultInstance().getRemark();
        onChanged();
        return this;
      }
      /**
       * <code>optional string remark = 3;</code>
       *
       * <pre>
       * 处理建议
       * </pre>
       */
      public Builder setRemarkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        remark_ = value;
        onChanged();
        return this;
      }

      // optional int64 cus_id = 4;
      private long cusId_ ;
      /**
       * <code>optional int64 cus_id = 4;</code>
       *
       * <pre>
       *处理人编号
       * </pre>
       */
      public boolean hasCusId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 cus_id = 4;</code>
       *
       * <pre>
       *处理人编号
       * </pre>
       */
      public long getCusId() {
        return cusId_;
      }
      /**
       * <code>optional int64 cus_id = 4;</code>
       *
       * <pre>
       *处理人编号
       * </pre>
       */
      public Builder setCusId(long value) {
        bitField0_ |= 0x00000008;
        cusId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 cus_id = 4;</code>
       *
       * <pre>
       *处理人编号
       * </pre>
       */
      public Builder clearCusId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cusId_ = 0L;
        onChanged();
        return this;
      }

      // optional string cus_name = 5;
      private java.lang.Object cusName_ = "";
      /**
       * <code>optional string cus_name = 5;</code>
       *
       * <pre>
       *处理人名称
       * </pre>
       */
      public boolean hasCusName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string cus_name = 5;</code>
       *
       * <pre>
       *处理人名称
       * </pre>
       */
      public java.lang.String getCusName() {
        java.lang.Object ref = cusName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cusName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cus_name = 5;</code>
       *
       * <pre>
       *处理人名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCusNameBytes() {
        java.lang.Object ref = cusName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cusName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cus_name = 5;</code>
       *
       * <pre>
       *处理人名称
       * </pre>
       */
      public Builder setCusName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        cusName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cus_name = 5;</code>
       *
       * <pre>
       *处理人名称
       * </pre>
       */
      public Builder clearCusName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cusName_ = getDefaultInstance().getCusName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string cus_name = 5;</code>
       *
       * <pre>
       *处理人名称
       * </pre>
       */
      public Builder setCusNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        cusName_ = value;
        onChanged();
        return this;
      }

      // optional int32 is_deel = 6;
      private int isDeel_ ;
      /**
       * <code>optional int32 is_deel = 6;</code>
       *
       * <pre>
       *处理状态:0=未处理;1=已处理
       * </pre>
       */
      public boolean hasIsDeel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 is_deel = 6;</code>
       *
       * <pre>
       *处理状态:0=未处理;1=已处理
       * </pre>
       */
      public int getIsDeel() {
        return isDeel_;
      }
      /**
       * <code>optional int32 is_deel = 6;</code>
       *
       * <pre>
       *处理状态:0=未处理;1=已处理
       * </pre>
       */
      public Builder setIsDeel(int value) {
        bitField0_ |= 0x00000020;
        isDeel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_deel = 6;</code>
       *
       * <pre>
       *处理状态:0=未处理;1=已处理
       * </pre>
       */
      public Builder clearIsDeel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isDeel_ = 0;
        onChanged();
        return this;
      }

      // optional int64 unit_id = 7;
      private long unitId_ ;
      /**
       * <code>optional int64 unit_id = 7;</code>
       *
       * <pre>
       *车台编号,对应租赁数据库中的unit_id，可不赋值
       * </pre>
       */
      public boolean hasUnitId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 unit_id = 7;</code>
       *
       * <pre>
       *车台编号,对应租赁数据库中的unit_id，可不赋值
       * </pre>
       */
      public long getUnitId() {
        return unitId_;
      }
      /**
       * <code>optional int64 unit_id = 7;</code>
       *
       * <pre>
       *车台编号,对应租赁数据库中的unit_id，可不赋值
       * </pre>
       */
      public Builder setUnitId(long value) {
        bitField0_ |= 0x00000040;
        unitId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 unit_id = 7;</code>
       *
       * <pre>
       *车台编号,对应租赁数据库中的unit_id，可不赋值
       * </pre>
       */
      public Builder clearUnitId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unitId_ = 0L;
        onChanged();
        return this;
      }

      // optional string number_plate = 8;
      private java.lang.Object numberPlate_ = "";
      /**
       * <code>optional string number_plate = 8;</code>
       *
       * <pre>
       *车牌号码
       * </pre>
       */
      public boolean hasNumberPlate() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string number_plate = 8;</code>
       *
       * <pre>
       *车牌号码
       * </pre>
       */
      public java.lang.String getNumberPlate() {
        java.lang.Object ref = numberPlate_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          numberPlate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string number_plate = 8;</code>
       *
       * <pre>
       *车牌号码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNumberPlateBytes() {
        java.lang.Object ref = numberPlate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          numberPlate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string number_plate = 8;</code>
       *
       * <pre>
       *车牌号码
       * </pre>
       */
      public Builder setNumberPlate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        numberPlate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string number_plate = 8;</code>
       *
       * <pre>
       *车牌号码
       * </pre>
       */
      public Builder clearNumberPlate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        numberPlate_ = getDefaultInstance().getNumberPlate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string number_plate = 8;</code>
       *
       * <pre>
       *车牌号码
       * </pre>
       */
      public Builder setNumberPlateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        numberPlate_ = value;
        onChanged();
        return this;
      }

      // optional int32 lon1 = 9;
      private int lon1_ ;
      /**
       * <code>optional int32 lon1 = 9;</code>
       *
       * <pre>
       *经度1:开始点经度，单位：百万分之一度
       * </pre>
       */
      public boolean hasLon1() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 lon1 = 9;</code>
       *
       * <pre>
       *经度1:开始点经度，单位：百万分之一度
       * </pre>
       */
      public int getLon1() {
        return lon1_;
      }
      /**
       * <code>optional int32 lon1 = 9;</code>
       *
       * <pre>
       *经度1:开始点经度，单位：百万分之一度
       * </pre>
       */
      public Builder setLon1(int value) {
        bitField0_ |= 0x00000100;
        lon1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lon1 = 9;</code>
       *
       * <pre>
       *经度1:开始点经度，单位：百万分之一度
       * </pre>
       */
      public Builder clearLon1() {
        bitField0_ = (bitField0_ & ~0x00000100);
        lon1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lon2 = 10;
      private int lon2_ ;
      /**
       * <code>optional int32 lon2 = 10;</code>
       *
       * <pre>
       *经度2:结束点经度，单位：百万分之一度
       * </pre>
       */
      public boolean hasLon2() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 lon2 = 10;</code>
       *
       * <pre>
       *经度2:结束点经度，单位：百万分之一度
       * </pre>
       */
      public int getLon2() {
        return lon2_;
      }
      /**
       * <code>optional int32 lon2 = 10;</code>
       *
       * <pre>
       *经度2:结束点经度，单位：百万分之一度
       * </pre>
       */
      public Builder setLon2(int value) {
        bitField0_ |= 0x00000200;
        lon2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lon2 = 10;</code>
       *
       * <pre>
       *经度2:结束点经度，单位：百万分之一度
       * </pre>
       */
      public Builder clearLon2() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lon2_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lat1 = 11;
      private int lat1_ ;
      /**
       * <code>optional int32 lat1 = 11;</code>
       *
       * <pre>
       *纬度1:开始点纬度，单位：百万分之一度
       * </pre>
       */
      public boolean hasLat1() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 lat1 = 11;</code>
       *
       * <pre>
       *纬度1:开始点纬度，单位：百万分之一度
       * </pre>
       */
      public int getLat1() {
        return lat1_;
      }
      /**
       * <code>optional int32 lat1 = 11;</code>
       *
       * <pre>
       *纬度1:开始点纬度，单位：百万分之一度
       * </pre>
       */
      public Builder setLat1(int value) {
        bitField0_ |= 0x00000400;
        lat1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lat1 = 11;</code>
       *
       * <pre>
       *纬度1:开始点纬度，单位：百万分之一度
       * </pre>
       */
      public Builder clearLat1() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lat1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lat2 = 12;
      private int lat2_ ;
      /**
       * <code>optional int32 lat2 = 12;</code>
       *
       * <pre>
       *纬度2:结束点纬度，单位：百万分之一度
       * </pre>
       */
      public boolean hasLat2() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 lat2 = 12;</code>
       *
       * <pre>
       *纬度2:结束点纬度，单位：百万分之一度
       * </pre>
       */
      public int getLat2() {
        return lat2_;
      }
      /**
       * <code>optional int32 lat2 = 12;</code>
       *
       * <pre>
       *纬度2:结束点纬度，单位：百万分之一度
       * </pre>
       */
      public Builder setLat2(int value) {
        bitField0_ |= 0x00000800;
        lat2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lat2 = 12;</code>
       *
       * <pre>
       *纬度2:结束点纬度，单位：百万分之一度
       * </pre>
       */
      public Builder clearLat2() {
        bitField0_ = (bitField0_ & ~0x00000800);
        lat2_ = 0;
        onChanged();
        return this;
      }

      // optional string refer1 = 13;
      private java.lang.Object refer1_ = "";
      /**
       * <code>optional string refer1 = 13;</code>
       *
       * <pre>
       *参考位置1
       * </pre>
       */
      public boolean hasRefer1() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string refer1 = 13;</code>
       *
       * <pre>
       *参考位置1
       * </pre>
       */
      public java.lang.String getRefer1() {
        java.lang.Object ref = refer1_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          refer1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string refer1 = 13;</code>
       *
       * <pre>
       *参考位置1
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRefer1Bytes() {
        java.lang.Object ref = refer1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          refer1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string refer1 = 13;</code>
       *
       * <pre>
       *参考位置1
       * </pre>
       */
      public Builder setRefer1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        refer1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string refer1 = 13;</code>
       *
       * <pre>
       *参考位置1
       * </pre>
       */
      public Builder clearRefer1() {
        bitField0_ = (bitField0_ & ~0x00001000);
        refer1_ = getDefaultInstance().getRefer1();
        onChanged();
        return this;
      }
      /**
       * <code>optional string refer1 = 13;</code>
       *
       * <pre>
       *参考位置1
       * </pre>
       */
      public Builder setRefer1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        refer1_ = value;
        onChanged();
        return this;
      }

      // optional string refer2 = 14;
      private java.lang.Object refer2_ = "";
      /**
       * <code>optional string refer2 = 14;</code>
       *
       * <pre>
       *参考位置2
       * </pre>
       */
      public boolean hasRefer2() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string refer2 = 14;</code>
       *
       * <pre>
       *参考位置2
       * </pre>
       */
      public java.lang.String getRefer2() {
        java.lang.Object ref = refer2_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          refer2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string refer2 = 14;</code>
       *
       * <pre>
       *参考位置2
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRefer2Bytes() {
        java.lang.Object ref = refer2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          refer2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string refer2 = 14;</code>
       *
       * <pre>
       *参考位置2
       * </pre>
       */
      public Builder setRefer2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        refer2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string refer2 = 14;</code>
       *
       * <pre>
       *参考位置2
       * </pre>
       */
      public Builder clearRefer2() {
        bitField0_ = (bitField0_ & ~0x00002000);
        refer2_ = getDefaultInstance().getRefer2();
        onChanged();
        return this;
      }
      /**
       * <code>optional string refer2 = 14;</code>
       *
       * <pre>
       *参考位置2
       * </pre>
       */
      public Builder setRefer2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        refer2_ = value;
        onChanged();
        return this;
      }

      // optional int64 gpsTime1 = 15;
      private long gpsTime1_ ;
      /**
       * <code>optional int64 gpsTime1 = 15;</code>
       *
       * <pre>
       *GPS时间1(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public boolean hasGpsTime1() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 gpsTime1 = 15;</code>
       *
       * <pre>
       *GPS时间1(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public long getGpsTime1() {
        return gpsTime1_;
      }
      /**
       * <code>optional int64 gpsTime1 = 15;</code>
       *
       * <pre>
       *GPS时间1(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder setGpsTime1(long value) {
        bitField0_ |= 0x00004000;
        gpsTime1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gpsTime1 = 15;</code>
       *
       * <pre>
       *GPS时间1(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder clearGpsTime1() {
        bitField0_ = (bitField0_ & ~0x00004000);
        gpsTime1_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 gpsTime2 = 16;
      private long gpsTime2_ ;
      /**
       * <code>optional int64 gpsTime2 = 16;</code>
       *
       * <pre>
       *GPS时间2(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public boolean hasGpsTime2() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 gpsTime2 = 16;</code>
       *
       * <pre>
       *GPS时间2(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public long getGpsTime2() {
        return gpsTime2_;
      }
      /**
       * <code>optional int64 gpsTime2 = 16;</code>
       *
       * <pre>
       *GPS时间2(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder setGpsTime2(long value) {
        bitField0_ |= 0x00008000;
        gpsTime2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gpsTime2 = 16;</code>
       *
       * <pre>
       *GPS时间2(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder clearGpsTime2() {
        bitField0_ = (bitField0_ & ~0x00008000);
        gpsTime2_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 begin_stamp = 17;
      private long beginStamp_ ;
      /**
       * <code>optional int64 begin_stamp = 17;</code>
       *
       * <pre>
       *开始时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public boolean hasBeginStamp() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 begin_stamp = 17;</code>
       *
       * <pre>
       *开始时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public long getBeginStamp() {
        return beginStamp_;
      }
      /**
       * <code>optional int64 begin_stamp = 17;</code>
       *
       * <pre>
       *开始时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder setBeginStamp(long value) {
        bitField0_ |= 0x00010000;
        beginStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 begin_stamp = 17;</code>
       *
       * <pre>
       *开始时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder clearBeginStamp() {
        bitField0_ = (bitField0_ & ~0x00010000);
        beginStamp_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 end_stamp = 18;
      private long endStamp_ ;
      /**
       * <code>optional int64 end_stamp = 18;</code>
       *
       * <pre>
       *结束时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public boolean hasEndStamp() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 end_stamp = 18;</code>
       *
       * <pre>
       *结束时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public long getEndStamp() {
        return endStamp_;
      }
      /**
       * <code>optional int64 end_stamp = 18;</code>
       *
       * <pre>
       *结束时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder setEndStamp(long value) {
        bitField0_ |= 0x00020000;
        endStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 end_stamp = 18;</code>
       *
       * <pre>
       *结束时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder clearEndStamp() {
        bitField0_ = (bitField0_ & ~0x00020000);
        endStamp_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 course1 = 19;
      private int course1_ ;
      /**
       * <code>optional int32 course1 = 19;</code>
       *
       * <pre>
       *方向1
       * </pre>
       */
      public boolean hasCourse1() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 course1 = 19;</code>
       *
       * <pre>
       *方向1
       * </pre>
       */
      public int getCourse1() {
        return course1_;
      }
      /**
       * <code>optional int32 course1 = 19;</code>
       *
       * <pre>
       *方向1
       * </pre>
       */
      public Builder setCourse1(int value) {
        bitField0_ |= 0x00040000;
        course1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 course1 = 19;</code>
       *
       * <pre>
       *方向1
       * </pre>
       */
      public Builder clearCourse1() {
        bitField0_ = (bitField0_ & ~0x00040000);
        course1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 course2 = 20;
      private int course2_ ;
      /**
       * <code>optional int32 course2 = 20;</code>
       *
       * <pre>
       *方向2
       * </pre>
       */
      public boolean hasCourse2() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 course2 = 20;</code>
       *
       * <pre>
       *方向2
       * </pre>
       */
      public int getCourse2() {
        return course2_;
      }
      /**
       * <code>optional int32 course2 = 20;</code>
       *
       * <pre>
       *方向2
       * </pre>
       */
      public Builder setCourse2(int value) {
        bitField0_ |= 0x00080000;
        course2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 course2 = 20;</code>
       *
       * <pre>
       *方向2
       * </pre>
       */
      public Builder clearCourse2() {
        bitField0_ = (bitField0_ & ~0x00080000);
        course2_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed = 21;
      private int speed_ ;
      /**
       * <code>optional int32 speed = 21;</code>
       *
       * <pre>
       *车速,单位：百米/小时
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 speed = 21;</code>
       *
       * <pre>
       *车速,单位：百米/小时
       * </pre>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>optional int32 speed = 21;</code>
       *
       * <pre>
       *车速,单位：百米/小时
       * </pre>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00100000;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed = 21;</code>
       *
       * <pre>
       *车速,单位：百米/小时
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00100000);
        speed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 alarm_type = 22;
      private int alarmType_ ;
      /**
       * <code>optional int32 alarm_type = 22;</code>
       *
       * <pre>
       *警情类型
       * </pre>
       */
      public boolean hasAlarmType() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 alarm_type = 22;</code>
       *
       * <pre>
       *警情类型
       * </pre>
       */
      public int getAlarmType() {
        return alarmType_;
      }
      /**
       * <code>optional int32 alarm_type = 22;</code>
       *
       * <pre>
       *警情类型
       * </pre>
       */
      public Builder setAlarmType(int value) {
        bitField0_ |= 0x00200000;
        alarmType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 alarm_type = 22;</code>
       *
       * <pre>
       *警情类型
       * </pre>
       */
      public Builder clearAlarmType() {
        bitField0_ = (bitField0_ & ~0x00200000);
        alarmType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_delete = 23;
      private int isDelete_ ;
      /**
       * <code>optional int32 is_delete = 23;</code>
       *
       * <pre>
       *0=未删除;1=已删除
       * </pre>
       */
      public boolean hasIsDelete() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 is_delete = 23;</code>
       *
       * <pre>
       *0=未删除;1=已删除
       * </pre>
       */
      public int getIsDelete() {
        return isDelete_;
      }
      /**
       * <code>optional int32 is_delete = 23;</code>
       *
       * <pre>
       *0=未删除;1=已删除
       * </pre>
       */
      public Builder setIsDelete(int value) {
        bitField0_ |= 0x00400000;
        isDelete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_delete = 23;</code>
       *
       * <pre>
       *0=未删除;1=已删除
       * </pre>
       */
      public Builder clearIsDelete() {
        bitField0_ = (bitField0_ & ~0x00400000);
        isDelete_ = 0;
        onChanged();
        return this;
      }

      // optional int64 add_stamp = 24;
      private long addStamp_ ;
      /**
       * <code>optional int64 add_stamp = 24;</code>
       *
       * <pre>
       *入库时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public boolean hasAddStamp() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 add_stamp = 24;</code>
       *
       * <pre>
       *入库时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public long getAddStamp() {
        return addStamp_;
      }
      /**
       * <code>optional int64 add_stamp = 24;</code>
       *
       * <pre>
       *入库时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder setAddStamp(long value) {
        bitField0_ |= 0x00800000;
        addStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 add_stamp = 24;</code>
       *
       * <pre>
       *入库时间(从1970-1-1 0:0:0开始的毫秒数)
       * </pre>
       */
      public Builder clearAddStamp() {
        bitField0_ = (bitField0_ & ~0x00800000);
        addStamp_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 area_id = 25;
      private int areaId_ ;
      /**
       * <code>optional int32 area_id = 25;</code>
       *
       * <pre>
       *发生越界警情的区域id
       * </pre>
       */
      public boolean hasAreaId() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 area_id = 25;</code>
       *
       * <pre>
       *发生越界警情的区域id
       * </pre>
       */
      public int getAreaId() {
        return areaId_;
      }
      /**
       * <code>optional int32 area_id = 25;</code>
       *
       * <pre>
       *发生越界警情的区域id
       * </pre>
       */
      public Builder setAreaId(int value) {
        bitField0_ |= 0x01000000;
        areaId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 area_id = 25;</code>
       *
       * <pre>
       *发生越界警情的区域id
       * </pre>
       */
      public Builder clearAreaId() {
        bitField0_ = (bitField0_ & ~0x01000000);
        areaId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.LeaseAlarmInfo)
    }

    static {
      defaultInstance = new LeaseAlarmInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.LeaseAlarmInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_DeliverLeaseAlarmInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_DeliverLeaseAlarmInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_LeaseAlarmInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_LeaseAlarmInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Lease.proto\022\005gboss\"l\n\025DeliverLeaseAlar" +
      "mInfo\022\022\n\ncallLetter\030\001 \002(\t\022\017\n\007gpsTime\030\002 \002" +
      "(\003\022.\n\017leaseAlarmInfos\030\003 \003(\0132\025.gboss.Leas" +
      "eAlarmInfo\"\277\003\n\016LeaseAlarmInfo\022\020\n\010alarm_i" +
      "d\030\001 \001(\003\022\021\n\tdeel_type\030\002 \001(\005\022\016\n\006remark\030\003 \001" +
      "(\t\022\016\n\006cus_id\030\004 \001(\003\022\020\n\010cus_name\030\005 \001(\t\022\017\n\007" +
      "is_deel\030\006 \001(\005\022\017\n\007unit_id\030\007 \001(\003\022\024\n\014number" +
      "_plate\030\010 \001(\t\022\014\n\004lon1\030\t \001(\005\022\014\n\004lon2\030\n \001(\005" +
      "\022\014\n\004lat1\030\013 \001(\005\022\014\n\004lat2\030\014 \001(\005\022\016\n\006refer1\030\r" +
      " \001(\t\022\016\n\006refer2\030\016 \001(\t\022\020\n\010gpsTime1\030\017 \001(\003\022\020",
      "\n\010gpsTime2\030\020 \001(\003\022\023\n\013begin_stamp\030\021 \001(\003\022\021\n" +
      "\tend_stamp\030\022 \001(\003\022\017\n\007course1\030\023 \001(\005\022\017\n\007cou" +
      "rse2\030\024 \001(\005\022\r\n\005speed\030\025 \001(\005\022\022\n\nalarm_type\030" +
      "\026 \001(\005\022\021\n\tis_delete\030\027 \001(\005\022\021\n\tadd_stamp\030\030 " +
      "\001(\003\022\017\n\007area_id\030\031 \001(\005B\036\n\rcom.ysy.hbaseB\rL" +
      "easeDataBuff"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_gboss_DeliverLeaseAlarmInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_gboss_DeliverLeaseAlarmInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_DeliverLeaseAlarmInfo_descriptor,
              new java.lang.String[] { "CallLetter", "GpsTime", "LeaseAlarmInfos", });
          internal_static_gboss_LeaseAlarmInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_gboss_LeaseAlarmInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_LeaseAlarmInfo_descriptor,
              new java.lang.String[] { "AlarmId", "DeelType", "Remark", "CusId", "CusName", "IsDeel", "UnitId", "NumberPlate", "Lon1", "Lon2", "Lat1", "Lat2", "Refer1", "Refer2", "GpsTime1", "GpsTime2", "BeginStamp", "EndStamp", "Course1", "Course2", "Speed", "AlarmType", "IsDelete", "AddStamp", "AreaId", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
