// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GBoss.proto

package cc.chinagps.gboss.comcenter.buff;

public final class GBossDataBuff {
  private GBossDataBuff() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MapEntryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string key = 1;
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    java.lang.String getKey();
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    // required string value = 2;
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    java.lang.String getValue();
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code gboss.MapEntry}
   *
   * <pre>
   *
   * 附加信息
   * </pre>
   */
  public static final class MapEntry extends
      com.google.protobuf.GeneratedMessage
      implements MapEntryOrBuilder {
    // Use MapEntry.newBuilder() to construct.
    private MapEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapEntry defaultInstance;
    public static MapEntry getDefaultInstance() {
      return defaultInstance;
    }

    public MapEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              key_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_MapEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_MapEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<MapEntry> PARSER =
        new com.google.protobuf.AbstractParser<MapEntry>() {
      public MapEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 1;</code>
     *
     * <pre>
     *附加信息键
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.Object value_;
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     *附加信息值
     * </pre>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      key_ = "";
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.MapEntry}
     *
     * <pre>
     *
     * 附加信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_MapEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_MapEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_MapEntry_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.getDefaultInstance()) return this;
        if (other.hasKey()) {
          bitField0_ |= 0x00000001;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string key = 1;
      private java.lang.Object key_ = "";
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       *附加信息键
       * </pre>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }

      // required string value = 2;
      private java.lang.Object value_ = "";
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       *附加信息值
       * </pre>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.MapEntry)
    }

    static {
      defaultInstance = new MapEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.MapEntry)
  }

  public interface OBDInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 remainOil = 1;
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    boolean hasRemainOil();
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    int getRemainOil();

    // optional int32 remainPercentOil = 2;
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    boolean hasRemainPercentOil();
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    int getRemainPercentOil();

    // optional int32 averageOil = 3;
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    boolean hasAverageOil();
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    int getAverageOil();

    // optional int32 hourOil = 4;
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *小时油耗（单位：0.01升/小时）
     * </pre>
     */
    boolean hasHourOil();
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *小时油耗（单位：0.01升/小时）
     * </pre>
     */
    int getHourOil();

    // optional int32 totalDistance = 5;
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    boolean hasTotalDistance();
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    int getTotalDistance();

    // optional int32 waterTemperature = 6;
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *水温（单位：℃）
     * </pre>
     */
    boolean hasWaterTemperature();
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *水温（单位：℃）
     * </pre>
     */
    int getWaterTemperature();

    // optional int32 reviseOil = 7;
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    boolean hasReviseOil();
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    int getReviseOil();

    // optional int32 rotationSpeed = 8;
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    boolean hasRotationSpeed();
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    int getRotationSpeed();

    // optional int32 intakeAirTemperature = 9;
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    boolean hasIntakeAirTemperature();
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    int getIntakeAirTemperature();

    // optional int32 airDischange = 10;
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    boolean hasAirDischange();
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    int getAirDischange();

    // repeated .gboss.MapEntry otherInfoes = 11;
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> 
        getOtherInfoesList();
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getOtherInfoes(int index);
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    int getOtherInfoesCount();
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
        getOtherInfoesOrBuilderList();
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder getOtherInfoesOrBuilder(
        int index);

    // optional string callLetter = 12;
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // optional int64 gpsTime = 13;
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    boolean hasGpsTime();
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    long getGpsTime();

    // optional int32 speed = 14;
    /**
     * <code>optional int32 speed = 14;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional int32 speed = 14;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    int getSpeed();

    // optional int32 remainDistance = 15;
    /**
     * <code>optional int32 remainDistance = 15;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    boolean hasRemainDistance();
    /**
     * <code>optional int32 remainDistance = 15;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    int getRemainDistance();
  }
  /**
   * Protobuf type {@code gboss.OBDInfo}
   *
   * <pre>
   **
   * GPS实时OBD信息(OBD)
   * </pre>
   */
  public static final class OBDInfo extends
      com.google.protobuf.GeneratedMessage
      implements OBDInfoOrBuilder {
    // Use OBDInfo.newBuilder() to construct.
    private OBDInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OBDInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OBDInfo defaultInstance;
    public static OBDInfo getDefaultInstance() {
      return defaultInstance;
    }

    public OBDInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OBDInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              remainOil_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              remainPercentOil_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              averageOil_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              hourOil_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              totalDistance_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              waterTemperature_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              reviseOil_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              rotationSpeed_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              intakeAirTemperature_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              airDischange_ = input.readInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                otherInfoes_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry>();
                mutable_bitField0_ |= 0x00000400;
              }
              otherInfoes_.add(input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.PARSER, extensionRegistry));
              break;
            }
            case 98: {
              bitField0_ |= 0x00000400;
              callLetter_ = input.readBytes();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              gpsTime_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              speed_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              remainDistance_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          otherInfoes_ = java.util.Collections.unmodifiableList(otherInfoes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OBDInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OBDInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<OBDInfo> PARSER =
        new com.google.protobuf.AbstractParser<OBDInfo>() {
      public OBDInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OBDInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OBDInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 remainOil = 1;
    public static final int REMAINOIL_FIELD_NUMBER = 1;
    private int remainOil_;
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    public boolean hasRemainOil() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 remainOil = 1;</code>
     *
     * <pre>
     *剩余油量（单位：0.01升）
     * </pre>
     */
    public int getRemainOil() {
      return remainOil_;
    }

    // optional int32 remainPercentOil = 2;
    public static final int REMAINPERCENTOIL_FIELD_NUMBER = 2;
    private int remainPercentOil_;
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public boolean hasRemainPercentOil() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 remainPercentOil = 2;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public int getRemainPercentOil() {
      return remainPercentOil_;
    }

    // optional int32 averageOil = 3;
    public static final int AVERAGEOIL_FIELD_NUMBER = 3;
    private int averageOil_;
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public boolean hasAverageOil() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 averageOil = 3;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public int getAverageOil() {
      return averageOil_;
    }

    // optional int32 hourOil = 4;
    public static final int HOUROIL_FIELD_NUMBER = 4;
    private int hourOil_;
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *小时油耗（单位：0.01升/小时）
     * </pre>
     */
    public boolean hasHourOil() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 hourOil = 4;</code>
     *
     * <pre>
     *小时油耗（单位：0.01升/小时）
     * </pre>
     */
    public int getHourOil() {
      return hourOil_;
    }

    // optional int32 totalDistance = 5;
    public static final int TOTALDISTANCE_FIELD_NUMBER = 5;
    private int totalDistance_;
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public boolean hasTotalDistance() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 totalDistance = 5;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public int getTotalDistance() {
      return totalDistance_;
    }

    // optional int32 waterTemperature = 6;
    public static final int WATERTEMPERATURE_FIELD_NUMBER = 6;
    private int waterTemperature_;
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *水温（单位：℃）
     * </pre>
     */
    public boolean hasWaterTemperature() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 waterTemperature = 6;</code>
     *
     * <pre>
     *水温（单位：℃）
     * </pre>
     */
    public int getWaterTemperature() {
      return waterTemperature_;
    }

    // optional int32 reviseOil = 7;
    public static final int REVISEOIL_FIELD_NUMBER = 7;
    private int reviseOil_;
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    public boolean hasReviseOil() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 reviseOil = 7;</code>
     *
     * <pre>
     *燃油修正（0.1%）
     * </pre>
     */
    public int getReviseOil() {
      return reviseOil_;
    }

    // optional int32 rotationSpeed = 8;
    public static final int ROTATIONSPEED_FIELD_NUMBER = 8;
    private int rotationSpeed_;
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    public boolean hasRotationSpeed() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 rotationSpeed = 8;</code>
     *
     * <pre>
     *发动机转速（单位：转/分）
     * </pre>
     */
    public int getRotationSpeed() {
      return rotationSpeed_;
    }

    // optional int32 intakeAirTemperature = 9;
    public static final int INTAKEAIRTEMPERATURE_FIELD_NUMBER = 9;
    private int intakeAirTemperature_;
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    public boolean hasIntakeAirTemperature() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 intakeAirTemperature = 9;</code>
     *
     * <pre>
     *进气温度（单位：℃）
     * </pre>
     */
    public int getIntakeAirTemperature() {
      return intakeAirTemperature_;
    }

    // optional int32 airDischange = 10;
    public static final int AIRDISCHANGE_FIELD_NUMBER = 10;
    private int airDischange_;
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    public boolean hasAirDischange() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 airDischange = 10;</code>
     *
     * <pre>
     *空气流量(g/s)
     * </pre>
     */
    public int getAirDischange() {
      return airDischange_;
    }

    // repeated .gboss.MapEntry otherInfoes = 11;
    public static final int OTHERINFOES_FIELD_NUMBER = 11;
    private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> otherInfoes_;
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> getOtherInfoesList() {
      return otherInfoes_;
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
        getOtherInfoesOrBuilderList() {
      return otherInfoes_;
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public int getOtherInfoesCount() {
      return otherInfoes_.size();
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getOtherInfoes(int index) {
      return otherInfoes_.get(index);
    }
    /**
     * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
     *
     * <pre>
     *其他数据（暂时不解析）
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder getOtherInfoesOrBuilder(
        int index) {
      return otherInfoes_.get(index);
    }

    // optional string callLetter = 12;
    public static final int CALLLETTER_FIELD_NUMBER = 12;
    private java.lang.Object callLetter_;
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string callLetter = 12;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 gpsTime = 13;
    public static final int GPSTIME_FIELD_NUMBER = 13;
    private long gpsTime_;
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 gpsTime = 13;</code>
     *
     * <pre>
     *GPS时间
     * </pre>
     */
    public long getGpsTime() {
      return gpsTime_;
    }

    // optional int32 speed = 14;
    public static final int SPEED_FIELD_NUMBER = 14;
    private int speed_;
    /**
     * <code>optional int32 speed = 14;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 speed = 14;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public int getSpeed() {
      return speed_;
    }

    // optional int32 remainDistance = 15;
    public static final int REMAINDISTANCE_FIELD_NUMBER = 15;
    private int remainDistance_;
    /**
     * <code>optional int32 remainDistance = 15;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    public boolean hasRemainDistance() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 remainDistance = 15;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    public int getRemainDistance() {
      return remainDistance_;
    }

    private void initFields() {
      remainOil_ = 0;
      remainPercentOil_ = 0;
      averageOil_ = 0;
      hourOil_ = 0;
      totalDistance_ = 0;
      waterTemperature_ = 0;
      reviseOil_ = 0;
      rotationSpeed_ = 0;
      intakeAirTemperature_ = 0;
      airDischange_ = 0;
      otherInfoes_ = java.util.Collections.emptyList();
      callLetter_ = "";
      gpsTime_ = 0L;
      speed_ = 0;
      remainDistance_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getOtherInfoesCount(); i++) {
        if (!getOtherInfoes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, remainOil_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, averageOil_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, hourOil_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, totalDistance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, waterTemperature_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, reviseOil_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, rotationSpeed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, intakeAirTemperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, airDischange_);
      }
      for (int i = 0; i < otherInfoes_.size(); i++) {
        output.writeMessage(11, otherInfoes_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(13, gpsTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(14, speed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(15, remainDistance_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, remainOil_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, averageOil_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, hourOil_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, totalDistance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, waterTemperature_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, reviseOil_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, rotationSpeed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, intakeAirTemperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, airDischange_);
      }
      for (int i = 0; i < otherInfoes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, otherInfoes_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, gpsTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, speed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, remainDistance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.OBDInfo}
     *
     * <pre>
     **
     * GPS实时OBD信息(OBD)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OBDInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OBDInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOtherInfoesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        remainOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        remainPercentOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        averageOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        hourOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        totalDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        waterTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        reviseOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        rotationSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        intakeAirTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        airDischange_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (otherInfoesBuilder_ == null) {
          otherInfoes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          otherInfoesBuilder_.clear();
        }
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        remainDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OBDInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.remainOil_ = remainOil_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.remainPercentOil_ = remainPercentOil_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.averageOil_ = averageOil_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hourOil_ = hourOil_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.totalDistance_ = totalDistance_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.waterTemperature_ = waterTemperature_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.reviseOil_ = reviseOil_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rotationSpeed_ = rotationSpeed_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.intakeAirTemperature_ = intakeAirTemperature_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.airDischange_ = airDischange_;
        if (otherInfoesBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            otherInfoes_ = java.util.Collections.unmodifiableList(otherInfoes_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.otherInfoes_ = otherInfoes_;
        } else {
          result.otherInfoes_ = otherInfoesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.remainDistance_ = remainDistance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.getDefaultInstance()) return this;
        if (other.hasRemainOil()) {
          setRemainOil(other.getRemainOil());
        }
        if (other.hasRemainPercentOil()) {
          setRemainPercentOil(other.getRemainPercentOil());
        }
        if (other.hasAverageOil()) {
          setAverageOil(other.getAverageOil());
        }
        if (other.hasHourOil()) {
          setHourOil(other.getHourOil());
        }
        if (other.hasTotalDistance()) {
          setTotalDistance(other.getTotalDistance());
        }
        if (other.hasWaterTemperature()) {
          setWaterTemperature(other.getWaterTemperature());
        }
        if (other.hasReviseOil()) {
          setReviseOil(other.getReviseOil());
        }
        if (other.hasRotationSpeed()) {
          setRotationSpeed(other.getRotationSpeed());
        }
        if (other.hasIntakeAirTemperature()) {
          setIntakeAirTemperature(other.getIntakeAirTemperature());
        }
        if (other.hasAirDischange()) {
          setAirDischange(other.getAirDischange());
        }
        if (otherInfoesBuilder_ == null) {
          if (!other.otherInfoes_.isEmpty()) {
            if (otherInfoes_.isEmpty()) {
              otherInfoes_ = other.otherInfoes_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureOtherInfoesIsMutable();
              otherInfoes_.addAll(other.otherInfoes_);
            }
            onChanged();
          }
        } else {
          if (!other.otherInfoes_.isEmpty()) {
            if (otherInfoesBuilder_.isEmpty()) {
              otherInfoesBuilder_.dispose();
              otherInfoesBuilder_ = null;
              otherInfoes_ = other.otherInfoes_;
              bitField0_ = (bitField0_ & ~0x00000400);
              otherInfoesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOtherInfoesFieldBuilder() : null;
            } else {
              otherInfoesBuilder_.addAllMessages(other.otherInfoes_);
            }
          }
        }
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000800;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasRemainDistance()) {
          setRemainDistance(other.getRemainDistance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getOtherInfoesCount(); i++) {
          if (!getOtherInfoes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 remainOil = 1;
      private int remainOil_ ;
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public boolean hasRemainOil() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public int getRemainOil() {
        return remainOil_;
      }
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public Builder setRemainOil(int value) {
        bitField0_ |= 0x00000001;
        remainOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainOil = 1;</code>
       *
       * <pre>
       *剩余油量（单位：0.01升）
       * </pre>
       */
      public Builder clearRemainOil() {
        bitField0_ = (bitField0_ & ~0x00000001);
        remainOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainPercentOil = 2;
      private int remainPercentOil_ ;
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public boolean hasRemainPercentOil() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public int getRemainPercentOil() {
        return remainPercentOil_;
      }
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder setRemainPercentOil(int value) {
        bitField0_ |= 0x00000002;
        remainPercentOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainPercentOil = 2;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder clearRemainPercentOil() {
        bitField0_ = (bitField0_ & ~0x00000002);
        remainPercentOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageOil = 3;
      private int averageOil_ ;
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public boolean hasAverageOil() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public int getAverageOil() {
        return averageOil_;
      }
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder setAverageOil(int value) {
        bitField0_ |= 0x00000004;
        averageOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageOil = 3;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder clearAverageOil() {
        bitField0_ = (bitField0_ & ~0x00000004);
        averageOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hourOil = 4;
      private int hourOil_ ;
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *小时油耗（单位：0.01升/小时）
       * </pre>
       */
      public boolean hasHourOil() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *小时油耗（单位：0.01升/小时）
       * </pre>
       */
      public int getHourOil() {
        return hourOil_;
      }
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *小时油耗（单位：0.01升/小时）
       * </pre>
       */
      public Builder setHourOil(int value) {
        bitField0_ |= 0x00000008;
        hourOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hourOil = 4;</code>
       *
       * <pre>
       *小时油耗（单位：0.01升/小时）
       * </pre>
       */
      public Builder clearHourOil() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hourOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalDistance = 5;
      private int totalDistance_ ;
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public boolean hasTotalDistance() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public int getTotalDistance() {
        return totalDistance_;
      }
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder setTotalDistance(int value) {
        bitField0_ |= 0x00000010;
        totalDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalDistance = 5;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder clearTotalDistance() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalDistance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 waterTemperature = 6;
      private int waterTemperature_ ;
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *水温（单位：℃）
       * </pre>
       */
      public boolean hasWaterTemperature() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *水温（单位：℃）
       * </pre>
       */
      public int getWaterTemperature() {
        return waterTemperature_;
      }
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *水温（单位：℃）
       * </pre>
       */
      public Builder setWaterTemperature(int value) {
        bitField0_ |= 0x00000020;
        waterTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 waterTemperature = 6;</code>
       *
       * <pre>
       *水温（单位：℃）
       * </pre>
       */
      public Builder clearWaterTemperature() {
        bitField0_ = (bitField0_ & ~0x00000020);
        waterTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reviseOil = 7;
      private int reviseOil_ ;
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public boolean hasReviseOil() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public int getReviseOil() {
        return reviseOil_;
      }
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public Builder setReviseOil(int value) {
        bitField0_ |= 0x00000040;
        reviseOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reviseOil = 7;</code>
       *
       * <pre>
       *燃油修正（0.1%）
       * </pre>
       */
      public Builder clearReviseOil() {
        bitField0_ = (bitField0_ & ~0x00000040);
        reviseOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotationSpeed = 8;
      private int rotationSpeed_ ;
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public boolean hasRotationSpeed() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public int getRotationSpeed() {
        return rotationSpeed_;
      }
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public Builder setRotationSpeed(int value) {
        bitField0_ |= 0x00000080;
        rotationSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rotationSpeed = 8;</code>
       *
       * <pre>
       *发动机转速（单位：转/分）
       * </pre>
       */
      public Builder clearRotationSpeed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rotationSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 intakeAirTemperature = 9;
      private int intakeAirTemperature_ ;
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public boolean hasIntakeAirTemperature() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public int getIntakeAirTemperature() {
        return intakeAirTemperature_;
      }
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public Builder setIntakeAirTemperature(int value) {
        bitField0_ |= 0x00000100;
        intakeAirTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 intakeAirTemperature = 9;</code>
       *
       * <pre>
       *进气温度（单位：℃）
       * </pre>
       */
      public Builder clearIntakeAirTemperature() {
        bitField0_ = (bitField0_ & ~0x00000100);
        intakeAirTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 airDischange = 10;
      private int airDischange_ ;
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public boolean hasAirDischange() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public int getAirDischange() {
        return airDischange_;
      }
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public Builder setAirDischange(int value) {
        bitField0_ |= 0x00000200;
        airDischange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 airDischange = 10;</code>
       *
       * <pre>
       *空气流量(g/s)
       * </pre>
       */
      public Builder clearAirDischange() {
        bitField0_ = (bitField0_ & ~0x00000200);
        airDischange_ = 0;
        onChanged();
        return this;
      }

      // repeated .gboss.MapEntry otherInfoes = 11;
      private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> otherInfoes_ =
        java.util.Collections.emptyList();
      private void ensureOtherInfoesIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          otherInfoes_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry>(otherInfoes_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> otherInfoesBuilder_;

      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> getOtherInfoesList() {
        if (otherInfoesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(otherInfoes_);
        } else {
          return otherInfoesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public int getOtherInfoesCount() {
        if (otherInfoesBuilder_ == null) {
          return otherInfoes_.size();
        } else {
          return otherInfoesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getOtherInfoes(int index) {
        if (otherInfoesBuilder_ == null) {
          return otherInfoes_.get(index);
        } else {
          return otherInfoesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder setOtherInfoes(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry value) {
        if (otherInfoesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherInfoesIsMutable();
          otherInfoes_.set(index, value);
          onChanged();
        } else {
          otherInfoesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder setOtherInfoes(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          otherInfoes_.set(index, builderForValue.build());
          onChanged();
        } else {
          otherInfoesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfoes(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry value) {
        if (otherInfoesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherInfoesIsMutable();
          otherInfoes_.add(value);
          onChanged();
        } else {
          otherInfoesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfoes(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry value) {
        if (otherInfoesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherInfoesIsMutable();
          otherInfoes_.add(index, value);
          onChanged();
        } else {
          otherInfoesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfoes(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          otherInfoes_.add(builderForValue.build());
          onChanged();
        } else {
          otherInfoesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addOtherInfoes(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          otherInfoes_.add(index, builderForValue.build());
          onChanged();
        } else {
          otherInfoesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder addAllOtherInfoes(
          java.lang.Iterable<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> values) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          super.addAll(values, otherInfoes_);
          onChanged();
        } else {
          otherInfoesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder clearOtherInfoes() {
        if (otherInfoesBuilder_ == null) {
          otherInfoes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          otherInfoesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public Builder removeOtherInfoes(int index) {
        if (otherInfoesBuilder_ == null) {
          ensureOtherInfoesIsMutable();
          otherInfoes_.remove(index);
          onChanged();
        } else {
          otherInfoesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder getOtherInfoesBuilder(
          int index) {
        return getOtherInfoesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder getOtherInfoesOrBuilder(
          int index) {
        if (otherInfoesBuilder_ == null) {
          return otherInfoes_.get(index);  } else {
          return otherInfoesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
           getOtherInfoesOrBuilderList() {
        if (otherInfoesBuilder_ != null) {
          return otherInfoesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(otherInfoes_);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder addOtherInfoesBuilder() {
        return getOtherInfoesFieldBuilder().addBuilder(
            cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder addOtherInfoesBuilder(
          int index) {
        return getOtherInfoesFieldBuilder().addBuilder(
            index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry otherInfoes = 11;</code>
       *
       * <pre>
       *其他数据（暂时不解析）
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder> 
           getOtherInfoesBuilderList() {
        return getOtherInfoesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
          getOtherInfoesFieldBuilder() {
        if (otherInfoesBuilder_ == null) {
          otherInfoesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder>(
                  otherInfoes_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          otherInfoes_ = null;
        }
        return otherInfoesBuilder_;
      }

      // optional string callLetter = 12;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000800);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>optional string callLetter = 12;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // optional int64 gpsTime = 13;
      private long gpsTime_ ;
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public long getGpsTime() {
        return gpsTime_;
      }
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00001000;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gpsTime = 13;</code>
       *
       * <pre>
       *GPS时间
       * </pre>
       */
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 speed = 14;
      private int speed_ ;
      /**
       * <code>optional int32 speed = 14;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 speed = 14;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>optional int32 speed = 14;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00002000;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed = 14;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00002000);
        speed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainDistance = 15;
      private int remainDistance_ ;
      /**
       * <code>optional int32 remainDistance = 15;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public boolean hasRemainDistance() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 remainDistance = 15;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public int getRemainDistance() {
        return remainDistance_;
      }
      /**
       * <code>optional int32 remainDistance = 15;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public Builder setRemainDistance(int value) {
        bitField0_ |= 0x00004000;
        remainDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainDistance = 15;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public Builder clearRemainDistance() {
        bitField0_ = (bitField0_ & ~0x00004000);
        remainDistance_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.OBDInfo)
    }

    static {
      defaultInstance = new OBDInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.OBDInfo)
  }

  public interface GpsSimpleInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 gpsTime = 1;
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    boolean hasGpsTime();
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    long getGpsTime();

    // required bool loc = 2;
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    boolean hasLoc();
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    boolean getLoc();

    // required int32 lat = 3;
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    boolean hasLat();
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    int getLat();

    // required int32 lng = 4;
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    boolean hasLng();
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    int getLng();

    // required int32 speed = 5;
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    int getSpeed();

    // required int32 course = 6;
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    boolean hasCourse();
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    int getCourse();

    // repeated int32 status = 7;
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    java.util.List<java.lang.Integer> getStatusList();
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    int getStatusCount();
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    int getStatus(int index);

    // optional int32 totalDistance = 8;
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    boolean hasTotalDistance();
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    int getTotalDistance();

    // optional int32 oil = 9;
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    boolean hasOil();
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    int getOil();

    // optional int32 remainPercentOil = 10;
    /**
     * <code>optional int32 remainPercentOil = 10;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    boolean hasRemainPercentOil();
    /**
     * <code>optional int32 remainPercentOil = 10;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    int getRemainPercentOil();

    // optional int32 canspeed = 11;
    /**
     * <code>optional int32 canspeed = 11;</code>
     *
     * <pre>
     *CAN速度（单位：百米每小时）,可能没有
     * </pre>
     */
    boolean hasCanspeed();
    /**
     * <code>optional int32 canspeed = 11;</code>
     *
     * <pre>
     *CAN速度（单位：百米每小时）,可能没有
     * </pre>
     */
    int getCanspeed();

    // optional int32 remainDistance = 12;
    /**
     * <code>optional int32 remainDistance = 12;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    boolean hasRemainDistance();
    /**
     * <code>optional int32 remainDistance = 12;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    int getRemainDistance();
  }
  /**
   * Protobuf type {@code gboss.GpsSimpleInfo}
   *
   * <pre>
   *************************************************************************************
   * GPS简单信息
   ************************************************************************************
   * </pre>
   */
  public static final class GpsSimpleInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsSimpleInfoOrBuilder {
    // Use GpsSimpleInfo.newBuilder() to construct.
    private GpsSimpleInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsSimpleInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsSimpleInfo defaultInstance;
    public static GpsSimpleInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsSimpleInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsSimpleInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gpsTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              loc_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lat_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              lng_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              speed_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              course_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                status_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              status_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                status_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                status_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              totalDistance_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              oil_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              remainPercentOil_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              canspeed_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              remainDistance_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = java.util.Collections.unmodifiableList(status_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsSimpleInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsSimpleInfo>() {
      public GpsSimpleInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsSimpleInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsSimpleInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 gpsTime = 1;
    public static final int GPSTIME_FIELD_NUMBER = 1;
    private long gpsTime_;
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public long getGpsTime() {
      return gpsTime_;
    }

    // required bool loc = 2;
    public static final int LOC_FIELD_NUMBER = 2;
    private boolean loc_;
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    public boolean hasLoc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    public boolean getLoc() {
      return loc_;
    }

    // required int32 lat = 3;
    public static final int LAT_FIELD_NUMBER = 3;
    private int lat_;
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public boolean hasLat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public int getLat() {
      return lat_;
    }

    // required int32 lng = 4;
    public static final int LNG_FIELD_NUMBER = 4;
    private int lng_;
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public boolean hasLng() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public int getLng() {
      return lng_;
    }

    // required int32 speed = 5;
    public static final int SPEED_FIELD_NUMBER = 5;
    private int speed_;
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public int getSpeed() {
      return speed_;
    }

    // required int32 course = 6;
    public static final int COURSE_FIELD_NUMBER = 6;
    private int course_;
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    public boolean hasCourse() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    public int getCourse() {
      return course_;
    }

    // repeated int32 status = 7;
    public static final int STATUS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> status_;
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getStatusList() {
      return status_;
    }
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public int getStatusCount() {
      return status_.size();
    }
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public int getStatus(int index) {
      return status_.get(index);
    }

    // optional int32 totalDistance = 8;
    public static final int TOTALDISTANCE_FIELD_NUMBER = 8;
    private int totalDistance_;
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public boolean hasTotalDistance() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public int getTotalDistance() {
      return totalDistance_;
    }

    // optional int32 oil = 9;
    public static final int OIL_FIELD_NUMBER = 9;
    private int oil_;
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    public boolean hasOil() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    public int getOil() {
      return oil_;
    }

    // optional int32 remainPercentOil = 10;
    public static final int REMAINPERCENTOIL_FIELD_NUMBER = 10;
    private int remainPercentOil_;
    /**
     * <code>optional int32 remainPercentOil = 10;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public boolean hasRemainPercentOil() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 remainPercentOil = 10;</code>
     *
     * <pre>
     *剩余油量百分比（单位：0.1%）
     * </pre>
     */
    public int getRemainPercentOil() {
      return remainPercentOil_;
    }

    // optional int32 canspeed = 11;
    public static final int CANSPEED_FIELD_NUMBER = 11;
    private int canspeed_;
    /**
     * <code>optional int32 canspeed = 11;</code>
     *
     * <pre>
     *CAN速度（单位：百米每小时）,可能没有
     * </pre>
     */
    public boolean hasCanspeed() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 canspeed = 11;</code>
     *
     * <pre>
     *CAN速度（单位：百米每小时）,可能没有
     * </pre>
     */
    public int getCanspeed() {
      return canspeed_;
    }

    // optional int32 remainDistance = 12;
    public static final int REMAINDISTANCE_FIELD_NUMBER = 12;
    private int remainDistance_;
    /**
     * <code>optional int32 remainDistance = 12;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    public boolean hasRemainDistance() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 remainDistance = 12;</code>
     *
     * <pre>
     *剩余里程（单位：米）
     * </pre>
     */
    public int getRemainDistance() {
      return remainDistance_;
    }

    private void initFields() {
      gpsTime_ = 0L;
      loc_ = false;
      lat_ = 0;
      lng_ = 0;
      speed_ = 0;
      course_ = 0;
      status_ = java.util.Collections.emptyList();
      totalDistance_ = 0;
      oil_ = 0;
      remainPercentOil_ = 0;
      canspeed_ = 0;
      remainDistance_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGpsTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLoc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLng()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCourse()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, loc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, lng_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, course_);
      }
      for (int i = 0; i < status_.size(); i++) {
        output.writeInt32(7, status_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, oil_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, canspeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, remainDistance_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, loc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, lng_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, course_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < status_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(status_.get(i));
        }
        size += dataSize;
        size += 1 * getStatusList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, oil_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, remainPercentOil_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, canspeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, remainDistance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsSimpleInfo}
     *
     * <pre>
     *************************************************************************************
     * GPS简单信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        loc_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        lat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        lng_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        course_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        totalDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        oil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        remainPercentOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        canspeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        remainDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsSimpleInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.loc_ = loc_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lat_ = lat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lng_ = lng_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.course_ = course_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = java.util.Collections.unmodifiableList(status_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalDistance_ = totalDistance_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.oil_ = oil_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.remainPercentOil_ = remainPercentOil_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.canspeed_ = canspeed_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.remainDistance_ = remainDistance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo.getDefaultInstance()) return this;
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasLoc()) {
          setLoc(other.getLoc());
        }
        if (other.hasLat()) {
          setLat(other.getLat());
        }
        if (other.hasLng()) {
          setLng(other.getLng());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasCourse()) {
          setCourse(other.getCourse());
        }
        if (!other.status_.isEmpty()) {
          if (status_.isEmpty()) {
            status_ = other.status_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureStatusIsMutable();
            status_.addAll(other.status_);
          }
          onChanged();
        }
        if (other.hasTotalDistance()) {
          setTotalDistance(other.getTotalDistance());
        }
        if (other.hasOil()) {
          setOil(other.getOil());
        }
        if (other.hasRemainPercentOil()) {
          setRemainPercentOil(other.getRemainPercentOil());
        }
        if (other.hasCanspeed()) {
          setCanspeed(other.getCanspeed());
        }
        if (other.hasRemainDistance()) {
          setRemainDistance(other.getRemainDistance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGpsTime()) {
          
          return false;
        }
        if (!hasLoc()) {
          
          return false;
        }
        if (!hasLat()) {
          
          return false;
        }
        if (!hasLng()) {
          
          return false;
        }
        if (!hasSpeed()) {
          
          return false;
        }
        if (!hasCourse()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsSimpleInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 gpsTime = 1;
      private long gpsTime_ ;
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public long getGpsTime() {
        return gpsTime_;
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00000001;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }

      // required bool loc = 2;
      private boolean loc_ ;
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public boolean hasLoc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public boolean getLoc() {
        return loc_;
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public Builder setLoc(boolean value) {
        bitField0_ |= 0x00000002;
        loc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public Builder clearLoc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        loc_ = false;
        onChanged();
        return this;
      }

      // required int32 lat = 3;
      private int lat_ ;
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public boolean hasLat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public int getLat() {
        return lat_;
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder setLat(int value) {
        bitField0_ |= 0x00000004;
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder clearLat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lat_ = 0;
        onChanged();
        return this;
      }

      // required int32 lng = 4;
      private int lng_ ;
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public boolean hasLng() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public int getLng() {
        return lng_;
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder setLng(int value) {
        bitField0_ |= 0x00000008;
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder clearLng() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lng_ = 0;
        onChanged();
        return this;
      }

      // required int32 speed = 5;
      private int speed_ ;
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000010;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0;
        onChanged();
        return this;
      }

      // required int32 course = 6;
      private int course_ ;
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public boolean hasCourse() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public int getCourse() {
        return course_;
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public Builder setCourse(int value) {
        bitField0_ |= 0x00000020;
        course_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public Builder clearCourse() {
        bitField0_ = (bitField0_ & ~0x00000020);
        course_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 status = 7;
      private java.util.List<java.lang.Integer> status_ = java.util.Collections.emptyList();
      private void ensureStatusIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = new java.util.ArrayList<java.lang.Integer>(status_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getStatusList() {
        return java.util.Collections.unmodifiableList(status_);
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public int getStatusCount() {
        return status_.size();
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public int getStatus(int index) {
        return status_.get(index);
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder setStatus(
          int index, int value) {
        ensureStatusIsMutable();
        status_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder addStatus(int value) {
        ensureStatusIsMutable();
        status_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder addAllStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStatusIsMutable();
        super.addAll(values, status_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder clearStatus() {
        status_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 totalDistance = 8;
      private int totalDistance_ ;
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public boolean hasTotalDistance() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public int getTotalDistance() {
        return totalDistance_;
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder setTotalDistance(int value) {
        bitField0_ |= 0x00000080;
        totalDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder clearTotalDistance() {
        bitField0_ = (bitField0_ & ~0x00000080);
        totalDistance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 oil = 9;
      private int oil_ ;
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public boolean hasOil() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public int getOil() {
        return oil_;
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public Builder setOil(int value) {
        bitField0_ |= 0x00000100;
        oil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public Builder clearOil() {
        bitField0_ = (bitField0_ & ~0x00000100);
        oil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainPercentOil = 10;
      private int remainPercentOil_ ;
      /**
       * <code>optional int32 remainPercentOil = 10;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public boolean hasRemainPercentOil() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 remainPercentOil = 10;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public int getRemainPercentOil() {
        return remainPercentOil_;
      }
      /**
       * <code>optional int32 remainPercentOil = 10;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder setRemainPercentOil(int value) {
        bitField0_ |= 0x00000200;
        remainPercentOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainPercentOil = 10;</code>
       *
       * <pre>
       *剩余油量百分比（单位：0.1%）
       * </pre>
       */
      public Builder clearRemainPercentOil() {
        bitField0_ = (bitField0_ & ~0x00000200);
        remainPercentOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 canspeed = 11;
      private int canspeed_ ;
      /**
       * <code>optional int32 canspeed = 11;</code>
       *
       * <pre>
       *CAN速度（单位：百米每小时）,可能没有
       * </pre>
       */
      public boolean hasCanspeed() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 canspeed = 11;</code>
       *
       * <pre>
       *CAN速度（单位：百米每小时）,可能没有
       * </pre>
       */
      public int getCanspeed() {
        return canspeed_;
      }
      /**
       * <code>optional int32 canspeed = 11;</code>
       *
       * <pre>
       *CAN速度（单位：百米每小时）,可能没有
       * </pre>
       */
      public Builder setCanspeed(int value) {
        bitField0_ |= 0x00000400;
        canspeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 canspeed = 11;</code>
       *
       * <pre>
       *CAN速度（单位：百米每小时）,可能没有
       * </pre>
       */
      public Builder clearCanspeed() {
        bitField0_ = (bitField0_ & ~0x00000400);
        canspeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remainDistance = 12;
      private int remainDistance_ ;
      /**
       * <code>optional int32 remainDistance = 12;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public boolean hasRemainDistance() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 remainDistance = 12;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public int getRemainDistance() {
        return remainDistance_;
      }
      /**
       * <code>optional int32 remainDistance = 12;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public Builder setRemainDistance(int value) {
        bitField0_ |= 0x00000800;
        remainDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainDistance = 12;</code>
       *
       * <pre>
       *剩余里程（单位：米）
       * </pre>
       */
      public Builder clearRemainDistance() {
        bitField0_ = (bitField0_ & ~0x00000800);
        remainDistance_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsSimpleInfo)
    }

    static {
      defaultInstance = new GpsSimpleInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsSimpleInfo)
  }

  public interface GpsBaseInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 gpsTime = 1;
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    boolean hasGpsTime();
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    long getGpsTime();

    // required bool loc = 2;
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    boolean hasLoc();
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    boolean getLoc();

    // required int32 lat = 3;
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    boolean hasLat();
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    int getLat();

    // required int32 lng = 4;
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    boolean hasLng();
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    int getLng();

    // required int32 speed = 5;
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    int getSpeed();

    // required int32 course = 6;
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    boolean hasCourse();
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    int getCourse();

    // repeated int32 status = 7;
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    java.util.List<java.lang.Integer> getStatusList();
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    int getStatusCount();
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    int getStatus(int index);

    // optional int32 totalDistance = 8;
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    boolean hasTotalDistance();
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    int getTotalDistance();

    // optional int32 oil = 9;
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    boolean hasOil();
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    int getOil();

    // optional int32 oilPercent = 10;
    /**
     * <code>optional int32 oilPercent = 10;</code>
     *
     * <pre>
     *油箱中油量千分比
     * </pre>
     */
    boolean hasOilPercent();
    /**
     * <code>optional int32 oilPercent = 10;</code>
     *
     * <pre>
     *油箱中油量千分比
     * </pre>
     */
    int getOilPercent();

    // optional int32 temperature1 = 11;
    /**
     * <code>optional int32 temperature1 = 11;</code>
     *
     * <pre>
     *温度1（单位：十分之一摄氏度）
     * </pre>
     */
    boolean hasTemperature1();
    /**
     * <code>optional int32 temperature1 = 11;</code>
     *
     * <pre>
     *温度1（单位：十分之一摄氏度）
     * </pre>
     */
    int getTemperature1();

    // optional int32 temperature2 = 12;
    /**
     * <code>optional int32 temperature2 = 12;</code>
     *
     * <pre>
     *温度2（单位：十分之一摄氏度）
     * </pre>
     */
    boolean hasTemperature2();
    /**
     * <code>optional int32 temperature2 = 12;</code>
     *
     * <pre>
     *温度2（单位：十分之一摄氏度）
     * </pre>
     */
    int getTemperature2();

    // repeated .gboss.MapEntry appendParams = 13;
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> 
        getAppendParamsList();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getAppendParams(int index);
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    int getAppendParamsCount();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
        getAppendParamsOrBuilderList();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
        int index);

    // optional .gboss.OBDInfo obdInfo = 14;
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *OBD数据
     * </pre>
     */
    boolean hasObdInfo();
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *OBD数据
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo getObdInfo();
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *OBD数据
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfoOrBuilder getObdInfoOrBuilder();
  }
  /**
   * Protobuf type {@code gboss.GpsBaseInfo}
   *
   * <pre>
   *************************************************************************************
   * GPS基本信息
   ************************************************************************************
   * </pre>
   */
  public static final class GpsBaseInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsBaseInfoOrBuilder {
    // Use GpsBaseInfo.newBuilder() to construct.
    private GpsBaseInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsBaseInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsBaseInfo defaultInstance;
    public static GpsBaseInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsBaseInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsBaseInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gpsTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              loc_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lat_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              lng_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              speed_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              course_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                status_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              status_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                status_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                status_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              totalDistance_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              oil_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              oilPercent_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              temperature1_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              temperature2_ = input.readInt32();
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                appendParams_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry>();
                mutable_bitField0_ |= 0x00001000;
              }
              appendParams_.add(input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = obdInfo_.toBuilder();
              }
              obdInfo_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(obdInfo_);
                obdInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = java.util.Collections.unmodifiableList(status_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          appendParams_ = java.util.Collections.unmodifiableList(appendParams_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsBaseInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsBaseInfo>() {
      public GpsBaseInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsBaseInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsBaseInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 gpsTime = 1;
    public static final int GPSTIME_FIELD_NUMBER = 1;
    private long gpsTime_;
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 gpsTime = 1;</code>
     *
     * <pre>
     *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
     * </pre>
     */
    public long getGpsTime() {
      return gpsTime_;
    }

    // required bool loc = 2;
    public static final int LOC_FIELD_NUMBER = 2;
    private boolean loc_;
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    public boolean hasLoc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool loc = 2;</code>
     *
     * <pre>
     *是否定位
     * </pre>
     */
    public boolean getLoc() {
      return loc_;
    }

    // required int32 lat = 3;
    public static final int LAT_FIELD_NUMBER = 3;
    private int lat_;
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public boolean hasLat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 lat = 3;</code>
     *
     * <pre>
     *纬度(单位：百万分之一度，北正南负）
     * </pre>
     */
    public int getLat() {
      return lat_;
    }

    // required int32 lng = 4;
    public static final int LNG_FIELD_NUMBER = 4;
    private int lng_;
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public boolean hasLng() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 lng = 4;</code>
     *
     * <pre>
     *经度(单位：百万分之一度，东正西负）
     * </pre>
     */
    public int getLng() {
      return lng_;
    }

    // required int32 speed = 5;
    public static final int SPEED_FIELD_NUMBER = 5;
    private int speed_;
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 speed = 5;</code>
     *
     * <pre>
     *速度（单位：百米每小时）
     * </pre>
     */
    public int getSpeed() {
      return speed_;
    }

    // required int32 course = 6;
    public static final int COURSE_FIELD_NUMBER = 6;
    private int course_;
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    public boolean hasCourse() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 course = 6;</code>
     *
     * <pre>
     *方向（单位：度，正北0，顺时针增加）
     * </pre>
     */
    public int getCourse() {
      return course_;
    }

    // repeated int32 status = 7;
    public static final int STATUS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> status_;
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getStatusList() {
      return status_;
    }
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public int getStatusCount() {
      return status_.size();
    }
    /**
     * <code>repeated int32 status = 7;</code>
     *
     * <pre>
     *状态（多个）
     * </pre>
     */
    public int getStatus(int index) {
      return status_.get(index);
    }

    // optional int32 totalDistance = 8;
    public static final int TOTALDISTANCE_FIELD_NUMBER = 8;
    private int totalDistance_;
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public boolean hasTotalDistance() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 totalDistance = 8;</code>
     *
     * <pre>
     *总里程（单位：米）
     * </pre>
     */
    public int getTotalDistance() {
      return totalDistance_;
    }

    // optional int32 oil = 9;
    public static final int OIL_FIELD_NUMBER = 9;
    private int oil_;
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    public boolean hasOil() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 oil = 9;</code>
     *
     * <pre>
     *油箱中油量（单位：0.01升）
     * </pre>
     */
    public int getOil() {
      return oil_;
    }

    // optional int32 oilPercent = 10;
    public static final int OILPERCENT_FIELD_NUMBER = 10;
    private int oilPercent_;
    /**
     * <code>optional int32 oilPercent = 10;</code>
     *
     * <pre>
     *油箱中油量千分比
     * </pre>
     */
    public boolean hasOilPercent() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 oilPercent = 10;</code>
     *
     * <pre>
     *油箱中油量千分比
     * </pre>
     */
    public int getOilPercent() {
      return oilPercent_;
    }

    // optional int32 temperature1 = 11;
    public static final int TEMPERATURE1_FIELD_NUMBER = 11;
    private int temperature1_;
    /**
     * <code>optional int32 temperature1 = 11;</code>
     *
     * <pre>
     *温度1（单位：十分之一摄氏度）
     * </pre>
     */
    public boolean hasTemperature1() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 temperature1 = 11;</code>
     *
     * <pre>
     *温度1（单位：十分之一摄氏度）
     * </pre>
     */
    public int getTemperature1() {
      return temperature1_;
    }

    // optional int32 temperature2 = 12;
    public static final int TEMPERATURE2_FIELD_NUMBER = 12;
    private int temperature2_;
    /**
     * <code>optional int32 temperature2 = 12;</code>
     *
     * <pre>
     *温度2（单位：十分之一摄氏度）
     * </pre>
     */
    public boolean hasTemperature2() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 temperature2 = 12;</code>
     *
     * <pre>
     *温度2（单位：十分之一摄氏度）
     * </pre>
     */
    public int getTemperature2() {
      return temperature2_;
    }

    // repeated .gboss.MapEntry appendParams = 13;
    public static final int APPENDPARAMS_FIELD_NUMBER = 13;
    private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> appendParams_;
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> getAppendParamsList() {
      return appendParams_;
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
        getAppendParamsOrBuilderList() {
      return appendParams_;
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public int getAppendParamsCount() {
      return appendParams_.size();
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getAppendParams(int index) {
      return appendParams_.get(index);
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 13;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
        int index) {
      return appendParams_.get(index);
    }

    // optional .gboss.OBDInfo obdInfo = 14;
    public static final int OBDINFO_FIELD_NUMBER = 14;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo obdInfo_;
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *OBD数据
     * </pre>
     */
    public boolean hasObdInfo() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *OBD数据
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo getObdInfo() {
      return obdInfo_;
    }
    /**
     * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
     *
     * <pre>
     *OBD数据
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfoOrBuilder getObdInfoOrBuilder() {
      return obdInfo_;
    }

    private void initFields() {
      gpsTime_ = 0L;
      loc_ = false;
      lat_ = 0;
      lng_ = 0;
      speed_ = 0;
      course_ = 0;
      status_ = java.util.Collections.emptyList();
      totalDistance_ = 0;
      oil_ = 0;
      oilPercent_ = 0;
      temperature1_ = 0;
      temperature2_ = 0;
      appendParams_ = java.util.Collections.emptyList();
      obdInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGpsTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLoc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLng()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCourse()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAppendParamsCount(); i++) {
        if (!getAppendParams(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasObdInfo()) {
        if (!getObdInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, loc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, lng_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, course_);
      }
      for (int i = 0; i < status_.size(); i++) {
        output.writeInt32(7, status_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, oil_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, oilPercent_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, temperature1_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, temperature2_);
      }
      for (int i = 0; i < appendParams_.size(); i++) {
        output.writeMessage(13, appendParams_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(14, obdInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, loc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, lng_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, course_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < status_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(status_.get(i));
        }
        size += dataSize;
        size += 1 * getStatusList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, oil_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, oilPercent_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, temperature1_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, temperature2_);
      }
      for (int i = 0; i < appendParams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, appendParams_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, obdInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsBaseInfo}
     *
     * <pre>
     *************************************************************************************
     * GPS基本信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAppendParamsFieldBuilder();
          getObdInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        loc_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        lat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        lng_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        course_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        totalDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        oil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        oilPercent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        temperature1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        temperature2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (appendParamsBuilder_ == null) {
          appendParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          appendParamsBuilder_.clear();
        }
        if (obdInfoBuilder_ == null) {
          obdInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
        } else {
          obdInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsBaseInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.loc_ = loc_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lat_ = lat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lng_ = lng_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.course_ = course_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = java.util.Collections.unmodifiableList(status_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalDistance_ = totalDistance_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.oil_ = oil_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.oilPercent_ = oilPercent_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.temperature1_ = temperature1_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.temperature2_ = temperature2_;
        if (appendParamsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            appendParams_ = java.util.Collections.unmodifiableList(appendParams_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.appendParams_ = appendParams_;
        } else {
          result.appendParams_ = appendParamsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (obdInfoBuilder_ == null) {
          result.obdInfo_ = obdInfo_;
        } else {
          result.obdInfo_ = obdInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) return this;
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasLoc()) {
          setLoc(other.getLoc());
        }
        if (other.hasLat()) {
          setLat(other.getLat());
        }
        if (other.hasLng()) {
          setLng(other.getLng());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasCourse()) {
          setCourse(other.getCourse());
        }
        if (!other.status_.isEmpty()) {
          if (status_.isEmpty()) {
            status_ = other.status_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureStatusIsMutable();
            status_.addAll(other.status_);
          }
          onChanged();
        }
        if (other.hasTotalDistance()) {
          setTotalDistance(other.getTotalDistance());
        }
        if (other.hasOil()) {
          setOil(other.getOil());
        }
        if (other.hasOilPercent()) {
          setOilPercent(other.getOilPercent());
        }
        if (other.hasTemperature1()) {
          setTemperature1(other.getTemperature1());
        }
        if (other.hasTemperature2()) {
          setTemperature2(other.getTemperature2());
        }
        if (appendParamsBuilder_ == null) {
          if (!other.appendParams_.isEmpty()) {
            if (appendParams_.isEmpty()) {
              appendParams_ = other.appendParams_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureAppendParamsIsMutable();
              appendParams_.addAll(other.appendParams_);
            }
            onChanged();
          }
        } else {
          if (!other.appendParams_.isEmpty()) {
            if (appendParamsBuilder_.isEmpty()) {
              appendParamsBuilder_.dispose();
              appendParamsBuilder_ = null;
              appendParams_ = other.appendParams_;
              bitField0_ = (bitField0_ & ~0x00001000);
              appendParamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAppendParamsFieldBuilder() : null;
            } else {
              appendParamsBuilder_.addAllMessages(other.appendParams_);
            }
          }
        }
        if (other.hasObdInfo()) {
          mergeObdInfo(other.getObdInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGpsTime()) {
          
          return false;
        }
        if (!hasLoc()) {
          
          return false;
        }
        if (!hasLat()) {
          
          return false;
        }
        if (!hasLng()) {
          
          return false;
        }
        if (!hasSpeed()) {
          
          return false;
        }
        if (!hasCourse()) {
          
          return false;
        }
        for (int i = 0; i < getAppendParamsCount(); i++) {
          if (!getAppendParams(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasObdInfo()) {
          if (!getObdInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 gpsTime = 1;
      private long gpsTime_ ;
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public long getGpsTime() {
        return gpsTime_;
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00000001;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 gpsTime = 1;</code>
       *
       * <pre>
       *GPS时间(从1970-1-1 0:0:0开始的秒数), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }

      // required bool loc = 2;
      private boolean loc_ ;
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public boolean hasLoc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public boolean getLoc() {
        return loc_;
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public Builder setLoc(boolean value) {
        bitField0_ |= 0x00000002;
        loc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool loc = 2;</code>
       *
       * <pre>
       *是否定位
       * </pre>
       */
      public Builder clearLoc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        loc_ = false;
        onChanged();
        return this;
      }

      // required int32 lat = 3;
      private int lat_ ;
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public boolean hasLat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public int getLat() {
        return lat_;
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder setLat(int value) {
        bitField0_ |= 0x00000004;
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lat = 3;</code>
       *
       * <pre>
       *纬度(单位：百万分之一度，北正南负）
       * </pre>
       */
      public Builder clearLat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lat_ = 0;
        onChanged();
        return this;
      }

      // required int32 lng = 4;
      private int lng_ ;
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public boolean hasLng() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public int getLng() {
        return lng_;
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder setLng(int value) {
        bitField0_ |= 0x00000008;
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lng = 4;</code>
       *
       * <pre>
       *经度(单位：百万分之一度，东正西负）
       * </pre>
       */
      public Builder clearLng() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lng_ = 0;
        onChanged();
        return this;
      }

      // required int32 speed = 5;
      private int speed_ ;
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000010;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 speed = 5;</code>
       *
       * <pre>
       *速度（单位：百米每小时）
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0;
        onChanged();
        return this;
      }

      // required int32 course = 6;
      private int course_ ;
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public boolean hasCourse() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public int getCourse() {
        return course_;
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public Builder setCourse(int value) {
        bitField0_ |= 0x00000020;
        course_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 course = 6;</code>
       *
       * <pre>
       *方向（单位：度，正北0，顺时针增加）
       * </pre>
       */
      public Builder clearCourse() {
        bitField0_ = (bitField0_ & ~0x00000020);
        course_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 status = 7;
      private java.util.List<java.lang.Integer> status_ = java.util.Collections.emptyList();
      private void ensureStatusIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          status_ = new java.util.ArrayList<java.lang.Integer>(status_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getStatusList() {
        return java.util.Collections.unmodifiableList(status_);
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public int getStatusCount() {
        return status_.size();
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public int getStatus(int index) {
        return status_.get(index);
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder setStatus(
          int index, int value) {
        ensureStatusIsMutable();
        status_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder addStatus(int value) {
        ensureStatusIsMutable();
        status_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder addAllStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStatusIsMutable();
        super.addAll(values, status_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 status = 7;</code>
       *
       * <pre>
       *状态（多个）
       * </pre>
       */
      public Builder clearStatus() {
        status_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 totalDistance = 8;
      private int totalDistance_ ;
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public boolean hasTotalDistance() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public int getTotalDistance() {
        return totalDistance_;
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder setTotalDistance(int value) {
        bitField0_ |= 0x00000080;
        totalDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalDistance = 8;</code>
       *
       * <pre>
       *总里程（单位：米）
       * </pre>
       */
      public Builder clearTotalDistance() {
        bitField0_ = (bitField0_ & ~0x00000080);
        totalDistance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 oil = 9;
      private int oil_ ;
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public boolean hasOil() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public int getOil() {
        return oil_;
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public Builder setOil(int value) {
        bitField0_ |= 0x00000100;
        oil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 oil = 9;</code>
       *
       * <pre>
       *油箱中油量（单位：0.01升）
       * </pre>
       */
      public Builder clearOil() {
        bitField0_ = (bitField0_ & ~0x00000100);
        oil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 oilPercent = 10;
      private int oilPercent_ ;
      /**
       * <code>optional int32 oilPercent = 10;</code>
       *
       * <pre>
       *油箱中油量千分比
       * </pre>
       */
      public boolean hasOilPercent() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 oilPercent = 10;</code>
       *
       * <pre>
       *油箱中油量千分比
       * </pre>
       */
      public int getOilPercent() {
        return oilPercent_;
      }
      /**
       * <code>optional int32 oilPercent = 10;</code>
       *
       * <pre>
       *油箱中油量千分比
       * </pre>
       */
      public Builder setOilPercent(int value) {
        bitField0_ |= 0x00000200;
        oilPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 oilPercent = 10;</code>
       *
       * <pre>
       *油箱中油量千分比
       * </pre>
       */
      public Builder clearOilPercent() {
        bitField0_ = (bitField0_ & ~0x00000200);
        oilPercent_ = 0;
        onChanged();
        return this;
      }

      // optional int32 temperature1 = 11;
      private int temperature1_ ;
      /**
       * <code>optional int32 temperature1 = 11;</code>
       *
       * <pre>
       *温度1（单位：十分之一摄氏度）
       * </pre>
       */
      public boolean hasTemperature1() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 temperature1 = 11;</code>
       *
       * <pre>
       *温度1（单位：十分之一摄氏度）
       * </pre>
       */
      public int getTemperature1() {
        return temperature1_;
      }
      /**
       * <code>optional int32 temperature1 = 11;</code>
       *
       * <pre>
       *温度1（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder setTemperature1(int value) {
        bitField0_ |= 0x00000400;
        temperature1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 temperature1 = 11;</code>
       *
       * <pre>
       *温度1（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder clearTemperature1() {
        bitField0_ = (bitField0_ & ~0x00000400);
        temperature1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 temperature2 = 12;
      private int temperature2_ ;
      /**
       * <code>optional int32 temperature2 = 12;</code>
       *
       * <pre>
       *温度2（单位：十分之一摄氏度）
       * </pre>
       */
      public boolean hasTemperature2() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 temperature2 = 12;</code>
       *
       * <pre>
       *温度2（单位：十分之一摄氏度）
       * </pre>
       */
      public int getTemperature2() {
        return temperature2_;
      }
      /**
       * <code>optional int32 temperature2 = 12;</code>
       *
       * <pre>
       *温度2（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder setTemperature2(int value) {
        bitField0_ |= 0x00000800;
        temperature2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 temperature2 = 12;</code>
       *
       * <pre>
       *温度2（单位：十分之一摄氏度）
       * </pre>
       */
      public Builder clearTemperature2() {
        bitField0_ = (bitField0_ & ~0x00000800);
        temperature2_ = 0;
        onChanged();
        return this;
      }

      // repeated .gboss.MapEntry appendParams = 13;
      private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> appendParams_ =
        java.util.Collections.emptyList();
      private void ensureAppendParamsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          appendParams_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry>(appendParams_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> appendParamsBuilder_;

      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> getAppendParamsList() {
        if (appendParamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(appendParams_);
        } else {
          return appendParamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public int getAppendParamsCount() {
        if (appendParamsBuilder_ == null) {
          return appendParams_.size();
        } else {
          return appendParamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getAppendParams(int index) {
        if (appendParamsBuilder_ == null) {
          return appendParams_.get(index);
        } else {
          return appendParamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder setAppendParams(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.set(index, value);
          onChanged();
        } else {
          appendParamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder setAppendParams(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.set(index, builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.add(value);
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.add(index, value);
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.add(builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.add(index, builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAllAppendParams(
          java.lang.Iterable<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> values) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          super.addAll(values, appendParams_);
          onChanged();
        } else {
          appendParamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder clearAppendParams() {
        if (appendParamsBuilder_ == null) {
          appendParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          appendParamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder removeAppendParams(int index) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.remove(index);
          onChanged();
        } else {
          appendParamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder getAppendParamsBuilder(
          int index) {
        return getAppendParamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
          int index) {
        if (appendParamsBuilder_ == null) {
          return appendParams_.get(index);  } else {
          return appendParamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
           getAppendParamsOrBuilderList() {
        if (appendParamsBuilder_ != null) {
          return appendParamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(appendParams_);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder addAppendParamsBuilder() {
        return getAppendParamsFieldBuilder().addBuilder(
            cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder addAppendParamsBuilder(
          int index) {
        return getAppendParamsFieldBuilder().addBuilder(
            index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 13;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder> 
           getAppendParamsBuilderList() {
        return getAppendParamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
          getAppendParamsFieldBuilder() {
        if (appendParamsBuilder_ == null) {
          appendParamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder>(
                  appendParams_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          appendParams_ = null;
        }
        return appendParamsBuilder_;
      }

      // optional .gboss.OBDInfo obdInfo = 14;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo obdInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfoOrBuilder> obdInfoBuilder_;
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *OBD数据
       * </pre>
       */
      public boolean hasObdInfo() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *OBD数据
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo getObdInfo() {
        if (obdInfoBuilder_ == null) {
          return obdInfo_;
        } else {
          return obdInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *OBD数据
       * </pre>
       */
      public Builder setObdInfo(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo value) {
        if (obdInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          obdInfo_ = value;
          onChanged();
        } else {
          obdInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *OBD数据
       * </pre>
       */
      public Builder setObdInfo(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.Builder builderForValue) {
        if (obdInfoBuilder_ == null) {
          obdInfo_ = builderForValue.build();
          onChanged();
        } else {
          obdInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *OBD数据
       * </pre>
       */
      public Builder mergeObdInfo(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo value) {
        if (obdInfoBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              obdInfo_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.getDefaultInstance()) {
            obdInfo_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.newBuilder(obdInfo_).mergeFrom(value).buildPartial();
          } else {
            obdInfo_ = value;
          }
          onChanged();
        } else {
          obdInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *OBD数据
       * </pre>
       */
      public Builder clearObdInfo() {
        if (obdInfoBuilder_ == null) {
          obdInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.getDefaultInstance();
          onChanged();
        } else {
          obdInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *OBD数据
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.Builder getObdInfoBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getObdInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *OBD数据
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfoOrBuilder getObdInfoOrBuilder() {
        if (obdInfoBuilder_ != null) {
          return obdInfoBuilder_.getMessageOrBuilder();
        } else {
          return obdInfo_;
        }
      }
      /**
       * <code>optional .gboss.OBDInfo obdInfo = 14;</code>
       *
       * <pre>
       *OBD数据
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfoOrBuilder> 
          getObdInfoFieldBuilder() {
        if (obdInfoBuilder_ == null) {
          obdInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OBDInfoOrBuilder>(
                  obdInfo_,
                  getParentForChildren(),
                  isClean());
          obdInfo_ = null;
        }
        return obdInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsBaseInfo)
    }

    static {
      defaultInstance = new GpsBaseInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsBaseInfo)
  }

  public interface GpsRoadInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 level = 2;
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     *道路等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     *道路等级
     * </pre>
     */
    int getLevel();

    // required int32 distance = 3;
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到道路的距离
     * </pre>
     */
    boolean hasDistance();
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到道路的距离
     * </pre>
     */
    int getDistance();

    // optional int32 id = 4;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *道路编号
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *道路编号
     * </pre>
     */
    int getId();

    // optional int32 latOnRoad = 5;
    /**
     * <code>optional int32 latOnRoad = 5;</code>
     *
     * <pre>
     *匹配路上纬度(单位：百万分之一度）
     * </pre>
     */
    boolean hasLatOnRoad();
    /**
     * <code>optional int32 latOnRoad = 5;</code>
     *
     * <pre>
     *匹配路上纬度(单位：百万分之一度）
     * </pre>
     */
    int getLatOnRoad();

    // optional int32 lngOnRoad = 6;
    /**
     * <code>optional int32 lngOnRoad = 6;</code>
     *
     * <pre>
     *匹配路上经度(单位：百万分之一度）
     * </pre>
     */
    boolean hasLngOnRoad();
    /**
     * <code>optional int32 lngOnRoad = 6;</code>
     *
     * <pre>
     *匹配路上经度(单位：百万分之一度）
     * </pre>
     */
    int getLngOnRoad();
  }
  /**
   * Protobuf type {@code gboss.GpsRoadInfo}
   *
   * <pre>
   *
   * GPS道路信息
   * </pre>
   */
  public static final class GpsRoadInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsRoadInfoOrBuilder {
    // Use GpsRoadInfo.newBuilder() to construct.
    private GpsRoadInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsRoadInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsRoadInfo defaultInstance;
    public static GpsRoadInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsRoadInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsRoadInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              level_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              distance_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              id_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              latOnRoad_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              lngOnRoad_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsRoadInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsRoadInfo>() {
      public GpsRoadInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsRoadInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsRoadInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *道路名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 level = 2;
    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     *道路等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     *道路等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // required int32 distance = 3;
    public static final int DISTANCE_FIELD_NUMBER = 3;
    private int distance_;
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到道路的距离
     * </pre>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到道路的距离
     * </pre>
     */
    public int getDistance() {
      return distance_;
    }

    // optional int32 id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private int id_;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *道路编号
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *道路编号
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional int32 latOnRoad = 5;
    public static final int LATONROAD_FIELD_NUMBER = 5;
    private int latOnRoad_;
    /**
     * <code>optional int32 latOnRoad = 5;</code>
     *
     * <pre>
     *匹配路上纬度(单位：百万分之一度）
     * </pre>
     */
    public boolean hasLatOnRoad() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 latOnRoad = 5;</code>
     *
     * <pre>
     *匹配路上纬度(单位：百万分之一度）
     * </pre>
     */
    public int getLatOnRoad() {
      return latOnRoad_;
    }

    // optional int32 lngOnRoad = 6;
    public static final int LNGONROAD_FIELD_NUMBER = 6;
    private int lngOnRoad_;
    /**
     * <code>optional int32 lngOnRoad = 6;</code>
     *
     * <pre>
     *匹配路上经度(单位：百万分之一度）
     * </pre>
     */
    public boolean hasLngOnRoad() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 lngOnRoad = 6;</code>
     *
     * <pre>
     *匹配路上经度(单位：百万分之一度）
     * </pre>
     */
    public int getLngOnRoad() {
      return lngOnRoad_;
    }

    private void initFields() {
      name_ = "";
      level_ = 0;
      distance_ = 0;
      id_ = 0;
      latOnRoad_ = 0;
      lngOnRoad_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, id_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, latOnRoad_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, lngOnRoad_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, id_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, latOnRoad_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, lngOnRoad_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsRoadInfo}
     *
     * <pre>
     *
     * GPS道路信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        latOnRoad_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lngOnRoad_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsRoadInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.distance_ = distance_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.latOnRoad_ = latOnRoad_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lngOnRoad_ = lngOnRoad_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLatOnRoad()) {
          setLatOnRoad(other.getLatOnRoad());
        }
        if (other.hasLngOnRoad()) {
          setLngOnRoad(other.getLngOnRoad());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasDistance()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *道路名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 level = 2;
      private int level_ ;
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       *道路等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       *道路等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       *道路等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000002;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       *道路等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        onChanged();
        return this;
      }

      // required int32 distance = 3;
      private int distance_ ;
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到道路的距离
       * </pre>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到道路的距离
       * </pre>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到道路的距离
       * </pre>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000004;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到道路的距离
       * </pre>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 id = 4;
      private int id_ ;
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *道路编号
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *道路编号
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *道路编号
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000008;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *道路编号
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 latOnRoad = 5;
      private int latOnRoad_ ;
      /**
       * <code>optional int32 latOnRoad = 5;</code>
       *
       * <pre>
       *匹配路上纬度(单位：百万分之一度）
       * </pre>
       */
      public boolean hasLatOnRoad() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 latOnRoad = 5;</code>
       *
       * <pre>
       *匹配路上纬度(单位：百万分之一度）
       * </pre>
       */
      public int getLatOnRoad() {
        return latOnRoad_;
      }
      /**
       * <code>optional int32 latOnRoad = 5;</code>
       *
       * <pre>
       *匹配路上纬度(单位：百万分之一度）
       * </pre>
       */
      public Builder setLatOnRoad(int value) {
        bitField0_ |= 0x00000010;
        latOnRoad_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 latOnRoad = 5;</code>
       *
       * <pre>
       *匹配路上纬度(单位：百万分之一度）
       * </pre>
       */
      public Builder clearLatOnRoad() {
        bitField0_ = (bitField0_ & ~0x00000010);
        latOnRoad_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lngOnRoad = 6;
      private int lngOnRoad_ ;
      /**
       * <code>optional int32 lngOnRoad = 6;</code>
       *
       * <pre>
       *匹配路上经度(单位：百万分之一度）
       * </pre>
       */
      public boolean hasLngOnRoad() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 lngOnRoad = 6;</code>
       *
       * <pre>
       *匹配路上经度(单位：百万分之一度）
       * </pre>
       */
      public int getLngOnRoad() {
        return lngOnRoad_;
      }
      /**
       * <code>optional int32 lngOnRoad = 6;</code>
       *
       * <pre>
       *匹配路上经度(单位：百万分之一度）
       * </pre>
       */
      public Builder setLngOnRoad(int value) {
        bitField0_ |= 0x00000020;
        lngOnRoad_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lngOnRoad = 6;</code>
       *
       * <pre>
       *匹配路上经度(单位：百万分之一度）
       * </pre>
       */
      public Builder clearLngOnRoad() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lngOnRoad_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsRoadInfo)
    }

    static {
      defaultInstance = new GpsRoadInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsRoadInfo)
  }

  public interface GpsPointInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *参考点类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *参考点类型
     * </pre>
     */
    int getType();

    // required int32 distance = 3;
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到参考点的距离
     * </pre>
     */
    boolean hasDistance();
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到参考点的距离
     * </pre>
     */
    int getDistance();

    // optional int32 id = 4;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *参考点编号
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *参考点编号
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code gboss.GpsPointInfo}
   *
   * <pre>
   *
   * GPS参考点信息
   * </pre>
   */
  public static final class GpsPointInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsPointInfoOrBuilder {
    // Use GpsPointInfo.newBuilder() to construct.
    private GpsPointInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsPointInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsPointInfo defaultInstance;
    public static GpsPointInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsPointInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsPointInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              distance_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsPointInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsPointInfo>() {
      public GpsPointInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsPointInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsPointInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *参考点名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *参考点类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *参考点类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 distance = 3;
    public static final int DISTANCE_FIELD_NUMBER = 3;
    private int distance_;
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到参考点的距离
     * </pre>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 distance = 3;</code>
     *
     * <pre>
     *点到参考点的距离
     * </pre>
     */
    public int getDistance() {
      return distance_;
    }

    // optional int32 id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private int id_;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *参考点编号
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *参考点编号
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      name_ = "";
      type_ = 0;
      distance_ = 0;
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, distance_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsPointInfo}
     *
     * <pre>
     *
     * GPS参考点信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsPointInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.distance_ = distance_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasDistance()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *参考点名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *参考点类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *参考点类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *参考点类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *参考点类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 distance = 3;
      private int distance_ ;
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到参考点的距离
       * </pre>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到参考点的距离
       * </pre>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到参考点的距离
       * </pre>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000004;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 distance = 3;</code>
       *
       * <pre>
       *点到参考点的距离
       * </pre>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 id = 4;
      private int id_ ;
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *参考点编号
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *参考点编号
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *参考点编号
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000008;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *参考点编号
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsPointInfo)
    }

    static {
      defaultInstance = new GpsPointInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsPointInfo)
  }

  public interface GpsReferPositionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string province = 1;
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    boolean hasProvince();
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    java.lang.String getProvince();
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    com.google.protobuf.ByteString
        getProvinceBytes();

    // required string city = 2;
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    boolean hasCity();
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    java.lang.String getCity();
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    com.google.protobuf.ByteString
        getCityBytes();

    // required string county = 3;
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    boolean hasCounty();
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    java.lang.String getCounty();
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    com.google.protobuf.ByteString
        getCountyBytes();

    // repeated .gboss.GpsRoadInfo roads = 4;
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo> 
        getRoadsList();
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo getRoads(int index);
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    int getRoadsCount();
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder> 
        getRoadsOrBuilderList();
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder getRoadsOrBuilder(
        int index);

    // repeated .gboss.GpsPointInfo points = 5;
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo> 
        getPointsList();
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo getPoints(int index);
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    int getPointsCount();
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder> 
        getPointsOrBuilderList();
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder getPointsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gboss.GpsReferPosition}
   *
   * <pre>
   *
   * GPS参考位置信息
   * </pre>
   */
  public static final class GpsReferPosition extends
      com.google.protobuf.GeneratedMessage
      implements GpsReferPositionOrBuilder {
    // Use GpsReferPosition.newBuilder() to construct.
    private GpsReferPosition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsReferPosition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsReferPosition defaultInstance;
    public static GpsReferPosition getDefaultInstance() {
      return defaultInstance;
    }

    public GpsReferPosition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsReferPosition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              province_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              city_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              county_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                roads_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              roads_.add(input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                points_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              points_.add(input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          roads_ = java.util.Collections.unmodifiableList(roads_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsReferPosition> PARSER =
        new com.google.protobuf.AbstractParser<GpsReferPosition>() {
      public GpsReferPosition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsReferPosition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsReferPosition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string province = 1;
    public static final int PROVINCE_FIELD_NUMBER = 1;
    private java.lang.Object province_;
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    public boolean hasProvince() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    public java.lang.String getProvince() {
      java.lang.Object ref = province_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          province_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string province = 1;</code>
     *
     * <pre>
     *省
     * </pre>
     */
    public com.google.protobuf.ByteString
        getProvinceBytes() {
      java.lang.Object ref = province_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        province_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string city = 2;
    public static final int CITY_FIELD_NUMBER = 2;
    private java.lang.Object city_;
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    public boolean hasCity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    public java.lang.String getCity() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          city_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string city = 2;</code>
     *
     * <pre>
     *市
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCityBytes() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        city_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string county = 3;
    public static final int COUNTY_FIELD_NUMBER = 3;
    private java.lang.Object county_;
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    public boolean hasCounty() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    public java.lang.String getCounty() {
      java.lang.Object ref = county_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          county_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string county = 3;</code>
     *
     * <pre>
     *县
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCountyBytes() {
      java.lang.Object ref = county_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        county_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .gboss.GpsRoadInfo roads = 4;
    public static final int ROADS_FIELD_NUMBER = 4;
    private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo> roads_;
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo> getRoadsList() {
      return roads_;
    }
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder> 
        getRoadsOrBuilderList() {
      return roads_;
    }
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public int getRoadsCount() {
      return roads_.size();
    }
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo getRoads(int index) {
      return roads_.get(index);
    }
    /**
     * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
     *
     * <pre>
     *所在道路信息（可能在多条路交叉点）
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder getRoadsOrBuilder(
        int index) {
      return roads_.get(index);
    }

    // repeated .gboss.GpsPointInfo points = 5;
    public static final int POINTS_FIELD_NUMBER = 5;
    private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo> points_;
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo> getPointsList() {
      return points_;
    }
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <code>repeated .gboss.GpsPointInfo points = 5;</code>
     *
     * <pre>
     *周边参考点信息（可能有多个）
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    private void initFields() {
      province_ = "";
      city_ = "";
      county_ = "";
      roads_ = java.util.Collections.emptyList();
      points_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasProvince()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCounty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRoadsCount(); i++) {
        if (!getRoads(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPointsCount(); i++) {
        if (!getPoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getProvinceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getCityBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getCountyBytes());
      }
      for (int i = 0; i < roads_.size(); i++) {
        output.writeMessage(4, roads_.get(i));
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(5, points_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getProvinceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getCityBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCountyBytes());
      }
      for (int i = 0; i < roads_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, roads_.get(i));
      }
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, points_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsReferPosition}
     *
     * <pre>
     *
     * GPS参考位置信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoadsFieldBuilder();
          getPointsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        province_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        city_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        county_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (roadsBuilder_ == null) {
          roads_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          roadsBuilder_.clear();
        }
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsReferPosition_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.province_ = province_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.city_ = city_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.county_ = county_;
        if (roadsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            roads_ = java.util.Collections.unmodifiableList(roads_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.roads_ = roads_;
        } else {
          result.roads_ = roadsBuilder_.build();
        }
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) return this;
        if (other.hasProvince()) {
          bitField0_ |= 0x00000001;
          province_ = other.province_;
          onChanged();
        }
        if (other.hasCity()) {
          bitField0_ |= 0x00000002;
          city_ = other.city_;
          onChanged();
        }
        if (other.hasCounty()) {
          bitField0_ |= 0x00000004;
          county_ = other.county_;
          onChanged();
        }
        if (roadsBuilder_ == null) {
          if (!other.roads_.isEmpty()) {
            if (roads_.isEmpty()) {
              roads_ = other.roads_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRoadsIsMutable();
              roads_.addAll(other.roads_);
            }
            onChanged();
          }
        } else {
          if (!other.roads_.isEmpty()) {
            if (roadsBuilder_.isEmpty()) {
              roadsBuilder_.dispose();
              roadsBuilder_ = null;
              roads_ = other.roads_;
              bitField0_ = (bitField0_ & ~0x00000008);
              roadsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoadsFieldBuilder() : null;
            } else {
              roadsBuilder_.addAllMessages(other.roads_);
            }
          }
        }
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000010);
              pointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProvince()) {
          
          return false;
        }
        if (!hasCity()) {
          
          return false;
        }
        if (!hasCounty()) {
          
          return false;
        }
        for (int i = 0; i < getRoadsCount(); i++) {
          if (!getRoads(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPointsCount(); i++) {
          if (!getPoints(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string province = 1;
      private java.lang.Object province_ = "";
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public boolean hasProvince() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public java.lang.String getProvince() {
        java.lang.Object ref = province_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          province_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public com.google.protobuf.ByteString
          getProvinceBytes() {
        java.lang.Object ref = province_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          province_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public Builder setProvince(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        province_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public Builder clearProvince() {
        bitField0_ = (bitField0_ & ~0x00000001);
        province_ = getDefaultInstance().getProvince();
        onChanged();
        return this;
      }
      /**
       * <code>required string province = 1;</code>
       *
       * <pre>
       *省
       * </pre>
       */
      public Builder setProvinceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        province_ = value;
        onChanged();
        return this;
      }

      // required string city = 2;
      private java.lang.Object city_ = "";
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public boolean hasCity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public java.lang.String getCity() {
        java.lang.Object ref = city_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          city_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCityBytes() {
        java.lang.Object ref = city_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          city_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public Builder setCity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        city_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public Builder clearCity() {
        bitField0_ = (bitField0_ & ~0x00000002);
        city_ = getDefaultInstance().getCity();
        onChanged();
        return this;
      }
      /**
       * <code>required string city = 2;</code>
       *
       * <pre>
       *市
       * </pre>
       */
      public Builder setCityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        city_ = value;
        onChanged();
        return this;
      }

      // required string county = 3;
      private java.lang.Object county_ = "";
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public boolean hasCounty() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public java.lang.String getCounty() {
        java.lang.Object ref = county_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          county_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCountyBytes() {
        java.lang.Object ref = county_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          county_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public Builder setCounty(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        county_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public Builder clearCounty() {
        bitField0_ = (bitField0_ & ~0x00000004);
        county_ = getDefaultInstance().getCounty();
        onChanged();
        return this;
      }
      /**
       * <code>required string county = 3;</code>
       *
       * <pre>
       *县
       * </pre>
       */
      public Builder setCountyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        county_ = value;
        onChanged();
        return this;
      }

      // repeated .gboss.GpsRoadInfo roads = 4;
      private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo> roads_ =
        java.util.Collections.emptyList();
      private void ensureRoadsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          roads_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo>(roads_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder> roadsBuilder_;

      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo> getRoadsList() {
        if (roadsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roads_);
        } else {
          return roadsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public int getRoadsCount() {
        if (roadsBuilder_ == null) {
          return roads_.size();
        } else {
          return roadsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo getRoads(int index) {
        if (roadsBuilder_ == null) {
          return roads_.get(index);
        } else {
          return roadsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder setRoads(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo value) {
        if (roadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoadsIsMutable();
          roads_.set(index, value);
          onChanged();
        } else {
          roadsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder setRoads(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder builderForValue) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          roads_.set(index, builderForValue.build());
          onChanged();
        } else {
          roadsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addRoads(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo value) {
        if (roadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoadsIsMutable();
          roads_.add(value);
          onChanged();
        } else {
          roadsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addRoads(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo value) {
        if (roadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoadsIsMutable();
          roads_.add(index, value);
          onChanged();
        } else {
          roadsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addRoads(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder builderForValue) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          roads_.add(builderForValue.build());
          onChanged();
        } else {
          roadsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addRoads(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder builderForValue) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          roads_.add(index, builderForValue.build());
          onChanged();
        } else {
          roadsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder addAllRoads(
          java.lang.Iterable<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo> values) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          super.addAll(values, roads_);
          onChanged();
        } else {
          roadsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder clearRoads() {
        if (roadsBuilder_ == null) {
          roads_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          roadsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public Builder removeRoads(int index) {
        if (roadsBuilder_ == null) {
          ensureRoadsIsMutable();
          roads_.remove(index);
          onChanged();
        } else {
          roadsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder getRoadsBuilder(
          int index) {
        return getRoadsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder getRoadsOrBuilder(
          int index) {
        if (roadsBuilder_ == null) {
          return roads_.get(index);  } else {
          return roadsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder> 
           getRoadsOrBuilderList() {
        if (roadsBuilder_ != null) {
          return roadsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roads_);
        }
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder addRoadsBuilder() {
        return getRoadsFieldBuilder().addBuilder(
            cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder addRoadsBuilder(
          int index) {
        return getRoadsFieldBuilder().addBuilder(
            index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.GpsRoadInfo roads = 4;</code>
       *
       * <pre>
       *所在道路信息（可能在多条路交叉点）
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder> 
           getRoadsBuilderList() {
        return getRoadsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder> 
          getRoadsFieldBuilder() {
        if (roadsBuilder_ == null) {
          roadsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsRoadInfoOrBuilder>(
                  roads_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          roads_ = null;
        }
        return roadsBuilder_;
      }

      // repeated .gboss.GpsPointInfo points = 5;
      private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          points_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo>(points_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder> pointsBuilder_;

      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder setPoints(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder setPoints(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addPoints(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addPoints(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addPoints(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addPoints(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          super.addAll(values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder> 
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.GpsPointInfo points = 5;</code>
       *
       * <pre>
       *周边参考点信息（可能有多个）
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder> 
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder> 
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsPointInfoOrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsReferPosition)
    }

    static {
      defaultInstance = new GpsReferPosition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsReferPosition)
  }

  public interface GpsInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required .gboss.GpsBaseInfo baseInfo = 2;
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    boolean hasBaseInfo();
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getBaseInfo();
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder();

    // optional .gboss.GpsReferPosition referPosition = 3;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    boolean hasReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder();

    // optional bytes content = 4;
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    com.google.protobuf.ByteString getContent();

    // optional int32 history = 5;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    boolean hasHistory();
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    int getHistory();
  }
  /**
   * Protobuf type {@code gboss.GpsInfo}
   *
   * <pre>
   *
   * GPS完整信息
   * </pre>
   */
  public static final class GpsInfo extends
      com.google.protobuf.GeneratedMessage
      implements GpsInfoOrBuilder {
    // Use GpsInfo.newBuilder() to construct.
    private GpsInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsInfo defaultInstance;
    public static GpsInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = baseInfo_.toBuilder();
              }
              baseInfo_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseInfo_);
                baseInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = referPosition_.toBuilder();
              }
              referPosition_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referPosition_);
                referPosition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              content_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              history_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsInfo>() {
      public GpsInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .gboss.GpsBaseInfo baseInfo = 2;
    public static final int BASEINFO_FIELD_NUMBER = 2;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo baseInfo_;
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public boolean hasBaseInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
      return baseInfo_;
    }
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
      return baseInfo_;
    }

    // optional .gboss.GpsReferPosition referPosition = 3;
    public static final int REFERPOSITION_FIELD_NUMBER = 3;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition referPosition_;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public boolean hasReferPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
      return referPosition_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
      return referPosition_;
    }

    // optional bytes content = 4;
    public static final int CONTENT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    // optional int32 history = 5;
    public static final int HISTORY_FIELD_NUMBER = 5;
    private int history_;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public boolean hasHistory() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public int getHistory() {
      return history_;
    }

    private void initFields() {
      callLetter_ = "";
      baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      referPosition_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      content_ = com.google.protobuf.ByteString.EMPTY;
      history_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBaseInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBaseInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasReferPosition()) {
        if (!getReferPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, referPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, content_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, history_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, referPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, content_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, history_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.GpsInfo}
     *
     * <pre>
     *
     * GPS完整信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBaseInfoFieldBuilder();
          getReferPositionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        history_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_GpsInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (baseInfoBuilder_ == null) {
          result.baseInfo_ = baseInfo_;
        } else {
          result.baseInfo_ = baseInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (referPositionBuilder_ == null) {
          result.referPosition_ = referPosition_;
        } else {
          result.referPosition_ = referPositionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.history_ = history_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasBaseInfo()) {
          mergeBaseInfo(other.getBaseInfo());
        }
        if (other.hasReferPosition()) {
          mergeReferPosition(other.getReferPosition());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasHistory()) {
          setHistory(other.getHistory());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasBaseInfo()) {
          
          return false;
        }
        if (!getBaseInfo().isInitialized()) {
          
          return false;
        }
        if (hasReferPosition()) {
          if (!getReferPosition().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required .gboss.GpsBaseInfo baseInfo = 2;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> baseInfoBuilder_;
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public boolean hasBaseInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
        if (baseInfoBuilder_ == null) {
          return baseInfo_;
        } else {
          return baseInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseInfo_ = value;
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder mergeBaseInfo(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              baseInfo_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            baseInfo_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.newBuilder(baseInfo_).mergeFrom(value).buildPartial();
          } else {
            baseInfo_ = value;
          }
          onChanged();
        } else {
          baseInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder clearBaseInfo() {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder getBaseInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
        if (baseInfoBuilder_ != null) {
          return baseInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseInfo_;
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getBaseInfoFieldBuilder() {
        if (baseInfoBuilder_ == null) {
          baseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  baseInfo_,
                  getParentForChildren(),
                  isClean());
          baseInfo_ = null;
        }
        return baseInfoBuilder_;
      }

      // optional .gboss.GpsReferPosition referPosition = 3;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition referPosition_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> referPositionBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public boolean hasReferPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
        if (referPositionBuilder_ == null) {
          return referPosition_;
        } else {
          return referPositionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referPosition_ = value;
          onChanged();
        } else {
          referPositionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (referPositionBuilder_ == null) {
          referPosition_ = builderForValue.build();
          onChanged();
        } else {
          referPositionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder mergeReferPosition(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              referPosition_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            referPosition_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.newBuilder(referPosition_).mergeFrom(value).buildPartial();
          } else {
            referPosition_ = value;
          }
          onChanged();
        } else {
          referPositionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder clearReferPosition() {
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder getReferPositionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getReferPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
        if (referPositionBuilder_ != null) {
          return referPositionBuilder_.getMessageOrBuilder();
        } else {
          return referPosition_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getReferPositionFieldBuilder() {
        if (referPositionBuilder_ == null) {
          referPositionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  referPosition_,
                  getParentForChildren(),
                  isClean());
          referPosition_ = null;
        }
        return referPositionBuilder_;
      }

      // optional bytes content = 4;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // optional int32 history = 5;
      private int history_ ;
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public boolean hasHistory() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public int getHistory() {
        return history_;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder setHistory(int value) {
        bitField0_ |= 0x00000010;
        history_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder clearHistory() {
        bitField0_ = (bitField0_ & ~0x00000010);
        history_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.GpsInfo)
    }

    static {
      defaultInstance = new GpsInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.GpsInfo)
  }

  public interface OperateDataBaseInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 price = 1;
    /**
     * <code>required int32 price = 1;</code>
     *
     * <pre>
     *价格（单位：分）
     * </pre>
     */
    boolean hasPrice();
    /**
     * <code>required int32 price = 1;</code>
     *
     * <pre>
     *价格（单位：分）
     * </pre>
     */
    int getPrice();

    // required int32 countTime = 2;
    /**
     * <code>required int32 countTime = 2;</code>
     *
     * <pre>
     *计时(单位：分钟）
     * </pre>
     */
    boolean hasCountTime();
    /**
     * <code>required int32 countTime = 2;</code>
     *
     * <pre>
     *计时(单位：分钟）
     * </pre>
     */
    int getCountTime();

    // required int32 operateMoney = 3;
    /**
     * <code>required int32 operateMoney = 3;</code>
     *
     * <pre>
     *收费(单位：分）
     * </pre>
     */
    boolean hasOperateMoney();
    /**
     * <code>required int32 operateMoney = 3;</code>
     *
     * <pre>
     *收费(单位：分）
     * </pre>
     */
    int getOperateMoney();

    // required int32 operateMile = 4;
    /**
     * <code>required int32 operateMile = 4;</code>
     *
     * <pre>
     *运营里程（单位：米）
     * </pre>
     */
    boolean hasOperateMile();
    /**
     * <code>required int32 operateMile = 4;</code>
     *
     * <pre>
     *运营里程（单位：米）
     * </pre>
     */
    int getOperateMile();

    // optional int32 nullMile = 5;
    /**
     * <code>optional int32 nullMile = 5;</code>
     *
     * <pre>
     *空载里程（单位：米）
     * </pre>
     */
    boolean hasNullMile();
    /**
     * <code>optional int32 nullMile = 5;</code>
     *
     * <pre>
     *空载里程（单位：米）
     * </pre>
     */
    int getNullMile();

    // optional int32 overSpeedMile = 6;
    /**
     * <code>optional int32 overSpeedMile = 6;</code>
     *
     * <pre>
     *超速里程（单位：米）
     * </pre>
     */
    boolean hasOverSpeedMile();
    /**
     * <code>optional int32 overSpeedMile = 6;</code>
     *
     * <pre>
     *超速里程（单位：米）
     * </pre>
     */
    int getOverSpeedMile();

    // optional int32 overSpeedCount = 7;
    /**
     * <code>optional int32 overSpeedCount = 7;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    boolean hasOverSpeedCount();
    /**
     * <code>optional int32 overSpeedCount = 7;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    int getOverSpeedCount();

    // optional int32 powerOffCount = 8;
    /**
     * <code>optional int32 powerOffCount = 8;</code>
     *
     * <pre>
     *断电次数
     * </pre>
     */
    boolean hasPowerOffCount();
    /**
     * <code>optional int32 powerOffCount = 8;</code>
     *
     * <pre>
     *断电次数
     * </pre>
     */
    int getPowerOffCount();

    // optional int32 powerOffTime = 9;
    /**
     * <code>optional int32 powerOffTime = 9;</code>
     *
     * <pre>
     *断电时间（单位:秒）
     * </pre>
     */
    boolean hasPowerOffTime();
    /**
     * <code>optional int32 powerOffTime = 9;</code>
     *
     * <pre>
     *断电时间（单位:秒）
     * </pre>
     */
    int getPowerOffTime();

    // optional int32 sequenceNo = 10;
    /**
     * <code>optional int32 sequenceNo = 10;</code>
     *
     * <pre>
     *流水号
     * </pre>
     */
    boolean hasSequenceNo();
    /**
     * <code>optional int32 sequenceNo = 10;</code>
     *
     * <pre>
     *流水号
     * </pre>
     */
    int getSequenceNo();

    // repeated .gboss.MapEntry appendParams = 11;
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> 
        getAppendParamsList();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getAppendParams(int index);
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    int getAppendParamsCount();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
        getAppendParamsOrBuilderList();
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
        int index);

    // optional int32 perprice = 12;
    /**
     * <code>optional int32 perprice = 12;</code>
     *
     * <pre>
     *营运结束单价
     * </pre>
     */
    boolean hasPerprice();
    /**
     * <code>optional int32 perprice = 12;</code>
     *
     * <pre>
     *营运结束单价
     * </pre>
     */
    int getPerprice();

    // optional string licenseno = 13;
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    boolean hasLicenseno();
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    java.lang.String getLicenseno();
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    com.google.protobuf.ByteString
        getLicensenoBytes();
  }
  /**
   * Protobuf type {@code gboss.OperateDataBaseInfo}
   *
   * <pre>
   *************************************************************************************
   * 运营数据基本信息
   ************************************************************************************
   * </pre>
   */
  public static final class OperateDataBaseInfo extends
      com.google.protobuf.GeneratedMessage
      implements OperateDataBaseInfoOrBuilder {
    // Use OperateDataBaseInfo.newBuilder() to construct.
    private OperateDataBaseInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OperateDataBaseInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OperateDataBaseInfo defaultInstance;
    public static OperateDataBaseInfo getDefaultInstance() {
      return defaultInstance;
    }

    public OperateDataBaseInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OperateDataBaseInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              price_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              countTime_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              operateMoney_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              operateMile_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              nullMile_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              overSpeedMile_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              overSpeedCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              powerOffCount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              powerOffTime_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              sequenceNo_ = input.readInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                appendParams_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry>();
                mutable_bitField0_ |= 0x00000400;
              }
              appendParams_.add(input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.PARSER, extensionRegistry));
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              perprice_ = input.readInt32();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000800;
              licenseno_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          appendParams_ = java.util.Collections.unmodifiableList(appendParams_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<OperateDataBaseInfo> PARSER =
        new com.google.protobuf.AbstractParser<OperateDataBaseInfo>() {
      public OperateDataBaseInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OperateDataBaseInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OperateDataBaseInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 price = 1;
    public static final int PRICE_FIELD_NUMBER = 1;
    private int price_;
    /**
     * <code>required int32 price = 1;</code>
     *
     * <pre>
     *价格（单位：分）
     * </pre>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 price = 1;</code>
     *
     * <pre>
     *价格（单位：分）
     * </pre>
     */
    public int getPrice() {
      return price_;
    }

    // required int32 countTime = 2;
    public static final int COUNTTIME_FIELD_NUMBER = 2;
    private int countTime_;
    /**
     * <code>required int32 countTime = 2;</code>
     *
     * <pre>
     *计时(单位：分钟）
     * </pre>
     */
    public boolean hasCountTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 countTime = 2;</code>
     *
     * <pre>
     *计时(单位：分钟）
     * </pre>
     */
    public int getCountTime() {
      return countTime_;
    }

    // required int32 operateMoney = 3;
    public static final int OPERATEMONEY_FIELD_NUMBER = 3;
    private int operateMoney_;
    /**
     * <code>required int32 operateMoney = 3;</code>
     *
     * <pre>
     *收费(单位：分）
     * </pre>
     */
    public boolean hasOperateMoney() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 operateMoney = 3;</code>
     *
     * <pre>
     *收费(单位：分）
     * </pre>
     */
    public int getOperateMoney() {
      return operateMoney_;
    }

    // required int32 operateMile = 4;
    public static final int OPERATEMILE_FIELD_NUMBER = 4;
    private int operateMile_;
    /**
     * <code>required int32 operateMile = 4;</code>
     *
     * <pre>
     *运营里程（单位：米）
     * </pre>
     */
    public boolean hasOperateMile() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 operateMile = 4;</code>
     *
     * <pre>
     *运营里程（单位：米）
     * </pre>
     */
    public int getOperateMile() {
      return operateMile_;
    }

    // optional int32 nullMile = 5;
    public static final int NULLMILE_FIELD_NUMBER = 5;
    private int nullMile_;
    /**
     * <code>optional int32 nullMile = 5;</code>
     *
     * <pre>
     *空载里程（单位：米）
     * </pre>
     */
    public boolean hasNullMile() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 nullMile = 5;</code>
     *
     * <pre>
     *空载里程（单位：米）
     * </pre>
     */
    public int getNullMile() {
      return nullMile_;
    }

    // optional int32 overSpeedMile = 6;
    public static final int OVERSPEEDMILE_FIELD_NUMBER = 6;
    private int overSpeedMile_;
    /**
     * <code>optional int32 overSpeedMile = 6;</code>
     *
     * <pre>
     *超速里程（单位：米）
     * </pre>
     */
    public boolean hasOverSpeedMile() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 overSpeedMile = 6;</code>
     *
     * <pre>
     *超速里程（单位：米）
     * </pre>
     */
    public int getOverSpeedMile() {
      return overSpeedMile_;
    }

    // optional int32 overSpeedCount = 7;
    public static final int OVERSPEEDCOUNT_FIELD_NUMBER = 7;
    private int overSpeedCount_;
    /**
     * <code>optional int32 overSpeedCount = 7;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    public boolean hasOverSpeedCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 overSpeedCount = 7;</code>
     *
     * <pre>
     *超速次数
     * </pre>
     */
    public int getOverSpeedCount() {
      return overSpeedCount_;
    }

    // optional int32 powerOffCount = 8;
    public static final int POWEROFFCOUNT_FIELD_NUMBER = 8;
    private int powerOffCount_;
    /**
     * <code>optional int32 powerOffCount = 8;</code>
     *
     * <pre>
     *断电次数
     * </pre>
     */
    public boolean hasPowerOffCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 powerOffCount = 8;</code>
     *
     * <pre>
     *断电次数
     * </pre>
     */
    public int getPowerOffCount() {
      return powerOffCount_;
    }

    // optional int32 powerOffTime = 9;
    public static final int POWEROFFTIME_FIELD_NUMBER = 9;
    private int powerOffTime_;
    /**
     * <code>optional int32 powerOffTime = 9;</code>
     *
     * <pre>
     *断电时间（单位:秒）
     * </pre>
     */
    public boolean hasPowerOffTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 powerOffTime = 9;</code>
     *
     * <pre>
     *断电时间（单位:秒）
     * </pre>
     */
    public int getPowerOffTime() {
      return powerOffTime_;
    }

    // optional int32 sequenceNo = 10;
    public static final int SEQUENCENO_FIELD_NUMBER = 10;
    private int sequenceNo_;
    /**
     * <code>optional int32 sequenceNo = 10;</code>
     *
     * <pre>
     *流水号
     * </pre>
     */
    public boolean hasSequenceNo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 sequenceNo = 10;</code>
     *
     * <pre>
     *流水号
     * </pre>
     */
    public int getSequenceNo() {
      return sequenceNo_;
    }

    // repeated .gboss.MapEntry appendParams = 11;
    public static final int APPENDPARAMS_FIELD_NUMBER = 11;
    private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> appendParams_;
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> getAppendParamsList() {
      return appendParams_;
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
        getAppendParamsOrBuilderList() {
      return appendParams_;
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public int getAppendParamsCount() {
      return appendParams_.size();
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getAppendParams(int index) {
      return appendParams_.get(index);
    }
    /**
     * <code>repeated .gboss.MapEntry appendParams = 11;</code>
     *
     * <pre>
     *附加项(多个)
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
        int index) {
      return appendParams_.get(index);
    }

    // optional int32 perprice = 12;
    public static final int PERPRICE_FIELD_NUMBER = 12;
    private int perprice_;
    /**
     * <code>optional int32 perprice = 12;</code>
     *
     * <pre>
     *营运结束单价
     * </pre>
     */
    public boolean hasPerprice() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 perprice = 12;</code>
     *
     * <pre>
     *营运结束单价
     * </pre>
     */
    public int getPerprice() {
      return perprice_;
    }

    // optional string licenseno = 13;
    public static final int LICENSENO_FIELD_NUMBER = 13;
    private java.lang.Object licenseno_;
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    public boolean hasLicenseno() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    public java.lang.String getLicenseno() {
      java.lang.Object ref = licenseno_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          licenseno_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string licenseno = 13;</code>
     *
     * <pre>
     *许可证号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLicensenoBytes() {
      java.lang.Object ref = licenseno_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        licenseno_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      price_ = 0;
      countTime_ = 0;
      operateMoney_ = 0;
      operateMile_ = 0;
      nullMile_ = 0;
      overSpeedMile_ = 0;
      overSpeedCount_ = 0;
      powerOffCount_ = 0;
      powerOffTime_ = 0;
      sequenceNo_ = 0;
      appendParams_ = java.util.Collections.emptyList();
      perprice_ = 0;
      licenseno_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCountTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperateMoney()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperateMile()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAppendParamsCount(); i++) {
        if (!getAppendParams(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, price_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, countTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, operateMoney_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, operateMile_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, nullMile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, overSpeedMile_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, overSpeedCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, powerOffCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, powerOffTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, sequenceNo_);
      }
      for (int i = 0; i < appendParams_.size(); i++) {
        output.writeMessage(11, appendParams_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, perprice_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(13, getLicensenoBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, price_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, countTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, operateMoney_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, operateMile_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, nullMile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, overSpeedMile_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, overSpeedCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, powerOffCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, powerOffTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, sequenceNo_);
      }
      for (int i = 0; i < appendParams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, appendParams_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, perprice_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getLicensenoBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.OperateDataBaseInfo}
     *
     * <pre>
     *************************************************************************************
     * 运营数据基本信息
     ************************************************************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAppendParamsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        price_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        countTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        operateMoney_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        operateMile_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        nullMile_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        overSpeedMile_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        overSpeedCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        powerOffCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        powerOffTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        sequenceNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (appendParamsBuilder_ == null) {
          appendParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          appendParamsBuilder_.clear();
        }
        perprice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        licenseno_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateDataBaseInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.countTime_ = countTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.operateMoney_ = operateMoney_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.operateMile_ = operateMile_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nullMile_ = nullMile_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.overSpeedMile_ = overSpeedMile_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.overSpeedCount_ = overSpeedCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.powerOffCount_ = powerOffCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.powerOffTime_ = powerOffTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.sequenceNo_ = sequenceNo_;
        if (appendParamsBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            appendParams_ = java.util.Collections.unmodifiableList(appendParams_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.appendParams_ = appendParams_;
        } else {
          result.appendParams_ = appendParamsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.perprice_ = perprice_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.licenseno_ = licenseno_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance()) return this;
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasCountTime()) {
          setCountTime(other.getCountTime());
        }
        if (other.hasOperateMoney()) {
          setOperateMoney(other.getOperateMoney());
        }
        if (other.hasOperateMile()) {
          setOperateMile(other.getOperateMile());
        }
        if (other.hasNullMile()) {
          setNullMile(other.getNullMile());
        }
        if (other.hasOverSpeedMile()) {
          setOverSpeedMile(other.getOverSpeedMile());
        }
        if (other.hasOverSpeedCount()) {
          setOverSpeedCount(other.getOverSpeedCount());
        }
        if (other.hasPowerOffCount()) {
          setPowerOffCount(other.getPowerOffCount());
        }
        if (other.hasPowerOffTime()) {
          setPowerOffTime(other.getPowerOffTime());
        }
        if (other.hasSequenceNo()) {
          setSequenceNo(other.getSequenceNo());
        }
        if (appendParamsBuilder_ == null) {
          if (!other.appendParams_.isEmpty()) {
            if (appendParams_.isEmpty()) {
              appendParams_ = other.appendParams_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureAppendParamsIsMutable();
              appendParams_.addAll(other.appendParams_);
            }
            onChanged();
          }
        } else {
          if (!other.appendParams_.isEmpty()) {
            if (appendParamsBuilder_.isEmpty()) {
              appendParamsBuilder_.dispose();
              appendParamsBuilder_ = null;
              appendParams_ = other.appendParams_;
              bitField0_ = (bitField0_ & ~0x00000400);
              appendParamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAppendParamsFieldBuilder() : null;
            } else {
              appendParamsBuilder_.addAllMessages(other.appendParams_);
            }
          }
        }
        if (other.hasPerprice()) {
          setPerprice(other.getPerprice());
        }
        if (other.hasLicenseno()) {
          bitField0_ |= 0x00001000;
          licenseno_ = other.licenseno_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPrice()) {
          
          return false;
        }
        if (!hasCountTime()) {
          
          return false;
        }
        if (!hasOperateMoney()) {
          
          return false;
        }
        if (!hasOperateMile()) {
          
          return false;
        }
        for (int i = 0; i < getAppendParamsCount(); i++) {
          if (!getAppendParams(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 price = 1;
      private int price_ ;
      /**
       * <code>required int32 price = 1;</code>
       *
       * <pre>
       *价格（单位：分）
       * </pre>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 price = 1;</code>
       *
       * <pre>
       *价格（单位：分）
       * </pre>
       */
      public int getPrice() {
        return price_;
      }
      /**
       * <code>required int32 price = 1;</code>
       *
       * <pre>
       *价格（单位：分）
       * </pre>
       */
      public Builder setPrice(int value) {
        bitField0_ |= 0x00000001;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 price = 1;</code>
       *
       * <pre>
       *价格（单位：分）
       * </pre>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        price_ = 0;
        onChanged();
        return this;
      }

      // required int32 countTime = 2;
      private int countTime_ ;
      /**
       * <code>required int32 countTime = 2;</code>
       *
       * <pre>
       *计时(单位：分钟）
       * </pre>
       */
      public boolean hasCountTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 countTime = 2;</code>
       *
       * <pre>
       *计时(单位：分钟）
       * </pre>
       */
      public int getCountTime() {
        return countTime_;
      }
      /**
       * <code>required int32 countTime = 2;</code>
       *
       * <pre>
       *计时(单位：分钟）
       * </pre>
       */
      public Builder setCountTime(int value) {
        bitField0_ |= 0x00000002;
        countTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 countTime = 2;</code>
       *
       * <pre>
       *计时(单位：分钟）
       * </pre>
       */
      public Builder clearCountTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        countTime_ = 0;
        onChanged();
        return this;
      }

      // required int32 operateMoney = 3;
      private int operateMoney_ ;
      /**
       * <code>required int32 operateMoney = 3;</code>
       *
       * <pre>
       *收费(单位：分）
       * </pre>
       */
      public boolean hasOperateMoney() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 operateMoney = 3;</code>
       *
       * <pre>
       *收费(单位：分）
       * </pre>
       */
      public int getOperateMoney() {
        return operateMoney_;
      }
      /**
       * <code>required int32 operateMoney = 3;</code>
       *
       * <pre>
       *收费(单位：分）
       * </pre>
       */
      public Builder setOperateMoney(int value) {
        bitField0_ |= 0x00000004;
        operateMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 operateMoney = 3;</code>
       *
       * <pre>
       *收费(单位：分）
       * </pre>
       */
      public Builder clearOperateMoney() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operateMoney_ = 0;
        onChanged();
        return this;
      }

      // required int32 operateMile = 4;
      private int operateMile_ ;
      /**
       * <code>required int32 operateMile = 4;</code>
       *
       * <pre>
       *运营里程（单位：米）
       * </pre>
       */
      public boolean hasOperateMile() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 operateMile = 4;</code>
       *
       * <pre>
       *运营里程（单位：米）
       * </pre>
       */
      public int getOperateMile() {
        return operateMile_;
      }
      /**
       * <code>required int32 operateMile = 4;</code>
       *
       * <pre>
       *运营里程（单位：米）
       * </pre>
       */
      public Builder setOperateMile(int value) {
        bitField0_ |= 0x00000008;
        operateMile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 operateMile = 4;</code>
       *
       * <pre>
       *运营里程（单位：米）
       * </pre>
       */
      public Builder clearOperateMile() {
        bitField0_ = (bitField0_ & ~0x00000008);
        operateMile_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nullMile = 5;
      private int nullMile_ ;
      /**
       * <code>optional int32 nullMile = 5;</code>
       *
       * <pre>
       *空载里程（单位：米）
       * </pre>
       */
      public boolean hasNullMile() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 nullMile = 5;</code>
       *
       * <pre>
       *空载里程（单位：米）
       * </pre>
       */
      public int getNullMile() {
        return nullMile_;
      }
      /**
       * <code>optional int32 nullMile = 5;</code>
       *
       * <pre>
       *空载里程（单位：米）
       * </pre>
       */
      public Builder setNullMile(int value) {
        bitField0_ |= 0x00000010;
        nullMile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nullMile = 5;</code>
       *
       * <pre>
       *空载里程（单位：米）
       * </pre>
       */
      public Builder clearNullMile() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nullMile_ = 0;
        onChanged();
        return this;
      }

      // optional int32 overSpeedMile = 6;
      private int overSpeedMile_ ;
      /**
       * <code>optional int32 overSpeedMile = 6;</code>
       *
       * <pre>
       *超速里程（单位：米）
       * </pre>
       */
      public boolean hasOverSpeedMile() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 overSpeedMile = 6;</code>
       *
       * <pre>
       *超速里程（单位：米）
       * </pre>
       */
      public int getOverSpeedMile() {
        return overSpeedMile_;
      }
      /**
       * <code>optional int32 overSpeedMile = 6;</code>
       *
       * <pre>
       *超速里程（单位：米）
       * </pre>
       */
      public Builder setOverSpeedMile(int value) {
        bitField0_ |= 0x00000020;
        overSpeedMile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 overSpeedMile = 6;</code>
       *
       * <pre>
       *超速里程（单位：米）
       * </pre>
       */
      public Builder clearOverSpeedMile() {
        bitField0_ = (bitField0_ & ~0x00000020);
        overSpeedMile_ = 0;
        onChanged();
        return this;
      }

      // optional int32 overSpeedCount = 7;
      private int overSpeedCount_ ;
      /**
       * <code>optional int32 overSpeedCount = 7;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public boolean hasOverSpeedCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 overSpeedCount = 7;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public int getOverSpeedCount() {
        return overSpeedCount_;
      }
      /**
       * <code>optional int32 overSpeedCount = 7;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public Builder setOverSpeedCount(int value) {
        bitField0_ |= 0x00000040;
        overSpeedCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 overSpeedCount = 7;</code>
       *
       * <pre>
       *超速次数
       * </pre>
       */
      public Builder clearOverSpeedCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        overSpeedCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 powerOffCount = 8;
      private int powerOffCount_ ;
      /**
       * <code>optional int32 powerOffCount = 8;</code>
       *
       * <pre>
       *断电次数
       * </pre>
       */
      public boolean hasPowerOffCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 powerOffCount = 8;</code>
       *
       * <pre>
       *断电次数
       * </pre>
       */
      public int getPowerOffCount() {
        return powerOffCount_;
      }
      /**
       * <code>optional int32 powerOffCount = 8;</code>
       *
       * <pre>
       *断电次数
       * </pre>
       */
      public Builder setPowerOffCount(int value) {
        bitField0_ |= 0x00000080;
        powerOffCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 powerOffCount = 8;</code>
       *
       * <pre>
       *断电次数
       * </pre>
       */
      public Builder clearPowerOffCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        powerOffCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 powerOffTime = 9;
      private int powerOffTime_ ;
      /**
       * <code>optional int32 powerOffTime = 9;</code>
       *
       * <pre>
       *断电时间（单位:秒）
       * </pre>
       */
      public boolean hasPowerOffTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 powerOffTime = 9;</code>
       *
       * <pre>
       *断电时间（单位:秒）
       * </pre>
       */
      public int getPowerOffTime() {
        return powerOffTime_;
      }
      /**
       * <code>optional int32 powerOffTime = 9;</code>
       *
       * <pre>
       *断电时间（单位:秒）
       * </pre>
       */
      public Builder setPowerOffTime(int value) {
        bitField0_ |= 0x00000100;
        powerOffTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 powerOffTime = 9;</code>
       *
       * <pre>
       *断电时间（单位:秒）
       * </pre>
       */
      public Builder clearPowerOffTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        powerOffTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sequenceNo = 10;
      private int sequenceNo_ ;
      /**
       * <code>optional int32 sequenceNo = 10;</code>
       *
       * <pre>
       *流水号
       * </pre>
       */
      public boolean hasSequenceNo() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 sequenceNo = 10;</code>
       *
       * <pre>
       *流水号
       * </pre>
       */
      public int getSequenceNo() {
        return sequenceNo_;
      }
      /**
       * <code>optional int32 sequenceNo = 10;</code>
       *
       * <pre>
       *流水号
       * </pre>
       */
      public Builder setSequenceNo(int value) {
        bitField0_ |= 0x00000200;
        sequenceNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sequenceNo = 10;</code>
       *
       * <pre>
       *流水号
       * </pre>
       */
      public Builder clearSequenceNo() {
        bitField0_ = (bitField0_ & ~0x00000200);
        sequenceNo_ = 0;
        onChanged();
        return this;
      }

      // repeated .gboss.MapEntry appendParams = 11;
      private java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> appendParams_ =
        java.util.Collections.emptyList();
      private void ensureAppendParamsIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          appendParams_ = new java.util.ArrayList<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry>(appendParams_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> appendParamsBuilder_;

      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> getAppendParamsList() {
        if (appendParamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(appendParams_);
        } else {
          return appendParamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public int getAppendParamsCount() {
        if (appendParamsBuilder_ == null) {
          return appendParams_.size();
        } else {
          return appendParamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry getAppendParams(int index) {
        if (appendParamsBuilder_ == null) {
          return appendParams_.get(index);
        } else {
          return appendParamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder setAppendParams(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.set(index, value);
          onChanged();
        } else {
          appendParamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder setAppendParams(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.set(index, builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.add(value);
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry value) {
        if (appendParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppendParamsIsMutable();
          appendParams_.add(index, value);
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.add(builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAppendParams(
          int index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder builderForValue) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.add(index, builderForValue.build());
          onChanged();
        } else {
          appendParamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder addAllAppendParams(
          java.lang.Iterable<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry> values) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          super.addAll(values, appendParams_);
          onChanged();
        } else {
          appendParamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder clearAppendParams() {
        if (appendParamsBuilder_ == null) {
          appendParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          appendParamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public Builder removeAppendParams(int index) {
        if (appendParamsBuilder_ == null) {
          ensureAppendParamsIsMutable();
          appendParams_.remove(index);
          onChanged();
        } else {
          appendParamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder getAppendParamsBuilder(
          int index) {
        return getAppendParamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder getAppendParamsOrBuilder(
          int index) {
        if (appendParamsBuilder_ == null) {
          return appendParams_.get(index);  } else {
          return appendParamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public java.util.List<? extends cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
           getAppendParamsOrBuilderList() {
        if (appendParamsBuilder_ != null) {
          return appendParamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(appendParams_);
        }
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder addAppendParamsBuilder() {
        return getAppendParamsFieldBuilder().addBuilder(
            cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder addAppendParamsBuilder(
          int index) {
        return getAppendParamsFieldBuilder().addBuilder(
            index, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .gboss.MapEntry appendParams = 11;</code>
       *
       * <pre>
       *附加项(多个)
       * </pre>
       */
      public java.util.List<cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder> 
           getAppendParamsBuilderList() {
        return getAppendParamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder> 
          getAppendParamsFieldBuilder() {
        if (appendParamsBuilder_ == null) {
          appendParamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntry.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.MapEntryOrBuilder>(
                  appendParams_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          appendParams_ = null;
        }
        return appendParamsBuilder_;
      }

      // optional int32 perprice = 12;
      private int perprice_ ;
      /**
       * <code>optional int32 perprice = 12;</code>
       *
       * <pre>
       *营运结束单价
       * </pre>
       */
      public boolean hasPerprice() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 perprice = 12;</code>
       *
       * <pre>
       *营运结束单价
       * </pre>
       */
      public int getPerprice() {
        return perprice_;
      }
      /**
       * <code>optional int32 perprice = 12;</code>
       *
       * <pre>
       *营运结束单价
       * </pre>
       */
      public Builder setPerprice(int value) {
        bitField0_ |= 0x00000800;
        perprice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 perprice = 12;</code>
       *
       * <pre>
       *营运结束单价
       * </pre>
       */
      public Builder clearPerprice() {
        bitField0_ = (bitField0_ & ~0x00000800);
        perprice_ = 0;
        onChanged();
        return this;
      }

      // optional string licenseno = 13;
      private java.lang.Object licenseno_ = "";
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public boolean hasLicenseno() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public java.lang.String getLicenseno() {
        java.lang.Object ref = licenseno_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          licenseno_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLicensenoBytes() {
        java.lang.Object ref = licenseno_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          licenseno_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public Builder setLicenseno(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        licenseno_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public Builder clearLicenseno() {
        bitField0_ = (bitField0_ & ~0x00001000);
        licenseno_ = getDefaultInstance().getLicenseno();
        onChanged();
        return this;
      }
      /**
       * <code>optional string licenseno = 13;</code>
       *
       * <pre>
       *许可证号
       * </pre>
       */
      public Builder setLicensenoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        licenseno_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.OperateDataBaseInfo)
    }

    static {
      defaultInstance = new OperateDataBaseInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.OperateDataBaseInfo)
  }

  public interface OperateDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required .gboss.OperateDataBaseInfo baseInfo = 2;
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    boolean hasBaseInfo();
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo getBaseInfo();
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder getBaseInfoOrBuilder();

    // required .gboss.GpsBaseInfo startGps = 3;
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    boolean hasStartGps();
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getStartGps();
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder();

    // optional .gboss.GpsReferPosition startPoi = 4;
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    boolean hasStartPoi();
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getStartPoi();
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartPoiOrBuilder();

    // required .gboss.GpsBaseInfo stopGps = 5;
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    boolean hasStopGps();
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getStopGps();
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStopGpsOrBuilder();

    // optional .gboss.GpsReferPosition stopPoi = 6;
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    boolean hasStopPoi();
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getStopPoi();
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getStopPoiOrBuilder();

    // optional bytes content = 7;
    /**
     * <code>optional bytes content = 7;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD可见ASCII码
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional bytes content = 7;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD可见ASCII码
     * </pre>
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * Protobuf type {@code gboss.OperateData}
   *
   * <pre>
   *
   * 运营数据完整信息
   * </pre>
   */
  public static final class OperateData extends
      com.google.protobuf.GeneratedMessage
      implements OperateDataOrBuilder {
    // Use OperateData.newBuilder() to construct.
    private OperateData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OperateData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OperateData defaultInstance;
    public static OperateData getDefaultInstance() {
      return defaultInstance;
    }

    public OperateData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OperateData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = baseInfo_.toBuilder();
              }
              baseInfo_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseInfo_);
                baseInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = startGps_.toBuilder();
              }
              startGps_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startGps_);
                startGps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = startPoi_.toBuilder();
              }
              startPoi_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startPoi_);
                startPoi_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = stopGps_.toBuilder();
              }
              stopGps_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stopGps_);
                stopGps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = stopPoi_.toBuilder();
              }
              stopPoi_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stopPoi_);
                stopPoi_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              content_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData.Builder.class);
    }

    public static com.google.protobuf.Parser<OperateData> PARSER =
        new com.google.protobuf.AbstractParser<OperateData>() {
      public OperateData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OperateData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OperateData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .gboss.OperateDataBaseInfo baseInfo = 2;
    public static final int BASEINFO_FIELD_NUMBER = 2;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo baseInfo_;
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    public boolean hasBaseInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo getBaseInfo() {
      return baseInfo_;
    }
    /**
     * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *运营数据基本信息
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder getBaseInfoOrBuilder() {
      return baseInfo_;
    }

    // required .gboss.GpsBaseInfo startGps = 3;
    public static final int STARTGPS_FIELD_NUMBER = 3;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo startGps_;
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    public boolean hasStartGps() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getStartGps() {
      return startGps_;
    }
    /**
     * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
     *
     * <pre>
     *上车gps信息，
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder() {
      return startGps_;
    }

    // optional .gboss.GpsReferPosition startPoi = 4;
    public static final int STARTPOI_FIELD_NUMBER = 4;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition startPoi_;
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    public boolean hasStartPoi() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getStartPoi() {
      return startPoi_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
     *
     * <pre>
     *上车参考位置，
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartPoiOrBuilder() {
      return startPoi_;
    }

    // required .gboss.GpsBaseInfo stopGps = 5;
    public static final int STOPGPS_FIELD_NUMBER = 5;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo stopGps_;
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    public boolean hasStopGps() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getStopGps() {
      return stopGps_;
    }
    /**
     * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
     *
     * <pre>
     *下车gps信息，
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStopGpsOrBuilder() {
      return stopGps_;
    }

    // optional .gboss.GpsReferPosition stopPoi = 6;
    public static final int STOPPOI_FIELD_NUMBER = 6;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition stopPoi_;
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    public boolean hasStopPoi() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getStopPoi() {
      return stopPoi_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
     *
     * <pre>
     *下车参考位置，
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getStopPoiOrBuilder() {
      return stopPoi_;
    }

    // optional bytes content = 7;
    public static final int CONTENT_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>optional bytes content = 7;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD可见ASCII码
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes content = 7;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD可见ASCII码
     * </pre>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    private void initFields() {
      callLetter_ = "";
      baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
      startGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      startPoi_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      stopGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      stopPoi_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      content_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBaseInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartGps()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStopGps()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBaseInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStartGps().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasStartPoi()) {
        if (!getStartPoi().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getStopGps().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasStopPoi()) {
        if (!getStopPoi().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, startGps_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, startPoi_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, stopGps_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, stopPoi_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, content_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, startGps_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, startPoi_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, stopGps_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, stopPoi_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, content_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.OperateData}
     *
     * <pre>
     *
     * 运营数据完整信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBaseInfoFieldBuilder();
          getStartGpsFieldBuilder();
          getStartPoiFieldBuilder();
          getStopGpsFieldBuilder();
          getStopPoiFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (startGpsBuilder_ == null) {
          startGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          startGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (startPoiBuilder_ == null) {
          startPoi_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          startPoiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (stopGpsBuilder_ == null) {
          stopGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          stopGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (stopPoiBuilder_ == null) {
          stopPoi_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          stopPoiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_OperateData_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (baseInfoBuilder_ == null) {
          result.baseInfo_ = baseInfo_;
        } else {
          result.baseInfo_ = baseInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (startGpsBuilder_ == null) {
          result.startGps_ = startGps_;
        } else {
          result.startGps_ = startGpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (startPoiBuilder_ == null) {
          result.startPoi_ = startPoi_;
        } else {
          result.startPoi_ = startPoiBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (stopGpsBuilder_ == null) {
          result.stopGps_ = stopGps_;
        } else {
          result.stopGps_ = stopGpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (stopPoiBuilder_ == null) {
          result.stopPoi_ = stopPoi_;
        } else {
          result.stopPoi_ = stopPoiBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.content_ = content_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasBaseInfo()) {
          mergeBaseInfo(other.getBaseInfo());
        }
        if (other.hasStartGps()) {
          mergeStartGps(other.getStartGps());
        }
        if (other.hasStartPoi()) {
          mergeStartPoi(other.getStartPoi());
        }
        if (other.hasStopGps()) {
          mergeStopGps(other.getStopGps());
        }
        if (other.hasStopPoi()) {
          mergeStopPoi(other.getStopPoi());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasBaseInfo()) {
          
          return false;
        }
        if (!hasStartGps()) {
          
          return false;
        }
        if (!hasStopGps()) {
          
          return false;
        }
        if (!getBaseInfo().isInitialized()) {
          
          return false;
        }
        if (!getStartGps().isInitialized()) {
          
          return false;
        }
        if (hasStartPoi()) {
          if (!getStartPoi().isInitialized()) {
            
            return false;
          }
        }
        if (!getStopGps().isInitialized()) {
          
          return false;
        }
        if (hasStopPoi()) {
          if (!getStopPoi().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required .gboss.OperateDataBaseInfo baseInfo = 2;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder> baseInfoBuilder_;
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public boolean hasBaseInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo getBaseInfo() {
        if (baseInfoBuilder_ == null) {
          return baseInfo_;
        } else {
          return baseInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public Builder setBaseInfo(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseInfo_ = value;
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public Builder setBaseInfo(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.Builder builderForValue) {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public Builder mergeBaseInfo(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              baseInfo_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance()) {
            baseInfo_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.newBuilder(baseInfo_).mergeFrom(value).buildPartial();
          } else {
            baseInfo_ = value;
          }
          onChanged();
        } else {
          baseInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public Builder clearBaseInfo() {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.Builder getBaseInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder getBaseInfoOrBuilder() {
        if (baseInfoBuilder_ != null) {
          return baseInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseInfo_;
        }
      }
      /**
       * <code>required .gboss.OperateDataBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *运营数据基本信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder> 
          getBaseInfoFieldBuilder() {
        if (baseInfoBuilder_ == null) {
          baseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.OperateDataBaseInfoOrBuilder>(
                  baseInfo_,
                  getParentForChildren(),
                  isClean());
          baseInfo_ = null;
        }
        return baseInfoBuilder_;
      }

      // required .gboss.GpsBaseInfo startGps = 3;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo startGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> startGpsBuilder_;
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public boolean hasStartGps() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getStartGps() {
        if (startGpsBuilder_ == null) {
          return startGps_;
        } else {
          return startGpsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public Builder setStartGps(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (startGpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startGps_ = value;
          onChanged();
        } else {
          startGpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public Builder setStartGps(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (startGpsBuilder_ == null) {
          startGps_ = builderForValue.build();
          onChanged();
        } else {
          startGpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public Builder mergeStartGps(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (startGpsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              startGps_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            startGps_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.newBuilder(startGps_).mergeFrom(value).buildPartial();
          } else {
            startGps_ = value;
          }
          onChanged();
        } else {
          startGpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public Builder clearStartGps() {
        if (startGpsBuilder_ == null) {
          startGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          startGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder getStartGpsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStartGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder() {
        if (startGpsBuilder_ != null) {
          return startGpsBuilder_.getMessageOrBuilder();
        } else {
          return startGps_;
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo startGps = 3;</code>
       *
       * <pre>
       *上车gps信息，
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getStartGpsFieldBuilder() {
        if (startGpsBuilder_ == null) {
          startGpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  startGps_,
                  getParentForChildren(),
                  isClean());
          startGps_ = null;
        }
        return startGpsBuilder_;
      }

      // optional .gboss.GpsReferPosition startPoi = 4;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition startPoi_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> startPoiBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public boolean hasStartPoi() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getStartPoi() {
        if (startPoiBuilder_ == null) {
          return startPoi_;
        } else {
          return startPoiBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public Builder setStartPoi(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (startPoiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startPoi_ = value;
          onChanged();
        } else {
          startPoiBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public Builder setStartPoi(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (startPoiBuilder_ == null) {
          startPoi_ = builderForValue.build();
          onChanged();
        } else {
          startPoiBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public Builder mergeStartPoi(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (startPoiBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              startPoi_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            startPoi_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.newBuilder(startPoi_).mergeFrom(value).buildPartial();
          } else {
            startPoi_ = value;
          }
          onChanged();
        } else {
          startPoiBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public Builder clearStartPoi() {
        if (startPoiBuilder_ == null) {
          startPoi_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          startPoiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder getStartPoiBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getStartPoiFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartPoiOrBuilder() {
        if (startPoiBuilder_ != null) {
          return startPoiBuilder_.getMessageOrBuilder();
        } else {
          return startPoi_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition startPoi = 4;</code>
       *
       * <pre>
       *上车参考位置，
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getStartPoiFieldBuilder() {
        if (startPoiBuilder_ == null) {
          startPoiBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  startPoi_,
                  getParentForChildren(),
                  isClean());
          startPoi_ = null;
        }
        return startPoiBuilder_;
      }

      // required .gboss.GpsBaseInfo stopGps = 5;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo stopGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> stopGpsBuilder_;
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public boolean hasStopGps() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getStopGps() {
        if (stopGpsBuilder_ == null) {
          return stopGps_;
        } else {
          return stopGpsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public Builder setStopGps(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (stopGpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stopGps_ = value;
          onChanged();
        } else {
          stopGpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public Builder setStopGps(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (stopGpsBuilder_ == null) {
          stopGps_ = builderForValue.build();
          onChanged();
        } else {
          stopGpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public Builder mergeStopGps(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (stopGpsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              stopGps_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            stopGps_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.newBuilder(stopGps_).mergeFrom(value).buildPartial();
          } else {
            stopGps_ = value;
          }
          onChanged();
        } else {
          stopGpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public Builder clearStopGps() {
        if (stopGpsBuilder_ == null) {
          stopGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          stopGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder getStopGpsBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getStopGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStopGpsOrBuilder() {
        if (stopGpsBuilder_ != null) {
          return stopGpsBuilder_.getMessageOrBuilder();
        } else {
          return stopGps_;
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo stopGps = 5;</code>
       *
       * <pre>
       *下车gps信息，
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getStopGpsFieldBuilder() {
        if (stopGpsBuilder_ == null) {
          stopGpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  stopGps_,
                  getParentForChildren(),
                  isClean());
          stopGps_ = null;
        }
        return stopGpsBuilder_;
      }

      // optional .gboss.GpsReferPosition stopPoi = 6;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition stopPoi_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> stopPoiBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public boolean hasStopPoi() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getStopPoi() {
        if (stopPoiBuilder_ == null) {
          return stopPoi_;
        } else {
          return stopPoiBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public Builder setStopPoi(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (stopPoiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stopPoi_ = value;
          onChanged();
        } else {
          stopPoiBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public Builder setStopPoi(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (stopPoiBuilder_ == null) {
          stopPoi_ = builderForValue.build();
          onChanged();
        } else {
          stopPoiBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public Builder mergeStopPoi(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (stopPoiBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              stopPoi_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            stopPoi_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.newBuilder(stopPoi_).mergeFrom(value).buildPartial();
          } else {
            stopPoi_ = value;
          }
          onChanged();
        } else {
          stopPoiBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public Builder clearStopPoi() {
        if (stopPoiBuilder_ == null) {
          stopPoi_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          stopPoiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder getStopPoiBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getStopPoiFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getStopPoiOrBuilder() {
        if (stopPoiBuilder_ != null) {
          return stopPoiBuilder_.getMessageOrBuilder();
        } else {
          return stopPoi_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition stopPoi = 6;</code>
       *
       * <pre>
       *下车参考位置，
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getStopPoiFieldBuilder() {
        if (stopPoiBuilder_ == null) {
          stopPoiBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  stopPoi_,
                  getParentForChildren(),
                  isClean());
          stopPoi_ = null;
        }
        return stopPoiBuilder_;
      }

      // optional bytes content = 7;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes content = 7;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD可见ASCII码
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes content = 7;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD可见ASCII码
       * </pre>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>optional bytes content = 7;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD可见ASCII码
       * </pre>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes content = 7;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD可见ASCII码
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000040);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.OperateData)
    }

    static {
      defaultInstance = new OperateData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.OperateData)
  }

  public interface ShortMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required string msg = 2;
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // optional int64 recvTime = 3;
    /**
     * <code>optional int64 recvTime = 3;</code>
     *
     * <pre>
     *接收时间
     * </pre>
     */
    boolean hasRecvTime();
    /**
     * <code>optional int64 recvTime = 3;</code>
     *
     * <pre>
     *接收时间
     * </pre>
     */
    long getRecvTime();
  }
  /**
   * Protobuf type {@code gboss.ShortMessage}
   *
   * <pre>
   **
   *  短消息
   * </pre>
   */
  public static final class ShortMessage extends
      com.google.protobuf.GeneratedMessage
      implements ShortMessageOrBuilder {
    // Use ShortMessage.newBuilder() to construct.
    private ShortMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShortMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShortMessage defaultInstance;
    public static ShortMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ShortMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShortMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              msg_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              recvTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_ShortMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_ShortMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ShortMessage> PARSER =
        new com.google.protobuf.AbstractParser<ShortMessage>() {
      public ShortMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShortMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShortMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string msg = 2;
    public static final int MSG_FIELD_NUMBER = 2;
    private java.lang.Object msg_;
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     *短消息内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 recvTime = 3;
    public static final int RECVTIME_FIELD_NUMBER = 3;
    private long recvTime_;
    /**
     * <code>optional int64 recvTime = 3;</code>
     *
     * <pre>
     *接收时间
     * </pre>
     */
    public boolean hasRecvTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 recvTime = 3;</code>
     *
     * <pre>
     *接收时间
     * </pre>
     */
    public long getRecvTime() {
      return recvTime_;
    }

    private void initFields() {
      callLetter_ = "";
      msg_ = "";
      recvTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsg()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, recvTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, recvTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.ShortMessage}
     *
     * <pre>
     **
     *  短消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_ShortMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_ShortMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        recvTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_ShortMessage_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.recvTime_ = recvTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000002;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasRecvTime()) {
          setRecvTime(other.getRecvTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasMsg()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.ShortMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required string msg = 2;
      private java.lang.Object msg_ = "";
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       *短消息内容
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }

      // optional int64 recvTime = 3;
      private long recvTime_ ;
      /**
       * <code>optional int64 recvTime = 3;</code>
       *
       * <pre>
       *接收时间
       * </pre>
       */
      public boolean hasRecvTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 recvTime = 3;</code>
       *
       * <pre>
       *接收时间
       * </pre>
       */
      public long getRecvTime() {
        return recvTime_;
      }
      /**
       * <code>optional int64 recvTime = 3;</code>
       *
       * <pre>
       *接收时间
       * </pre>
       */
      public Builder setRecvTime(long value) {
        bitField0_ |= 0x00000004;
        recvTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 recvTime = 3;</code>
       *
       * <pre>
       *接收时间
       * </pre>
       */
      public Builder clearRecvTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        recvTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.ShortMessage)
    }

    static {
      defaultInstance = new ShortMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.ShortMessage)
  }

  public interface TravelInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required int64 startTime = 2;
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *点火时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *点火时间
     * </pre>
     */
    long getStartTime();

    // required int64 endTime = 3;
    /**
     * <code>required int64 endTime = 3;</code>
     *
     * <pre>
     *熄火时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>required int64 endTime = 3;</code>
     *
     * <pre>
     *熄火时间
     * </pre>
     */
    long getEndTime();

    // optional int32 distance = 4;
    /**
     * <code>optional int32 distance = 4;</code>
     *
     * <pre>
     *里程（单位：米）
     * </pre>
     */
    boolean hasDistance();
    /**
     * <code>optional int32 distance = 4;</code>
     *
     * <pre>
     *里程（单位：米）
     * </pre>
     */
    int getDistance();

    // optional int32 maxSpeed = 5;
    /**
     * <code>optional int32 maxSpeed = 5;</code>
     *
     * <pre>
     *最大速度（单位：0.1千米/小时）
     * </pre>
     */
    boolean hasMaxSpeed();
    /**
     * <code>optional int32 maxSpeed = 5;</code>
     *
     * <pre>
     *最大速度（单位：0.1千米/小时）
     * </pre>
     */
    int getMaxSpeed();

    // optional int32 overSpeedTime = 6;
    /**
     * <code>optional int32 overSpeedTime = 6;</code>
     *
     * <pre>
     *超速时长（单位:秒）
     * </pre>
     */
    boolean hasOverSpeedTime();
    /**
     * <code>optional int32 overSpeedTime = 6;</code>
     *
     * <pre>
     *超速时长（单位:秒）
     * </pre>
     */
    int getOverSpeedTime();

    // optional int32 quickBrakeCount = 7;
    /**
     * <code>optional int32 quickBrakeCount = 7;</code>
     *
     * <pre>
     *急刹车次数
     * </pre>
     */
    boolean hasQuickBrakeCount();
    /**
     * <code>optional int32 quickBrakeCount = 7;</code>
     *
     * <pre>
     *急刹车次数
     * </pre>
     */
    int getQuickBrakeCount();

    // optional int32 emergencyBrakeCount = 8;
    /**
     * <code>optional int32 emergencyBrakeCount = 8;</code>
     *
     * <pre>
     *紧急刹车次数
     * </pre>
     */
    boolean hasEmergencyBrakeCount();
    /**
     * <code>optional int32 emergencyBrakeCount = 8;</code>
     *
     * <pre>
     *紧急刹车次数
     * </pre>
     */
    int getEmergencyBrakeCount();

    // optional int32 quickSpeedUpCount = 9;
    /**
     * <code>optional int32 quickSpeedUpCount = 9;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    boolean hasQuickSpeedUpCount();
    /**
     * <code>optional int32 quickSpeedUpCount = 9;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    int getQuickSpeedUpCount();

    // optional int32 emergencySpeedUpCount = 10;
    /**
     * <code>optional int32 emergencySpeedUpCount = 10;</code>
     *
     * <pre>
     *紧急加速次数
     * </pre>
     */
    boolean hasEmergencySpeedUpCount();
    /**
     * <code>optional int32 emergencySpeedUpCount = 10;</code>
     *
     * <pre>
     *紧急加速次数
     * </pre>
     */
    int getEmergencySpeedUpCount();

    // optional int32 averageSpeed = 11;
    /**
     * <code>optional int32 averageSpeed = 11;</code>
     *
     * <pre>
     *平均速度（单位：0.1千米/小时）
     * </pre>
     */
    boolean hasAverageSpeed();
    /**
     * <code>optional int32 averageSpeed = 11;</code>
     *
     * <pre>
     *平均速度（单位：0.1千米/小时）
     * </pre>
     */
    int getAverageSpeed();

    // optional int32 maxWaterTemperature = 12;
    /**
     * <code>optional int32 maxWaterTemperature = 12;</code>
     *
     * <pre>
     *发动机最高水温（单位：℃）
     * </pre>
     */
    boolean hasMaxWaterTemperature();
    /**
     * <code>optional int32 maxWaterTemperature = 12;</code>
     *
     * <pre>
     *发动机最高水温（单位：℃）
     * </pre>
     */
    int getMaxWaterTemperature();

    // optional int32 maxRotationSpeed = 13;
    /**
     * <code>optional int32 maxRotationSpeed = 13;</code>
     *
     * <pre>
     *发动机最高工作转速（单位：转/分）
     * </pre>
     */
    boolean hasMaxRotationSpeed();
    /**
     * <code>optional int32 maxRotationSpeed = 13;</code>
     *
     * <pre>
     *发动机最高工作转速（单位：转/分）
     * </pre>
     */
    int getMaxRotationSpeed();

    // optional int32 voltage = 14;
    /**
     * <code>optional int32 voltage = 14;</code>
     *
     * <pre>
     *电压值（单位：0.1V）
     * </pre>
     */
    boolean hasVoltage();
    /**
     * <code>optional int32 voltage = 14;</code>
     *
     * <pre>
     *电压值（单位：0.1V）
     * </pre>
     */
    int getVoltage();

    // optional int32 totalOil = 15;
    /**
     * <code>optional int32 totalOil = 15;</code>
     *
     * <pre>
     *总油耗（单位：0.01升）
     * </pre>
     */
    boolean hasTotalOil();
    /**
     * <code>optional int32 totalOil = 15;</code>
     *
     * <pre>
     *总油耗（单位：0.01升）
     * </pre>
     */
    int getTotalOil();

    // optional int32 averageOil = 16;
    /**
     * <code>optional int32 averageOil = 16;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    boolean hasAverageOil();
    /**
     * <code>optional int32 averageOil = 16;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    int getAverageOil();

    // optional int32 tiredDrivingTime = 17;
    /**
     * <code>optional int32 tiredDrivingTime = 17;</code>
     *
     * <pre>
     *疲劳驾驶时长（单位:秒）
     * </pre>
     */
    boolean hasTiredDrivingTime();
    /**
     * <code>optional int32 tiredDrivingTime = 17;</code>
     *
     * <pre>
     *疲劳驾驶时长（单位:秒）
     * </pre>
     */
    int getTiredDrivingTime();

    // optional int32 serialNumber = 18;
    /**
     * <code>optional int32 serialNumber = 18;</code>
     *
     * <pre>
     *行程序号（0-255）
     * </pre>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional int32 serialNumber = 18;</code>
     *
     * <pre>
     *行程序号（0-255）
     * </pre>
     */
    int getSerialNumber();

    // optional int32 averageRotationSpeed = 19;
    /**
     * <code>optional int32 averageRotationSpeed = 19;</code>
     *
     * <pre>
     *平均转速（单位：转/分）
     * </pre>
     */
    boolean hasAverageRotationSpeed();
    /**
     * <code>optional int32 averageRotationSpeed = 19;</code>
     *
     * <pre>
     *平均转速（单位：转/分）
     * </pre>
     */
    int getAverageRotationSpeed();

    // optional int32 maxOil = 20;
    /**
     * <code>optional int32 maxOil = 20;</code>
     *
     * <pre>
     *最高瞬时油耗（单位：0.01升/百公里）
     * </pre>
     */
    boolean hasMaxOil();
    /**
     * <code>optional int32 maxOil = 20;</code>
     *
     * <pre>
     *最高瞬时油耗（单位：0.01升/百公里）
     * </pre>
     */
    int getMaxOil();

    // optional int32 idleTime = 21;
    /**
     * <code>optional int32 idleTime = 21;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    boolean hasIdleTime();
    /**
     * <code>optional int32 idleTime = 21;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    int getIdleTime();

    // optional .gboss.GpsBaseInfo startGps = 22;
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    boolean hasStartGps();
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getStartGps();
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder();

    // optional .gboss.GpsReferPosition startReferPos = 23;
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    boolean hasStartReferPos();
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getStartReferPos();
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartReferPosOrBuilder();

    // optional .gboss.GpsBaseInfo endGps = 24;
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    boolean hasEndGps();
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getEndGps();
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getEndGpsOrBuilder();

    // optional .gboss.GpsReferPosition endReferPos = 25;
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    boolean hasEndReferPos();
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getEndReferPos();
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getEndReferPosOrBuilder();
  }
  /**
   * Protobuf type {@code gboss.TravelInfo}
   *
   * <pre>
   **
   *  行程信息(Travel)
   * </pre>
   */
  public static final class TravelInfo extends
      com.google.protobuf.GeneratedMessage
      implements TravelInfoOrBuilder {
    // Use TravelInfo.newBuilder() to construct.
    private TravelInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TravelInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TravelInfo defaultInstance;
    public static TravelInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TravelInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TravelInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startTime_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              endTime_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              distance_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxSpeed_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              overSpeedTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              quickBrakeCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              emergencyBrakeCount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              quickSpeedUpCount_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              emergencySpeedUpCount_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              averageSpeed_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              maxWaterTemperature_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              maxRotationSpeed_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              voltage_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              totalOil_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              averageOil_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              tiredDrivingTime_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              serialNumber_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              averageRotationSpeed_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              maxOil_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              idleTime_ = input.readInt32();
              break;
            }
            case 178: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = startGps_.toBuilder();
              }
              startGps_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startGps_);
                startGps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
            case 186: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = startReferPos_.toBuilder();
              }
              startReferPos_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startReferPos_);
                startReferPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
            case 194: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = endGps_.toBuilder();
              }
              endGps_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endGps_);
                endGps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 202: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x01000000) == 0x01000000)) {
                subBuilder = endReferPos_.toBuilder();
              }
              endReferPos_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endReferPos_);
                endReferPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x01000000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_TravelInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_TravelInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TravelInfo> PARSER =
        new com.google.protobuf.AbstractParser<TravelInfo>() {
      public TravelInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TravelInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TravelInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 startTime = 2;
    public static final int STARTTIME_FIELD_NUMBER = 2;
    private long startTime_;
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *点火时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *点火时间
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    // required int64 endTime = 3;
    public static final int ENDTIME_FIELD_NUMBER = 3;
    private long endTime_;
    /**
     * <code>required int64 endTime = 3;</code>
     *
     * <pre>
     *熄火时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 endTime = 3;</code>
     *
     * <pre>
     *熄火时间
     * </pre>
     */
    public long getEndTime() {
      return endTime_;
    }

    // optional int32 distance = 4;
    public static final int DISTANCE_FIELD_NUMBER = 4;
    private int distance_;
    /**
     * <code>optional int32 distance = 4;</code>
     *
     * <pre>
     *里程（单位：米）
     * </pre>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 distance = 4;</code>
     *
     * <pre>
     *里程（单位：米）
     * </pre>
     */
    public int getDistance() {
      return distance_;
    }

    // optional int32 maxSpeed = 5;
    public static final int MAXSPEED_FIELD_NUMBER = 5;
    private int maxSpeed_;
    /**
     * <code>optional int32 maxSpeed = 5;</code>
     *
     * <pre>
     *最大速度（单位：0.1千米/小时）
     * </pre>
     */
    public boolean hasMaxSpeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 maxSpeed = 5;</code>
     *
     * <pre>
     *最大速度（单位：0.1千米/小时）
     * </pre>
     */
    public int getMaxSpeed() {
      return maxSpeed_;
    }

    // optional int32 overSpeedTime = 6;
    public static final int OVERSPEEDTIME_FIELD_NUMBER = 6;
    private int overSpeedTime_;
    /**
     * <code>optional int32 overSpeedTime = 6;</code>
     *
     * <pre>
     *超速时长（单位:秒）
     * </pre>
     */
    public boolean hasOverSpeedTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 overSpeedTime = 6;</code>
     *
     * <pre>
     *超速时长（单位:秒）
     * </pre>
     */
    public int getOverSpeedTime() {
      return overSpeedTime_;
    }

    // optional int32 quickBrakeCount = 7;
    public static final int QUICKBRAKECOUNT_FIELD_NUMBER = 7;
    private int quickBrakeCount_;
    /**
     * <code>optional int32 quickBrakeCount = 7;</code>
     *
     * <pre>
     *急刹车次数
     * </pre>
     */
    public boolean hasQuickBrakeCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 quickBrakeCount = 7;</code>
     *
     * <pre>
     *急刹车次数
     * </pre>
     */
    public int getQuickBrakeCount() {
      return quickBrakeCount_;
    }

    // optional int32 emergencyBrakeCount = 8;
    public static final int EMERGENCYBRAKECOUNT_FIELD_NUMBER = 8;
    private int emergencyBrakeCount_;
    /**
     * <code>optional int32 emergencyBrakeCount = 8;</code>
     *
     * <pre>
     *紧急刹车次数
     * </pre>
     */
    public boolean hasEmergencyBrakeCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 emergencyBrakeCount = 8;</code>
     *
     * <pre>
     *紧急刹车次数
     * </pre>
     */
    public int getEmergencyBrakeCount() {
      return emergencyBrakeCount_;
    }

    // optional int32 quickSpeedUpCount = 9;
    public static final int QUICKSPEEDUPCOUNT_FIELD_NUMBER = 9;
    private int quickSpeedUpCount_;
    /**
     * <code>optional int32 quickSpeedUpCount = 9;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    public boolean hasQuickSpeedUpCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 quickSpeedUpCount = 9;</code>
     *
     * <pre>
     *急加速次数
     * </pre>
     */
    public int getQuickSpeedUpCount() {
      return quickSpeedUpCount_;
    }

    // optional int32 emergencySpeedUpCount = 10;
    public static final int EMERGENCYSPEEDUPCOUNT_FIELD_NUMBER = 10;
    private int emergencySpeedUpCount_;
    /**
     * <code>optional int32 emergencySpeedUpCount = 10;</code>
     *
     * <pre>
     *紧急加速次数
     * </pre>
     */
    public boolean hasEmergencySpeedUpCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 emergencySpeedUpCount = 10;</code>
     *
     * <pre>
     *紧急加速次数
     * </pre>
     */
    public int getEmergencySpeedUpCount() {
      return emergencySpeedUpCount_;
    }

    // optional int32 averageSpeed = 11;
    public static final int AVERAGESPEED_FIELD_NUMBER = 11;
    private int averageSpeed_;
    /**
     * <code>optional int32 averageSpeed = 11;</code>
     *
     * <pre>
     *平均速度（单位：0.1千米/小时）
     * </pre>
     */
    public boolean hasAverageSpeed() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 averageSpeed = 11;</code>
     *
     * <pre>
     *平均速度（单位：0.1千米/小时）
     * </pre>
     */
    public int getAverageSpeed() {
      return averageSpeed_;
    }

    // optional int32 maxWaterTemperature = 12;
    public static final int MAXWATERTEMPERATURE_FIELD_NUMBER = 12;
    private int maxWaterTemperature_;
    /**
     * <code>optional int32 maxWaterTemperature = 12;</code>
     *
     * <pre>
     *发动机最高水温（单位：℃）
     * </pre>
     */
    public boolean hasMaxWaterTemperature() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 maxWaterTemperature = 12;</code>
     *
     * <pre>
     *发动机最高水温（单位：℃）
     * </pre>
     */
    public int getMaxWaterTemperature() {
      return maxWaterTemperature_;
    }

    // optional int32 maxRotationSpeed = 13;
    public static final int MAXROTATIONSPEED_FIELD_NUMBER = 13;
    private int maxRotationSpeed_;
    /**
     * <code>optional int32 maxRotationSpeed = 13;</code>
     *
     * <pre>
     *发动机最高工作转速（单位：转/分）
     * </pre>
     */
    public boolean hasMaxRotationSpeed() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 maxRotationSpeed = 13;</code>
     *
     * <pre>
     *发动机最高工作转速（单位：转/分）
     * </pre>
     */
    public int getMaxRotationSpeed() {
      return maxRotationSpeed_;
    }

    // optional int32 voltage = 14;
    public static final int VOLTAGE_FIELD_NUMBER = 14;
    private int voltage_;
    /**
     * <code>optional int32 voltage = 14;</code>
     *
     * <pre>
     *电压值（单位：0.1V）
     * </pre>
     */
    public boolean hasVoltage() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 voltage = 14;</code>
     *
     * <pre>
     *电压值（单位：0.1V）
     * </pre>
     */
    public int getVoltage() {
      return voltage_;
    }

    // optional int32 totalOil = 15;
    public static final int TOTALOIL_FIELD_NUMBER = 15;
    private int totalOil_;
    /**
     * <code>optional int32 totalOil = 15;</code>
     *
     * <pre>
     *总油耗（单位：0.01升）
     * </pre>
     */
    public boolean hasTotalOil() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 totalOil = 15;</code>
     *
     * <pre>
     *总油耗（单位：0.01升）
     * </pre>
     */
    public int getTotalOil() {
      return totalOil_;
    }

    // optional int32 averageOil = 16;
    public static final int AVERAGEOIL_FIELD_NUMBER = 16;
    private int averageOil_;
    /**
     * <code>optional int32 averageOil = 16;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public boolean hasAverageOil() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 averageOil = 16;</code>
     *
     * <pre>
     *平均油耗（单位：0.01升/百公里）
     * </pre>
     */
    public int getAverageOil() {
      return averageOil_;
    }

    // optional int32 tiredDrivingTime = 17;
    public static final int TIREDDRIVINGTIME_FIELD_NUMBER = 17;
    private int tiredDrivingTime_;
    /**
     * <code>optional int32 tiredDrivingTime = 17;</code>
     *
     * <pre>
     *疲劳驾驶时长（单位:秒）
     * </pre>
     */
    public boolean hasTiredDrivingTime() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 tiredDrivingTime = 17;</code>
     *
     * <pre>
     *疲劳驾驶时长（单位:秒）
     * </pre>
     */
    public int getTiredDrivingTime() {
      return tiredDrivingTime_;
    }

    // optional int32 serialNumber = 18;
    public static final int SERIALNUMBER_FIELD_NUMBER = 18;
    private int serialNumber_;
    /**
     * <code>optional int32 serialNumber = 18;</code>
     *
     * <pre>
     *行程序号（0-255）
     * </pre>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 serialNumber = 18;</code>
     *
     * <pre>
     *行程序号（0-255）
     * </pre>
     */
    public int getSerialNumber() {
      return serialNumber_;
    }

    // optional int32 averageRotationSpeed = 19;
    public static final int AVERAGEROTATIONSPEED_FIELD_NUMBER = 19;
    private int averageRotationSpeed_;
    /**
     * <code>optional int32 averageRotationSpeed = 19;</code>
     *
     * <pre>
     *平均转速（单位：转/分）
     * </pre>
     */
    public boolean hasAverageRotationSpeed() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 averageRotationSpeed = 19;</code>
     *
     * <pre>
     *平均转速（单位：转/分）
     * </pre>
     */
    public int getAverageRotationSpeed() {
      return averageRotationSpeed_;
    }

    // optional int32 maxOil = 20;
    public static final int MAXOIL_FIELD_NUMBER = 20;
    private int maxOil_;
    /**
     * <code>optional int32 maxOil = 20;</code>
     *
     * <pre>
     *最高瞬时油耗（单位：0.01升/百公里）
     * </pre>
     */
    public boolean hasMaxOil() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 maxOil = 20;</code>
     *
     * <pre>
     *最高瞬时油耗（单位：0.01升/百公里）
     * </pre>
     */
    public int getMaxOil() {
      return maxOil_;
    }

    // optional int32 idleTime = 21;
    public static final int IDLETIME_FIELD_NUMBER = 21;
    private int idleTime_;
    /**
     * <code>optional int32 idleTime = 21;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    public boolean hasIdleTime() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 idleTime = 21;</code>
     *
     * <pre>
     *怠速时长（单位:秒）
     * </pre>
     */
    public int getIdleTime() {
      return idleTime_;
    }

    // optional .gboss.GpsBaseInfo startGps = 22;
    public static final int STARTGPS_FIELD_NUMBER = 22;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo startGps_;
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public boolean hasStartGps() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getStartGps() {
      return startGps_;
    }
    /**
     * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
     *
     * <pre>
     *点火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder() {
      return startGps_;
    }

    // optional .gboss.GpsReferPosition startReferPos = 23;
    public static final int STARTREFERPOS_FIELD_NUMBER = 23;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition startReferPos_;
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public boolean hasStartReferPos() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getStartReferPos() {
      return startReferPos_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
     *
     * <pre>
     *点火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartReferPosOrBuilder() {
      return startReferPos_;
    }

    // optional .gboss.GpsBaseInfo endGps = 24;
    public static final int ENDGPS_FIELD_NUMBER = 24;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo endGps_;
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public boolean hasEndGps() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getEndGps() {
      return endGps_;
    }
    /**
     * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
     *
     * <pre>
     *熄火gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getEndGpsOrBuilder() {
      return endGps_;
    }

    // optional .gboss.GpsReferPosition endReferPos = 25;
    public static final int ENDREFERPOS_FIELD_NUMBER = 25;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition endReferPos_;
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public boolean hasEndReferPos() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getEndReferPos() {
      return endReferPos_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
     *
     * <pre>
     *熄火参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getEndReferPosOrBuilder() {
      return endReferPos_;
    }

    private void initFields() {
      callLetter_ = "";
      startTime_ = 0L;
      endTime_ = 0L;
      distance_ = 0;
      maxSpeed_ = 0;
      overSpeedTime_ = 0;
      quickBrakeCount_ = 0;
      emergencyBrakeCount_ = 0;
      quickSpeedUpCount_ = 0;
      emergencySpeedUpCount_ = 0;
      averageSpeed_ = 0;
      maxWaterTemperature_ = 0;
      maxRotationSpeed_ = 0;
      voltage_ = 0;
      totalOil_ = 0;
      averageOil_ = 0;
      tiredDrivingTime_ = 0;
      serialNumber_ = 0;
      averageRotationSpeed_ = 0;
      maxOil_ = 0;
      idleTime_ = 0;
      startGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      startReferPos_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      endGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      endReferPos_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasStartGps()) {
        if (!getStartGps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStartReferPos()) {
        if (!getStartReferPos().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEndGps()) {
        if (!getEndGps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEndReferPos()) {
        if (!getEndReferPos().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, endTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, distance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, maxSpeed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, overSpeedTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, quickBrakeCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, emergencyBrakeCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, quickSpeedUpCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, emergencySpeedUpCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, averageSpeed_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, maxWaterTemperature_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, maxRotationSpeed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, voltage_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, totalOil_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, averageOil_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, tiredDrivingTime_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, serialNumber_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, averageRotationSpeed_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, maxOil_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, idleTime_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(22, startGps_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(23, startReferPos_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(24, endGps_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(25, endReferPos_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, endTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, distance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxSpeed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, overSpeedTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, quickBrakeCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, emergencyBrakeCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, quickSpeedUpCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, emergencySpeedUpCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, averageSpeed_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, maxWaterTemperature_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, maxRotationSpeed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, voltage_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, totalOil_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, averageOil_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, tiredDrivingTime_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, serialNumber_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, averageRotationSpeed_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, maxOil_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, idleTime_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, startGps_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, startReferPos_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, endGps_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, endReferPos_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.TravelInfo}
     *
     * <pre>
     **
     *  行程信息(Travel)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_TravelInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_TravelInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStartGpsFieldBuilder();
          getStartReferPosFieldBuilder();
          getEndGpsFieldBuilder();
          getEndReferPosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        overSpeedTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        quickBrakeCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        emergencyBrakeCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        quickSpeedUpCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        emergencySpeedUpCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        averageSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        maxWaterTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        maxRotationSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        voltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        totalOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        averageOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        tiredDrivingTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        serialNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        averageRotationSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        maxOil_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        idleTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        if (startGpsBuilder_ == null) {
          startGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          startGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        if (startReferPosBuilder_ == null) {
          startReferPos_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          startReferPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        if (endGpsBuilder_ == null) {
          endGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          endGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        if (endReferPosBuilder_ == null) {
          endReferPos_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          endReferPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_TravelInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.distance_ = distance_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxSpeed_ = maxSpeed_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.overSpeedTime_ = overSpeedTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.quickBrakeCount_ = quickBrakeCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.emergencyBrakeCount_ = emergencyBrakeCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.quickSpeedUpCount_ = quickSpeedUpCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.emergencySpeedUpCount_ = emergencySpeedUpCount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.averageSpeed_ = averageSpeed_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.maxWaterTemperature_ = maxWaterTemperature_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.maxRotationSpeed_ = maxRotationSpeed_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.voltage_ = voltage_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.totalOil_ = totalOil_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.averageOil_ = averageOil_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tiredDrivingTime_ = tiredDrivingTime_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.averageRotationSpeed_ = averageRotationSpeed_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.maxOil_ = maxOil_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.idleTime_ = idleTime_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (startGpsBuilder_ == null) {
          result.startGps_ = startGps_;
        } else {
          result.startGps_ = startGpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (startReferPosBuilder_ == null) {
          result.startReferPos_ = startReferPos_;
        } else {
          result.startReferPos_ = startReferPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (endGpsBuilder_ == null) {
          result.endGps_ = endGps_;
        } else {
          result.endGps_ = endGpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        if (endReferPosBuilder_ == null) {
          result.endReferPos_ = endReferPos_;
        } else {
          result.endReferPos_ = endReferPosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasMaxSpeed()) {
          setMaxSpeed(other.getMaxSpeed());
        }
        if (other.hasOverSpeedTime()) {
          setOverSpeedTime(other.getOverSpeedTime());
        }
        if (other.hasQuickBrakeCount()) {
          setQuickBrakeCount(other.getQuickBrakeCount());
        }
        if (other.hasEmergencyBrakeCount()) {
          setEmergencyBrakeCount(other.getEmergencyBrakeCount());
        }
        if (other.hasQuickSpeedUpCount()) {
          setQuickSpeedUpCount(other.getQuickSpeedUpCount());
        }
        if (other.hasEmergencySpeedUpCount()) {
          setEmergencySpeedUpCount(other.getEmergencySpeedUpCount());
        }
        if (other.hasAverageSpeed()) {
          setAverageSpeed(other.getAverageSpeed());
        }
        if (other.hasMaxWaterTemperature()) {
          setMaxWaterTemperature(other.getMaxWaterTemperature());
        }
        if (other.hasMaxRotationSpeed()) {
          setMaxRotationSpeed(other.getMaxRotationSpeed());
        }
        if (other.hasVoltage()) {
          setVoltage(other.getVoltage());
        }
        if (other.hasTotalOil()) {
          setTotalOil(other.getTotalOil());
        }
        if (other.hasAverageOil()) {
          setAverageOil(other.getAverageOil());
        }
        if (other.hasTiredDrivingTime()) {
          setTiredDrivingTime(other.getTiredDrivingTime());
        }
        if (other.hasSerialNumber()) {
          setSerialNumber(other.getSerialNumber());
        }
        if (other.hasAverageRotationSpeed()) {
          setAverageRotationSpeed(other.getAverageRotationSpeed());
        }
        if (other.hasMaxOil()) {
          setMaxOil(other.getMaxOil());
        }
        if (other.hasIdleTime()) {
          setIdleTime(other.getIdleTime());
        }
        if (other.hasStartGps()) {
          mergeStartGps(other.getStartGps());
        }
        if (other.hasStartReferPos()) {
          mergeStartReferPos(other.getStartReferPos());
        }
        if (other.hasEndGps()) {
          mergeEndGps(other.getEndGps());
        }
        if (other.hasEndReferPos()) {
          mergeEndReferPos(other.getEndReferPos());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasEndTime()) {
          
          return false;
        }
        if (hasStartGps()) {
          if (!getStartGps().isInitialized()) {
            
            return false;
          }
        }
        if (hasStartReferPos()) {
          if (!getStartReferPos().isInitialized()) {
            
            return false;
          }
        }
        if (hasEndGps()) {
          if (!getEndGps().isInitialized()) {
            
            return false;
          }
        }
        if (hasEndReferPos()) {
          if (!getEndReferPos().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.TravelInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required int64 startTime = 2;
      private long startTime_ ;
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *点火时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *点火时间
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *点火时间
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000002;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *点火时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      // required int64 endTime = 3;
      private long endTime_ ;
      /**
       * <code>required int64 endTime = 3;</code>
       *
       * <pre>
       *熄火时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 endTime = 3;</code>
       *
       * <pre>
       *熄火时间
       * </pre>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>required int64 endTime = 3;</code>
       *
       * <pre>
       *熄火时间
       * </pre>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000004;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 endTime = 3;</code>
       *
       * <pre>
       *熄火时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 distance = 4;
      private int distance_ ;
      /**
       * <code>optional int32 distance = 4;</code>
       *
       * <pre>
       *里程（单位：米）
       * </pre>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 distance = 4;</code>
       *
       * <pre>
       *里程（单位：米）
       * </pre>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <code>optional int32 distance = 4;</code>
       *
       * <pre>
       *里程（单位：米）
       * </pre>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000008;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 distance = 4;</code>
       *
       * <pre>
       *里程（单位：米）
       * </pre>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000008);
        distance_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxSpeed = 5;
      private int maxSpeed_ ;
      /**
       * <code>optional int32 maxSpeed = 5;</code>
       *
       * <pre>
       *最大速度（单位：0.1千米/小时）
       * </pre>
       */
      public boolean hasMaxSpeed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 maxSpeed = 5;</code>
       *
       * <pre>
       *最大速度（单位：0.1千米/小时）
       * </pre>
       */
      public int getMaxSpeed() {
        return maxSpeed_;
      }
      /**
       * <code>optional int32 maxSpeed = 5;</code>
       *
       * <pre>
       *最大速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder setMaxSpeed(int value) {
        bitField0_ |= 0x00000010;
        maxSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxSpeed = 5;</code>
       *
       * <pre>
       *最大速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder clearMaxSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 overSpeedTime = 6;
      private int overSpeedTime_ ;
      /**
       * <code>optional int32 overSpeedTime = 6;</code>
       *
       * <pre>
       *超速时长（单位:秒）
       * </pre>
       */
      public boolean hasOverSpeedTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 overSpeedTime = 6;</code>
       *
       * <pre>
       *超速时长（单位:秒）
       * </pre>
       */
      public int getOverSpeedTime() {
        return overSpeedTime_;
      }
      /**
       * <code>optional int32 overSpeedTime = 6;</code>
       *
       * <pre>
       *超速时长（单位:秒）
       * </pre>
       */
      public Builder setOverSpeedTime(int value) {
        bitField0_ |= 0x00000020;
        overSpeedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 overSpeedTime = 6;</code>
       *
       * <pre>
       *超速时长（单位:秒）
       * </pre>
       */
      public Builder clearOverSpeedTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        overSpeedTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quickBrakeCount = 7;
      private int quickBrakeCount_ ;
      /**
       * <code>optional int32 quickBrakeCount = 7;</code>
       *
       * <pre>
       *急刹车次数
       * </pre>
       */
      public boolean hasQuickBrakeCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 quickBrakeCount = 7;</code>
       *
       * <pre>
       *急刹车次数
       * </pre>
       */
      public int getQuickBrakeCount() {
        return quickBrakeCount_;
      }
      /**
       * <code>optional int32 quickBrakeCount = 7;</code>
       *
       * <pre>
       *急刹车次数
       * </pre>
       */
      public Builder setQuickBrakeCount(int value) {
        bitField0_ |= 0x00000040;
        quickBrakeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quickBrakeCount = 7;</code>
       *
       * <pre>
       *急刹车次数
       * </pre>
       */
      public Builder clearQuickBrakeCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        quickBrakeCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 emergencyBrakeCount = 8;
      private int emergencyBrakeCount_ ;
      /**
       * <code>optional int32 emergencyBrakeCount = 8;</code>
       *
       * <pre>
       *紧急刹车次数
       * </pre>
       */
      public boolean hasEmergencyBrakeCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 emergencyBrakeCount = 8;</code>
       *
       * <pre>
       *紧急刹车次数
       * </pre>
       */
      public int getEmergencyBrakeCount() {
        return emergencyBrakeCount_;
      }
      /**
       * <code>optional int32 emergencyBrakeCount = 8;</code>
       *
       * <pre>
       *紧急刹车次数
       * </pre>
       */
      public Builder setEmergencyBrakeCount(int value) {
        bitField0_ |= 0x00000080;
        emergencyBrakeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 emergencyBrakeCount = 8;</code>
       *
       * <pre>
       *紧急刹车次数
       * </pre>
       */
      public Builder clearEmergencyBrakeCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        emergencyBrakeCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quickSpeedUpCount = 9;
      private int quickSpeedUpCount_ ;
      /**
       * <code>optional int32 quickSpeedUpCount = 9;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public boolean hasQuickSpeedUpCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 quickSpeedUpCount = 9;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public int getQuickSpeedUpCount() {
        return quickSpeedUpCount_;
      }
      /**
       * <code>optional int32 quickSpeedUpCount = 9;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public Builder setQuickSpeedUpCount(int value) {
        bitField0_ |= 0x00000100;
        quickSpeedUpCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quickSpeedUpCount = 9;</code>
       *
       * <pre>
       *急加速次数
       * </pre>
       */
      public Builder clearQuickSpeedUpCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        quickSpeedUpCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 emergencySpeedUpCount = 10;
      private int emergencySpeedUpCount_ ;
      /**
       * <code>optional int32 emergencySpeedUpCount = 10;</code>
       *
       * <pre>
       *紧急加速次数
       * </pre>
       */
      public boolean hasEmergencySpeedUpCount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 emergencySpeedUpCount = 10;</code>
       *
       * <pre>
       *紧急加速次数
       * </pre>
       */
      public int getEmergencySpeedUpCount() {
        return emergencySpeedUpCount_;
      }
      /**
       * <code>optional int32 emergencySpeedUpCount = 10;</code>
       *
       * <pre>
       *紧急加速次数
       * </pre>
       */
      public Builder setEmergencySpeedUpCount(int value) {
        bitField0_ |= 0x00000200;
        emergencySpeedUpCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 emergencySpeedUpCount = 10;</code>
       *
       * <pre>
       *紧急加速次数
       * </pre>
       */
      public Builder clearEmergencySpeedUpCount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        emergencySpeedUpCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageSpeed = 11;
      private int averageSpeed_ ;
      /**
       * <code>optional int32 averageSpeed = 11;</code>
       *
       * <pre>
       *平均速度（单位：0.1千米/小时）
       * </pre>
       */
      public boolean hasAverageSpeed() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 averageSpeed = 11;</code>
       *
       * <pre>
       *平均速度（单位：0.1千米/小时）
       * </pre>
       */
      public int getAverageSpeed() {
        return averageSpeed_;
      }
      /**
       * <code>optional int32 averageSpeed = 11;</code>
       *
       * <pre>
       *平均速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder setAverageSpeed(int value) {
        bitField0_ |= 0x00000400;
        averageSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageSpeed = 11;</code>
       *
       * <pre>
       *平均速度（单位：0.1千米/小时）
       * </pre>
       */
      public Builder clearAverageSpeed() {
        bitField0_ = (bitField0_ & ~0x00000400);
        averageSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxWaterTemperature = 12;
      private int maxWaterTemperature_ ;
      /**
       * <code>optional int32 maxWaterTemperature = 12;</code>
       *
       * <pre>
       *发动机最高水温（单位：℃）
       * </pre>
       */
      public boolean hasMaxWaterTemperature() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 maxWaterTemperature = 12;</code>
       *
       * <pre>
       *发动机最高水温（单位：℃）
       * </pre>
       */
      public int getMaxWaterTemperature() {
        return maxWaterTemperature_;
      }
      /**
       * <code>optional int32 maxWaterTemperature = 12;</code>
       *
       * <pre>
       *发动机最高水温（单位：℃）
       * </pre>
       */
      public Builder setMaxWaterTemperature(int value) {
        bitField0_ |= 0x00000800;
        maxWaterTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxWaterTemperature = 12;</code>
       *
       * <pre>
       *发动机最高水温（单位：℃）
       * </pre>
       */
      public Builder clearMaxWaterTemperature() {
        bitField0_ = (bitField0_ & ~0x00000800);
        maxWaterTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxRotationSpeed = 13;
      private int maxRotationSpeed_ ;
      /**
       * <code>optional int32 maxRotationSpeed = 13;</code>
       *
       * <pre>
       *发动机最高工作转速（单位：转/分）
       * </pre>
       */
      public boolean hasMaxRotationSpeed() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 maxRotationSpeed = 13;</code>
       *
       * <pre>
       *发动机最高工作转速（单位：转/分）
       * </pre>
       */
      public int getMaxRotationSpeed() {
        return maxRotationSpeed_;
      }
      /**
       * <code>optional int32 maxRotationSpeed = 13;</code>
       *
       * <pre>
       *发动机最高工作转速（单位：转/分）
       * </pre>
       */
      public Builder setMaxRotationSpeed(int value) {
        bitField0_ |= 0x00001000;
        maxRotationSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxRotationSpeed = 13;</code>
       *
       * <pre>
       *发动机最高工作转速（单位：转/分）
       * </pre>
       */
      public Builder clearMaxRotationSpeed() {
        bitField0_ = (bitField0_ & ~0x00001000);
        maxRotationSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 voltage = 14;
      private int voltage_ ;
      /**
       * <code>optional int32 voltage = 14;</code>
       *
       * <pre>
       *电压值（单位：0.1V）
       * </pre>
       */
      public boolean hasVoltage() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 voltage = 14;</code>
       *
       * <pre>
       *电压值（单位：0.1V）
       * </pre>
       */
      public int getVoltage() {
        return voltage_;
      }
      /**
       * <code>optional int32 voltage = 14;</code>
       *
       * <pre>
       *电压值（单位：0.1V）
       * </pre>
       */
      public Builder setVoltage(int value) {
        bitField0_ |= 0x00002000;
        voltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 voltage = 14;</code>
       *
       * <pre>
       *电压值（单位：0.1V）
       * </pre>
       */
      public Builder clearVoltage() {
        bitField0_ = (bitField0_ & ~0x00002000);
        voltage_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalOil = 15;
      private int totalOil_ ;
      /**
       * <code>optional int32 totalOil = 15;</code>
       *
       * <pre>
       *总油耗（单位：0.01升）
       * </pre>
       */
      public boolean hasTotalOil() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 totalOil = 15;</code>
       *
       * <pre>
       *总油耗（单位：0.01升）
       * </pre>
       */
      public int getTotalOil() {
        return totalOil_;
      }
      /**
       * <code>optional int32 totalOil = 15;</code>
       *
       * <pre>
       *总油耗（单位：0.01升）
       * </pre>
       */
      public Builder setTotalOil(int value) {
        bitField0_ |= 0x00004000;
        totalOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalOil = 15;</code>
       *
       * <pre>
       *总油耗（单位：0.01升）
       * </pre>
       */
      public Builder clearTotalOil() {
        bitField0_ = (bitField0_ & ~0x00004000);
        totalOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageOil = 16;
      private int averageOil_ ;
      /**
       * <code>optional int32 averageOil = 16;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public boolean hasAverageOil() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 averageOil = 16;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public int getAverageOil() {
        return averageOil_;
      }
      /**
       * <code>optional int32 averageOil = 16;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder setAverageOil(int value) {
        bitField0_ |= 0x00008000;
        averageOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageOil = 16;</code>
       *
       * <pre>
       *平均油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder clearAverageOil() {
        bitField0_ = (bitField0_ & ~0x00008000);
        averageOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tiredDrivingTime = 17;
      private int tiredDrivingTime_ ;
      /**
       * <code>optional int32 tiredDrivingTime = 17;</code>
       *
       * <pre>
       *疲劳驾驶时长（单位:秒）
       * </pre>
       */
      public boolean hasTiredDrivingTime() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 tiredDrivingTime = 17;</code>
       *
       * <pre>
       *疲劳驾驶时长（单位:秒）
       * </pre>
       */
      public int getTiredDrivingTime() {
        return tiredDrivingTime_;
      }
      /**
       * <code>optional int32 tiredDrivingTime = 17;</code>
       *
       * <pre>
       *疲劳驾驶时长（单位:秒）
       * </pre>
       */
      public Builder setTiredDrivingTime(int value) {
        bitField0_ |= 0x00010000;
        tiredDrivingTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tiredDrivingTime = 17;</code>
       *
       * <pre>
       *疲劳驾驶时长（单位:秒）
       * </pre>
       */
      public Builder clearTiredDrivingTime() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tiredDrivingTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 serialNumber = 18;
      private int serialNumber_ ;
      /**
       * <code>optional int32 serialNumber = 18;</code>
       *
       * <pre>
       *行程序号（0-255）
       * </pre>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 serialNumber = 18;</code>
       *
       * <pre>
       *行程序号（0-255）
       * </pre>
       */
      public int getSerialNumber() {
        return serialNumber_;
      }
      /**
       * <code>optional int32 serialNumber = 18;</code>
       *
       * <pre>
       *行程序号（0-255）
       * </pre>
       */
      public Builder setSerialNumber(int value) {
        bitField0_ |= 0x00020000;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 serialNumber = 18;</code>
       *
       * <pre>
       *行程序号（0-255）
       * </pre>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00020000);
        serialNumber_ = 0;
        onChanged();
        return this;
      }

      // optional int32 averageRotationSpeed = 19;
      private int averageRotationSpeed_ ;
      /**
       * <code>optional int32 averageRotationSpeed = 19;</code>
       *
       * <pre>
       *平均转速（单位：转/分）
       * </pre>
       */
      public boolean hasAverageRotationSpeed() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 averageRotationSpeed = 19;</code>
       *
       * <pre>
       *平均转速（单位：转/分）
       * </pre>
       */
      public int getAverageRotationSpeed() {
        return averageRotationSpeed_;
      }
      /**
       * <code>optional int32 averageRotationSpeed = 19;</code>
       *
       * <pre>
       *平均转速（单位：转/分）
       * </pre>
       */
      public Builder setAverageRotationSpeed(int value) {
        bitField0_ |= 0x00040000;
        averageRotationSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 averageRotationSpeed = 19;</code>
       *
       * <pre>
       *平均转速（单位：转/分）
       * </pre>
       */
      public Builder clearAverageRotationSpeed() {
        bitField0_ = (bitField0_ & ~0x00040000);
        averageRotationSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxOil = 20;
      private int maxOil_ ;
      /**
       * <code>optional int32 maxOil = 20;</code>
       *
       * <pre>
       *最高瞬时油耗（单位：0.01升/百公里）
       * </pre>
       */
      public boolean hasMaxOil() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 maxOil = 20;</code>
       *
       * <pre>
       *最高瞬时油耗（单位：0.01升/百公里）
       * </pre>
       */
      public int getMaxOil() {
        return maxOil_;
      }
      /**
       * <code>optional int32 maxOil = 20;</code>
       *
       * <pre>
       *最高瞬时油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder setMaxOil(int value) {
        bitField0_ |= 0x00080000;
        maxOil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxOil = 20;</code>
       *
       * <pre>
       *最高瞬时油耗（单位：0.01升/百公里）
       * </pre>
       */
      public Builder clearMaxOil() {
        bitField0_ = (bitField0_ & ~0x00080000);
        maxOil_ = 0;
        onChanged();
        return this;
      }

      // optional int32 idleTime = 21;
      private int idleTime_ ;
      /**
       * <code>optional int32 idleTime = 21;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public boolean hasIdleTime() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 idleTime = 21;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public int getIdleTime() {
        return idleTime_;
      }
      /**
       * <code>optional int32 idleTime = 21;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public Builder setIdleTime(int value) {
        bitField0_ |= 0x00100000;
        idleTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 idleTime = 21;</code>
       *
       * <pre>
       *怠速时长（单位:秒）
       * </pre>
       */
      public Builder clearIdleTime() {
        bitField0_ = (bitField0_ & ~0x00100000);
        idleTime_ = 0;
        onChanged();
        return this;
      }

      // optional .gboss.GpsBaseInfo startGps = 22;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo startGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> startGpsBuilder_;
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public boolean hasStartGps() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getStartGps() {
        if (startGpsBuilder_ == null) {
          return startGps_;
        } else {
          return startGpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setStartGps(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (startGpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startGps_ = value;
          onChanged();
        } else {
          startGpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setStartGps(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (startGpsBuilder_ == null) {
          startGps_ = builderForValue.build();
          onChanged();
        } else {
          startGpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder mergeStartGps(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (startGpsBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              startGps_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            startGps_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.newBuilder(startGps_).mergeFrom(value).buildPartial();
          } else {
            startGps_ = value;
          }
          onChanged();
        } else {
          startGpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder clearStartGps() {
        if (startGpsBuilder_ == null) {
          startGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          startGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder getStartGpsBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getStartGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getStartGpsOrBuilder() {
        if (startGpsBuilder_ != null) {
          return startGpsBuilder_.getMessageOrBuilder();
        } else {
          return startGps_;
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo startGps = 22;</code>
       *
       * <pre>
       *点火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getStartGpsFieldBuilder() {
        if (startGpsBuilder_ == null) {
          startGpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  startGps_,
                  getParentForChildren(),
                  isClean());
          startGps_ = null;
        }
        return startGpsBuilder_;
      }

      // optional .gboss.GpsReferPosition startReferPos = 23;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition startReferPos_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> startReferPosBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public boolean hasStartReferPos() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getStartReferPos() {
        if (startReferPosBuilder_ == null) {
          return startReferPos_;
        } else {
          return startReferPosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setStartReferPos(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (startReferPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startReferPos_ = value;
          onChanged();
        } else {
          startReferPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setStartReferPos(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (startReferPosBuilder_ == null) {
          startReferPos_ = builderForValue.build();
          onChanged();
        } else {
          startReferPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder mergeStartReferPos(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (startReferPosBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              startReferPos_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            startReferPos_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.newBuilder(startReferPos_).mergeFrom(value).buildPartial();
          } else {
            startReferPos_ = value;
          }
          onChanged();
        } else {
          startReferPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder clearStartReferPos() {
        if (startReferPosBuilder_ == null) {
          startReferPos_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          startReferPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder getStartReferPosBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getStartReferPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getStartReferPosOrBuilder() {
        if (startReferPosBuilder_ != null) {
          return startReferPosBuilder_.getMessageOrBuilder();
        } else {
          return startReferPos_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition startReferPos = 23;</code>
       *
       * <pre>
       *点火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getStartReferPosFieldBuilder() {
        if (startReferPosBuilder_ == null) {
          startReferPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  startReferPos_,
                  getParentForChildren(),
                  isClean());
          startReferPos_ = null;
        }
        return startReferPosBuilder_;
      }

      // optional .gboss.GpsBaseInfo endGps = 24;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo endGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> endGpsBuilder_;
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public boolean hasEndGps() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getEndGps() {
        if (endGpsBuilder_ == null) {
          return endGps_;
        } else {
          return endGpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setEndGps(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (endGpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endGps_ = value;
          onChanged();
        } else {
          endGpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setEndGps(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (endGpsBuilder_ == null) {
          endGps_ = builderForValue.build();
          onChanged();
        } else {
          endGpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder mergeEndGps(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (endGpsBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000) &&
              endGps_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            endGps_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.newBuilder(endGps_).mergeFrom(value).buildPartial();
          } else {
            endGps_ = value;
          }
          onChanged();
        } else {
          endGpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder clearEndGps() {
        if (endGpsBuilder_ == null) {
          endGps_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          endGpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder getEndGpsBuilder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getEndGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getEndGpsOrBuilder() {
        if (endGpsBuilder_ != null) {
          return endGpsBuilder_.getMessageOrBuilder();
        } else {
          return endGps_;
        }
      }
      /**
       * <code>optional .gboss.GpsBaseInfo endGps = 24;</code>
       *
       * <pre>
       *熄火gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getEndGpsFieldBuilder() {
        if (endGpsBuilder_ == null) {
          endGpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  endGps_,
                  getParentForChildren(),
                  isClean());
          endGps_ = null;
        }
        return endGpsBuilder_;
      }

      // optional .gboss.GpsReferPosition endReferPos = 25;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition endReferPos_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> endReferPosBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public boolean hasEndReferPos() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getEndReferPos() {
        if (endReferPosBuilder_ == null) {
          return endReferPos_;
        } else {
          return endReferPosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setEndReferPos(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (endReferPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endReferPos_ = value;
          onChanged();
        } else {
          endReferPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setEndReferPos(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (endReferPosBuilder_ == null) {
          endReferPos_ = builderForValue.build();
          onChanged();
        } else {
          endReferPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder mergeEndReferPos(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (endReferPosBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              endReferPos_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            endReferPos_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.newBuilder(endReferPos_).mergeFrom(value).buildPartial();
          } else {
            endReferPos_ = value;
          }
          onChanged();
        } else {
          endReferPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder clearEndReferPos() {
        if (endReferPosBuilder_ == null) {
          endReferPos_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          endReferPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder getEndReferPosBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getEndReferPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getEndReferPosOrBuilder() {
        if (endReferPosBuilder_ != null) {
          return endReferPosBuilder_.getMessageOrBuilder();
        } else {
          return endReferPos_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition endReferPos = 25;</code>
       *
       * <pre>
       *熄火参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getEndReferPosFieldBuilder() {
        if (endReferPosBuilder_ == null) {
          endReferPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  endReferPos_,
                  getParentForChildren(),
                  isClean());
          endReferPos_ = null;
        }
        return endReferPosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gboss.TravelInfo)
    }

    static {
      defaultInstance = new TravelInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.TravelInfo)
  }

  public interface FaultInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required int64 faultTime = 2;
    /**
     * <code>required int64 faultTime = 2;</code>
     *
     * <pre>
     *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
     * </pre>
     */
    boolean hasFaultTime();
    /**
     * <code>required int64 faultTime = 2;</code>
     *
     * <pre>
     *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
     * </pre>
     */
    long getFaultTime();

    // repeated string faultCode = 3;
    /**
     * <code>repeated string faultCode = 3;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    java.util.List<java.lang.String>
    getFaultCodeList();
    /**
     * <code>repeated string faultCode = 3;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    int getFaultCodeCount();
    /**
     * <code>repeated string faultCode = 3;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    java.lang.String getFaultCode(int index);
    /**
     * <code>repeated string faultCode = 3;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    com.google.protobuf.ByteString
        getFaultCodeBytes(int index);
  }
  /**
   * Protobuf type {@code gboss.FaultInfo}
   *
   * <pre>
   **
   *  模块故障信息(Fault)
   * </pre>
   */
  public static final class FaultInfo extends
      com.google.protobuf.GeneratedMessage
      implements FaultInfoOrBuilder {
    // Use FaultInfo.newBuilder() to construct.
    private FaultInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FaultInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FaultInfo defaultInstance;
    public static FaultInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FaultInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FaultInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              faultTime_ = input.readInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                faultCode_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              faultCode_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          faultCode_ = new com.google.protobuf.UnmodifiableLazyStringList(faultCode_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_FaultInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_FaultInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FaultInfo> PARSER =
        new com.google.protobuf.AbstractParser<FaultInfo>() {
      public FaultInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FaultInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FaultInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 faultTime = 2;
    public static final int FAULTTIME_FIELD_NUMBER = 2;
    private long faultTime_;
    /**
     * <code>required int64 faultTime = 2;</code>
     *
     * <pre>
     *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
     * </pre>
     */
    public boolean hasFaultTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 faultTime = 2;</code>
     *
     * <pre>
     *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
     * </pre>
     */
    public long getFaultTime() {
      return faultTime_;
    }

    // repeated string faultCode = 3;
    public static final int FAULTCODE_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList faultCode_;
    /**
     * <code>repeated string faultCode = 3;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    public java.util.List<java.lang.String>
        getFaultCodeList() {
      return faultCode_;
    }
    /**
     * <code>repeated string faultCode = 3;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    public int getFaultCodeCount() {
      return faultCode_.size();
    }
    /**
     * <code>repeated string faultCode = 3;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    public java.lang.String getFaultCode(int index) {
      return faultCode_.get(index);
    }
    /**
     * <code>repeated string faultCode = 3;</code>
     *
     * <pre>
     *故障码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFaultCodeBytes(int index) {
      return faultCode_.getByteString(index);
    }

    private void initFields() {
      callLetter_ = "";
      faultTime_ = 0L;
      faultCode_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFaultTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, faultTime_);
      }
      for (int i = 0; i < faultCode_.size(); i++) {
        output.writeBytes(3, faultCode_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, faultTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < faultCode_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(faultCode_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getFaultCodeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.FaultInfo}
     *
     * <pre>
     **
     *  模块故障信息(Fault)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_FaultInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_FaultInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        faultTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        faultCode_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_FaultInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.faultTime_ = faultTime_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          faultCode_ = new com.google.protobuf.UnmodifiableLazyStringList(
              faultCode_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.faultCode_ = faultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasFaultTime()) {
          setFaultTime(other.getFaultTime());
        }
        if (!other.faultCode_.isEmpty()) {
          if (faultCode_.isEmpty()) {
            faultCode_ = other.faultCode_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFaultCodeIsMutable();
            faultCode_.addAll(other.faultCode_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasFaultTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.FaultInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required int64 faultTime = 2;
      private long faultTime_ ;
      /**
       * <code>required int64 faultTime = 2;</code>
       *
       * <pre>
       *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
       * </pre>
       */
      public boolean hasFaultTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 faultTime = 2;</code>
       *
       * <pre>
       *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
       * </pre>
       */
      public long getFaultTime() {
        return faultTime_;
      }
      /**
       * <code>required int64 faultTime = 2;</code>
       *
       * <pre>
       *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder setFaultTime(long value) {
        bitField0_ |= 0x00000002;
        faultTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 faultTime = 2;</code>
       *
       * <pre>
       *故障时间(从1970-1-1 0:0:0开始的秒数，格林威治时间), 为了提高处理速度,不用字符串
       * </pre>
       */
      public Builder clearFaultTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        faultTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated string faultCode = 3;
      private com.google.protobuf.LazyStringList faultCode_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFaultCodeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          faultCode_ = new com.google.protobuf.LazyStringArrayList(faultCode_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string faultCode = 3;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public java.util.List<java.lang.String>
          getFaultCodeList() {
        return java.util.Collections.unmodifiableList(faultCode_);
      }
      /**
       * <code>repeated string faultCode = 3;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public int getFaultCodeCount() {
        return faultCode_.size();
      }
      /**
       * <code>repeated string faultCode = 3;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public java.lang.String getFaultCode(int index) {
        return faultCode_.get(index);
      }
      /**
       * <code>repeated string faultCode = 3;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFaultCodeBytes(int index) {
        return faultCode_.getByteString(index);
      }
      /**
       * <code>repeated string faultCode = 3;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder setFaultCode(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFaultCodeIsMutable();
        faultCode_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string faultCode = 3;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder addFaultCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFaultCodeIsMutable();
        faultCode_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string faultCode = 3;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder addAllFaultCode(
          java.lang.Iterable<java.lang.String> values) {
        ensureFaultCodeIsMutable();
        super.addAll(values, faultCode_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string faultCode = 3;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder clearFaultCode() {
        faultCode_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string faultCode = 3;</code>
       *
       * <pre>
       *故障码
       * </pre>
       */
      public Builder addFaultCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFaultCodeIsMutable();
        faultCode_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.FaultInfo)
    }

    static {
      defaultInstance = new FaultInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.FaultInfo)
  }

  public interface AlarmInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string callLetter = 1;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    boolean hasCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    java.lang.String getCallLetter();
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCallLetterBytes();

    // required .gboss.GpsBaseInfo baseInfo = 2;
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    boolean hasBaseInfo();
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getBaseInfo();
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder();

    // optional .gboss.GpsReferPosition referPosition = 3;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    boolean hasReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getReferPosition();
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder();

    // optional bytes content = 4;
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    com.google.protobuf.ByteString getContent();

    // optional int32 history = 5;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    boolean hasHistory();
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    int getHistory();
  }
  /**
   * Protobuf type {@code gboss.AlarmInfo}
   *
   * <pre>
   *
   * 终端警情完整信息(和GPSInfo一样), 但为了以后可能不同，另设结构
   * </pre>
   */
  public static final class AlarmInfo extends
      com.google.protobuf.GeneratedMessage
      implements AlarmInfoOrBuilder {
    // Use AlarmInfo.newBuilder() to construct.
    private AlarmInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AlarmInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AlarmInfo defaultInstance;
    public static AlarmInfo getDefaultInstance() {
      return defaultInstance;
    }

    public AlarmInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AlarmInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              callLetter_ = input.readBytes();
              break;
            }
            case 18: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = baseInfo_.toBuilder();
              }
              baseInfo_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseInfo_);
                baseInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = referPosition_.toBuilder();
              }
              referPosition_ = input.readMessage(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referPosition_);
                referPosition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              content_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              history_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<AlarmInfo> PARSER =
        new com.google.protobuf.AbstractParser<AlarmInfo>() {
      public AlarmInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AlarmInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AlarmInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string callLetter = 1;
    public static final int CALLLETTER_FIELD_NUMBER = 1;
    private java.lang.Object callLetter_;
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public boolean hasCallLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public java.lang.String getCallLetter() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callLetter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string callLetter = 1;</code>
     *
     * <pre>
     *车辆呼号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCallLetterBytes() {
      java.lang.Object ref = callLetter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callLetter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .gboss.GpsBaseInfo baseInfo = 2;
    public static final int BASEINFO_FIELD_NUMBER = 2;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo baseInfo_;
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public boolean hasBaseInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
      return baseInfo_;
    }
    /**
     * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
     *
     * <pre>
     *gps基本信息，请参考基本信息protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
      return baseInfo_;
    }

    // optional .gboss.GpsReferPosition referPosition = 3;
    public static final int REFERPOSITION_FIELD_NUMBER = 3;
    private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition referPosition_;
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public boolean hasReferPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
      return referPosition_;
    }
    /**
     * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
     *
     * <pre>
     *参考位置，请参考参考位置protobuf定义
     * </pre>
     */
    public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
      return referPosition_;
    }

    // optional bytes content = 4;
    public static final int CONTENT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes content = 4;</code>
     *
     * <pre>
     *车台上传的原码，不转换成BCD码
     * </pre>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    // optional int32 history = 5;
    public static final int HISTORY_FIELD_NUMBER = 5;
    private int history_;
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public boolean hasHistory() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 history = 5;</code>
     *
     * <pre>
     *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
     * </pre>
     */
    public int getHistory() {
      return history_;
    }

    private void initFields() {
      callLetter_ = "";
      baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      referPosition_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      content_ = com.google.protobuf.ByteString.EMPTY;
      history_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCallLetter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBaseInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBaseInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasReferPosition()) {
        if (!getReferPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, referPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, content_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, history_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCallLetterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, baseInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, referPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, content_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, history_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gboss.AlarmInfo}
     *
     * <pre>
     *
     * 终端警情完整信息(和GPSInfo一样), 但为了以后可能不同，另设结构
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo.class, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo.Builder.class);
      }

      // Construct using cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBaseInfoFieldBuilder();
          getReferPositionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callLetter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        history_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.internal_static_gboss_AlarmInfo_descriptor;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo getDefaultInstanceForType() {
        return cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo.getDefaultInstance();
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo build() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo buildPartial() {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo result = new cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callLetter_ = callLetter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (baseInfoBuilder_ == null) {
          result.baseInfo_ = baseInfo_;
        } else {
          result.baseInfo_ = baseInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (referPositionBuilder_ == null) {
          result.referPosition_ = referPosition_;
        } else {
          result.referPosition_ = referPositionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.history_ = history_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo) {
          return mergeFrom((cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo other) {
        if (other == cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo.getDefaultInstance()) return this;
        if (other.hasCallLetter()) {
          bitField0_ |= 0x00000001;
          callLetter_ = other.callLetter_;
          onChanged();
        }
        if (other.hasBaseInfo()) {
          mergeBaseInfo(other.getBaseInfo());
        }
        if (other.hasReferPosition()) {
          mergeReferPosition(other.getReferPosition());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasHistory()) {
          setHistory(other.getHistory());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCallLetter()) {
          
          return false;
        }
        if (!hasBaseInfo()) {
          
          return false;
        }
        if (!getBaseInfo().isInitialized()) {
          
          return false;
        }
        if (hasReferPosition()) {
          if (!getReferPosition().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.chinagps.gboss.comcenter.buff.GBossDataBuff.AlarmInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string callLetter = 1;
      private java.lang.Object callLetter_ = "";
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public boolean hasCallLetter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public java.lang.String getCallLetter() {
        java.lang.Object ref = callLetter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          callLetter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCallLetterBytes() {
        java.lang.Object ref = callLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder clearCallLetter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callLetter_ = getDefaultInstance().getCallLetter();
        onChanged();
        return this;
      }
      /**
       * <code>required string callLetter = 1;</code>
       *
       * <pre>
       *车辆呼号
       * </pre>
       */
      public Builder setCallLetterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        callLetter_ = value;
        onChanged();
        return this;
      }

      // required .gboss.GpsBaseInfo baseInfo = 2;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> baseInfoBuilder_;
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public boolean hasBaseInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo getBaseInfo() {
        if (baseInfoBuilder_ == null) {
          return baseInfo_;
        } else {
          return baseInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseInfo_ = value;
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder setBaseInfo(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder builderForValue) {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder mergeBaseInfo(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo value) {
        if (baseInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              baseInfo_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance()) {
            baseInfo_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.newBuilder(baseInfo_).mergeFrom(value).buildPartial();
          } else {
            baseInfo_ = value;
          }
          onChanged();
        } else {
          baseInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public Builder clearBaseInfo() {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.getDefaultInstance();
          onChanged();
        } else {
          baseInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder getBaseInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder getBaseInfoOrBuilder() {
        if (baseInfoBuilder_ != null) {
          return baseInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseInfo_;
        }
      }
      /**
       * <code>required .gboss.GpsBaseInfo baseInfo = 2;</code>
       *
       * <pre>
       *gps基本信息，请参考基本信息protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder> 
          getBaseInfoFieldBuilder() {
        if (baseInfoBuilder_ == null) {
          baseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfo.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsBaseInfoOrBuilder>(
                  baseInfo_,
                  getParentForChildren(),
                  isClean());
          baseInfo_ = null;
        }
        return baseInfoBuilder_;
      }

      // optional .gboss.GpsReferPosition referPosition = 3;
      private cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition referPosition_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> referPositionBuilder_;
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public boolean hasReferPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition getReferPosition() {
        if (referPositionBuilder_ == null) {
          return referPosition_;
        } else {
          return referPositionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referPosition_ = value;
          onChanged();
        } else {
          referPositionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder setReferPosition(
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder builderForValue) {
        if (referPositionBuilder_ == null) {
          referPosition_ = builderForValue.build();
          onChanged();
        } else {
          referPositionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder mergeReferPosition(cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition value) {
        if (referPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              referPosition_ != cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance()) {
            referPosition_ =
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.newBuilder(referPosition_).mergeFrom(value).buildPartial();
          } else {
            referPosition_ = value;
          }
          onChanged();
        } else {
          referPositionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public Builder clearReferPosition() {
        if (referPositionBuilder_ == null) {
          referPosition_ = cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.getDefaultInstance();
          onChanged();
        } else {
          referPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder getReferPositionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getReferPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      public cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder getReferPositionOrBuilder() {
        if (referPositionBuilder_ != null) {
          return referPositionBuilder_.getMessageOrBuilder();
        } else {
          return referPosition_;
        }
      }
      /**
       * <code>optional .gboss.GpsReferPosition referPosition = 3;</code>
       *
       * <pre>
       *参考位置，请参考参考位置protobuf定义
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder> 
          getReferPositionFieldBuilder() {
        if (referPositionBuilder_ == null) {
          referPositionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPosition.Builder, cc.chinagps.gboss.comcenter.buff.GBossDataBuff.GpsReferPositionOrBuilder>(
                  referPosition_,
                  getParentForChildren(),
                  isClean());
          referPosition_ = null;
        }
        return referPositionBuilder_;
      }

      // optional bytes content = 4;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes content = 4;</code>
       *
       * <pre>
       *车台上传的原码，不转换成BCD码
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // optional int32 history = 5;
      private int history_ ;
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public boolean hasHistory() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public int getHistory() {
        return history_;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder setHistory(int value) {
        bitField0_ |= 0x00000010;
        history_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 history = 5;</code>
       *
       * <pre>
       *是否是黑匣子记录（0、或不存在表示是实时GPS，1:表示是黑匣子记录, 2:表示盲点补传）
       * </pre>
       */
      public Builder clearHistory() {
        bitField0_ = (bitField0_ & ~0x00000010);
        history_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gboss.AlarmInfo)
    }

    static {
      defaultInstance = new AlarmInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gboss.AlarmInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_MapEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_MapEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_OBDInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_OBDInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsSimpleInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsSimpleInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsBaseInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsBaseInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsRoadInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsRoadInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsPointInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsPointInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsReferPosition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsReferPosition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_GpsInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_GpsInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_OperateDataBaseInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_OperateDataBaseInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_OperateData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_OperateData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_ShortMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_ShortMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_TravelInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_TravelInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_FaultInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_FaultInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gboss_AlarmInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gboss_AlarmInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013GBoss.proto\022\005gboss\"&\n\010MapEntry\022\013\n\003key\030" +
      "\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\334\002\n\007OBDInfo\022\021\n\trema" +
      "inOil\030\001 \001(\005\022\030\n\020remainPercentOil\030\002 \001(\005\022\022\n" +
      "\naverageOil\030\003 \001(\005\022\017\n\007hourOil\030\004 \001(\005\022\025\n\rto" +
      "talDistance\030\005 \001(\005\022\030\n\020waterTemperature\030\006 " +
      "\001(\005\022\021\n\treviseOil\030\007 \001(\005\022\025\n\rrotationSpeed\030" +
      "\010 \001(\005\022\034\n\024intakeAirTemperature\030\t \001(\005\022\024\n\014a" +
      "irDischange\030\n \001(\005\022$\n\013otherInfoes\030\013 \003(\0132\017" +
      ".gboss.MapEntry\022\022\n\ncallLetter\030\014 \001(\t\022\017\n\007g" +
      "psTime\030\r \001(\003\022\r\n\005speed\030\016 \001(\005\022\026\n\016remainDis",
      "tance\030\017 \001(\005\"\336\001\n\rGpsSimpleInfo\022\017\n\007gpsTime" +
      "\030\001 \002(\003\022\013\n\003loc\030\002 \002(\010\022\013\n\003lat\030\003 \002(\005\022\013\n\003lng\030" +
      "\004 \002(\005\022\r\n\005speed\030\005 \002(\005\022\016\n\006course\030\006 \002(\005\022\016\n\006" +
      "status\030\007 \003(\005\022\025\n\rtotalDistance\030\010 \001(\005\022\013\n\003o" +
      "il\030\t \001(\005\022\030\n\020remainPercentOil\030\n \001(\005\022\020\n\010ca" +
      "nspeed\030\013 \001(\005\022\026\n\016remainDistance\030\014 \001(\005\"\240\002\n" +
      "\013GpsBaseInfo\022\017\n\007gpsTime\030\001 \002(\003\022\013\n\003loc\030\002 \002" +
      "(\010\022\013\n\003lat\030\003 \002(\005\022\013\n\003lng\030\004 \002(\005\022\r\n\005speed\030\005 " +
      "\002(\005\022\016\n\006course\030\006 \002(\005\022\016\n\006status\030\007 \003(\005\022\025\n\rt" +
      "otalDistance\030\010 \001(\005\022\013\n\003oil\030\t \001(\005\022\022\n\noilPe",
      "rcent\030\n \001(\005\022\024\n\014temperature1\030\013 \001(\005\022\024\n\014tem" +
      "perature2\030\014 \001(\005\022%\n\014appendParams\030\r \003(\0132\017." +
      "gboss.MapEntry\022\037\n\007obdInfo\030\016 \001(\0132\016.gboss." +
      "OBDInfo\"n\n\013GpsRoadInfo\022\014\n\004name\030\001 \002(\t\022\r\n\005" +
      "level\030\002 \002(\005\022\020\n\010distance\030\003 \002(\005\022\n\n\002id\030\004 \001(" +
      "\005\022\021\n\tlatOnRoad\030\005 \001(\005\022\021\n\tlngOnRoad\030\006 \001(\005\"" +
      "H\n\014GpsPointInfo\022\014\n\004name\030\001 \002(\t\022\014\n\004type\030\002 " +
      "\002(\005\022\020\n\010distance\030\003 \002(\005\022\n\n\002id\030\004 \001(\005\"\212\001\n\020Gp" +
      "sReferPosition\022\020\n\010province\030\001 \002(\t\022\014\n\004city" +
      "\030\002 \002(\t\022\016\n\006county\030\003 \002(\t\022!\n\005roads\030\004 \003(\0132\022.",
      "gboss.GpsRoadInfo\022#\n\006points\030\005 \003(\0132\023.gbos" +
      "s.GpsPointInfo\"\225\001\n\007GpsInfo\022\022\n\ncallLetter" +
      "\030\001 \002(\t\022$\n\010baseInfo\030\002 \002(\0132\022.gboss.GpsBase" +
      "Info\022.\n\rreferPosition\030\003 \001(\0132\027.gboss.GpsR" +
      "eferPosition\022\017\n\007content\030\004 \001(\014\022\017\n\007history" +
      "\030\005 \001(\005\"\260\002\n\023OperateDataBaseInfo\022\r\n\005price\030" +
      "\001 \002(\005\022\021\n\tcountTime\030\002 \002(\005\022\024\n\014operateMoney" +
      "\030\003 \002(\005\022\023\n\013operateMile\030\004 \002(\005\022\020\n\010nullMile\030" +
      "\005 \001(\005\022\025\n\roverSpeedMile\030\006 \001(\005\022\026\n\016overSpee" +
      "dCount\030\007 \001(\005\022\025\n\rpowerOffCount\030\010 \001(\005\022\024\n\014p",
      "owerOffTime\030\t \001(\005\022\022\n\nsequenceNo\030\n \001(\005\022%\n" +
      "\014appendParams\030\013 \003(\0132\017.gboss.MapEntry\022\020\n\010" +
      "perprice\030\014 \001(\005\022\021\n\tlicenseno\030\r \001(\t\"\200\002\n\013Op" +
      "erateData\022\022\n\ncallLetter\030\001 \002(\t\022,\n\010baseInf" +
      "o\030\002 \002(\0132\032.gboss.OperateDataBaseInfo\022$\n\010s" +
      "tartGps\030\003 \002(\0132\022.gboss.GpsBaseInfo\022)\n\010sta" +
      "rtPoi\030\004 \001(\0132\027.gboss.GpsReferPosition\022#\n\007" +
      "stopGps\030\005 \002(\0132\022.gboss.GpsBaseInfo\022(\n\007sto" +
      "pPoi\030\006 \001(\0132\027.gboss.GpsReferPosition\022\017\n\007c" +
      "ontent\030\007 \001(\014\"A\n\014ShortMessage\022\022\n\ncallLett",
      "er\030\001 \002(\t\022\013\n\003msg\030\002 \002(\t\022\020\n\010recvTime\030\003 \001(\003\"" +
      "\213\005\n\nTravelInfo\022\022\n\ncallLetter\030\001 \002(\t\022\021\n\tst" +
      "artTime\030\002 \002(\003\022\017\n\007endTime\030\003 \002(\003\022\020\n\010distan" +
      "ce\030\004 \001(\005\022\020\n\010maxSpeed\030\005 \001(\005\022\025\n\roverSpeedT" +
      "ime\030\006 \001(\005\022\027\n\017quickBrakeCount\030\007 \001(\005\022\033\n\023em" +
      "ergencyBrakeCount\030\010 \001(\005\022\031\n\021quickSpeedUpC" +
      "ount\030\t \001(\005\022\035\n\025emergencySpeedUpCount\030\n \001(" +
      "\005\022\024\n\014averageSpeed\030\013 \001(\005\022\033\n\023maxWaterTempe" +
      "rature\030\014 \001(\005\022\030\n\020maxRotationSpeed\030\r \001(\005\022\017" +
      "\n\007voltage\030\016 \001(\005\022\020\n\010totalOil\030\017 \001(\005\022\022\n\nave",
      "rageOil\030\020 \001(\005\022\030\n\020tiredDrivingTime\030\021 \001(\005\022" +
      "\024\n\014serialNumber\030\022 \001(\005\022\034\n\024averageRotation" +
      "Speed\030\023 \001(\005\022\016\n\006maxOil\030\024 \001(\005\022\020\n\010idleTime\030" +
      "\025 \001(\005\022$\n\010startGps\030\026 \001(\0132\022.gboss.GpsBaseI" +
      "nfo\022.\n\rstartReferPos\030\027 \001(\0132\027.gboss.GpsRe" +
      "ferPosition\022\"\n\006endGps\030\030 \001(\0132\022.gboss.GpsB" +
      "aseInfo\022,\n\013endReferPos\030\031 \001(\0132\027.gboss.Gps" +
      "ReferPosition\"E\n\tFaultInfo\022\022\n\ncallLetter" +
      "\030\001 \002(\t\022\021\n\tfaultTime\030\002 \002(\003\022\021\n\tfaultCode\030\003" +
      " \003(\t\"\227\001\n\tAlarmInfo\022\022\n\ncallLetter\030\001 \002(\t\022$",
      "\n\010baseInfo\030\002 \002(\0132\022.gboss.GpsBaseInfo\022.\n\r" +
      "referPosition\030\003 \001(\0132\027.gboss.GpsReferPosi" +
      "tion\022\017\n\007content\030\004 \001(\014\022\017\n\007history\030\005 \001(\005B1" +
      "\n cc.chinagps.gboss.comcenter.buffB\rGBos" +
      "sDataBuff"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_gboss_MapEntry_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_gboss_MapEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_MapEntry_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_gboss_OBDInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_gboss_OBDInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_OBDInfo_descriptor,
              new java.lang.String[] { "RemainOil", "RemainPercentOil", "AverageOil", "HourOil", "TotalDistance", "WaterTemperature", "ReviseOil", "RotationSpeed", "IntakeAirTemperature", "AirDischange", "OtherInfoes", "CallLetter", "GpsTime", "Speed", "RemainDistance", });
          internal_static_gboss_GpsSimpleInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_gboss_GpsSimpleInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsSimpleInfo_descriptor,
              new java.lang.String[] { "GpsTime", "Loc", "Lat", "Lng", "Speed", "Course", "Status", "TotalDistance", "Oil", "RemainPercentOil", "Canspeed", "RemainDistance", });
          internal_static_gboss_GpsBaseInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_gboss_GpsBaseInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsBaseInfo_descriptor,
              new java.lang.String[] { "GpsTime", "Loc", "Lat", "Lng", "Speed", "Course", "Status", "TotalDistance", "Oil", "OilPercent", "Temperature1", "Temperature2", "AppendParams", "ObdInfo", });
          internal_static_gboss_GpsRoadInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_gboss_GpsRoadInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsRoadInfo_descriptor,
              new java.lang.String[] { "Name", "Level", "Distance", "Id", "LatOnRoad", "LngOnRoad", });
          internal_static_gboss_GpsPointInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_gboss_GpsPointInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsPointInfo_descriptor,
              new java.lang.String[] { "Name", "Type", "Distance", "Id", });
          internal_static_gboss_GpsReferPosition_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_gboss_GpsReferPosition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsReferPosition_descriptor,
              new java.lang.String[] { "Province", "City", "County", "Roads", "Points", });
          internal_static_gboss_GpsInfo_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_gboss_GpsInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_GpsInfo_descriptor,
              new java.lang.String[] { "CallLetter", "BaseInfo", "ReferPosition", "Content", "History", });
          internal_static_gboss_OperateDataBaseInfo_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_gboss_OperateDataBaseInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_OperateDataBaseInfo_descriptor,
              new java.lang.String[] { "Price", "CountTime", "OperateMoney", "OperateMile", "NullMile", "OverSpeedMile", "OverSpeedCount", "PowerOffCount", "PowerOffTime", "SequenceNo", "AppendParams", "Perprice", "Licenseno", });
          internal_static_gboss_OperateData_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_gboss_OperateData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_OperateData_descriptor,
              new java.lang.String[] { "CallLetter", "BaseInfo", "StartGps", "StartPoi", "StopGps", "StopPoi", "Content", });
          internal_static_gboss_ShortMessage_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_gboss_ShortMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_ShortMessage_descriptor,
              new java.lang.String[] { "CallLetter", "Msg", "RecvTime", });
          internal_static_gboss_TravelInfo_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_gboss_TravelInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_TravelInfo_descriptor,
              new java.lang.String[] { "CallLetter", "StartTime", "EndTime", "Distance", "MaxSpeed", "OverSpeedTime", "QuickBrakeCount", "EmergencyBrakeCount", "QuickSpeedUpCount", "EmergencySpeedUpCount", "AverageSpeed", "MaxWaterTemperature", "MaxRotationSpeed", "Voltage", "TotalOil", "AverageOil", "TiredDrivingTime", "SerialNumber", "AverageRotationSpeed", "MaxOil", "IdleTime", "StartGps", "StartReferPos", "EndGps", "EndReferPos", });
          internal_static_gboss_FaultInfo_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_gboss_FaultInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_FaultInfo_descriptor,
              new java.lang.String[] { "CallLetter", "FaultTime", "FaultCode", });
          internal_static_gboss_AlarmInfo_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_gboss_AlarmInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gboss_AlarmInfo_descriptor,
              new java.lang.String[] { "CallLetter", "BaseInfo", "ReferPosition", "Content", "History", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
